Grouper web service sample of service: getAttributeAssignments, WsSampleGetAttributeAssignmentsRestLite, manually written lite/rest, format: json, for version: v1_6_000


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouperWs/servicesRest/json/v1_6_000/attributeAssignments HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.1
Host: localhost:8092
Content-Length: 206
Content-Type: text/x-json; charset=UTF-8

{
  "WsRestGetAttributeAssignmentsLiteRequest":{
    "actAsSubjectId":"GrouperSystem",
    "attributeAssignType":"group",
    "includeAssignmentsOnAssignments":"T",
    "wsAttributeDefNameName":"test:testAttributeAssignDefName"
  }
}


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Set-Cookie: JSESSIONID=xxxxxxxxxxxxxxxxxxxxxxxx; Path=/grouperWs
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: text/x-json;charset=UTF-8
Content-Length: 3084
Date: Fri, 09 Apr 2010 06:22:50 GMT
Connection: close

{
  "WsGetAttributeAssignmentsResults":{
    "responseMetadata":{
      "millis":"250",
      "serverVersion":"v1_6_000"
    },
    "resultMetadata":{
      "resultCode":"SUCCESS",
      "resultMessage":", Found 2 results.",
      "success":"T"
    },
    "wsAttributeAssigns":[
      {
        "attributeAssignActionId":"7dc9da2c8b5c45c0b120fcdf9d6e7cd3",
        "attributeAssignActionName":"assign",
        "attributeAssignActionType":"immediate",
        "attributeAssignType":"group",
        "attributeDefId":"c1574f42d99341d9ae52927388c63196",
        "attributeDefName":"test:testAttributeAssignDefNameDef",
        "attributeDefNameId":"a94abea325734966ae92acf73a3aec38",
        "attributeDefNameName":"test:testAttributeAssignDefName",
        "createdOn":"2010/04/09 02:22:49.234",
        "enabled":"T",
        "id":"c48b8621f5cc40e4994469dc98cc5e94",
        "lastUpdated":"2010/04/09 02:22:49.234",
        "ownerGroupId":"86be2e0ee09a4538ac4d17f9e3769ab6",
        "ownerGroupName":"test:groupTestAttrAssign",
        "wsAttributeAssignValues":[
          {
            "id":"26eb43b886444873b98938ac82194c3a",
            "valueSystem":"15"
          },
          {
            "id":"7d72a103b91e4f1db62970a60fd6f85d",
            "valueSystem":"5"
          },
          {
            "id":"8e606597f7fe496989e39e8e85618cf5",
            "valueSystem":"5"
          }
        ]
        
      },
      {
        "attributeAssignActionId":"0bb00b88c2f449139afbf60d9cae035d",
        "attributeAssignActionName":"assign",
        "attributeAssignActionType":"immediate",
        "attributeAssignType":"group_asgn",
        "attributeDefId":"a68c20e55a654b1084a0f1fd3ae032f3",
        "attributeDefName":"test:testAttributeAssignAssignNameDef",
        "attributeDefNameId":"34d2c2f7ce6b49cbb7ead06f04d71b7c",
        "attributeDefNameName":"test:testAttributeAssignAssignName",
        "createdOn":"2010/04/09 02:22:49.273",
        "enabled":"T",
        "id":"5fad6b9c47404740b5b128f459701fd8",
        "lastUpdated":"2010/04/09 02:22:49.273",
        "ownerAttributeAssignId":"c48b8621f5cc40e4994469dc98cc5e94"
      }
    ]
    ,
    "wsAttributeDefNames":[
      {
        "attributeDefId":"c1574f42d99341d9ae52927388c63196",
        "attributeDefName":"test:testAttributeAssignDefNameDef",
        "displayExtension":"testAttributeAssignDefName",
        "displayName":"test:testAttributeAssignDefName",
        "extension":"testAttributeAssignDefName",
        "name":"test:testAttributeAssignDefName",
        "uuid":"a94abea325734966ae92acf73a3aec38"
      },
      {
        "attributeDefId":"a68c20e55a654b1084a0f1fd3ae032f3",
        "attributeDefName":"test:testAttributeAssignAssignNameDef",
        "displayExtension":"testAttributeAssignAssignName",
        "displayName":"test:testAttributeAssignAssignName",
        "extension":"testAttributeAssignAssignName",
        "name":"test:testAttributeAssignAssignName",
        "uuid":"34d2c2f7ce6b49cbb7ead06f04d71b7c"
      }
    ]
    ,
    "wsAttributeDefs":[
      {
        "attributeDefType":"attr",
        "extension":"testAttributeAssignDefNameDef",
        "multiAssignable":"F",
        "multiValued":"T",
        "name":"test:testAttributeAssignDefNameDef",
        "uuid":"c1574f42d99341d9ae52927388c63196",
        "valueType":"integer"
      },
      {
        "attributeDefType":"attr",
        "extension":"testAttributeAssignAssignNameDef",
        "multiAssignable":"F",
        "multiValued":"F",
        "name":"test:testAttributeAssignAssignNameDef",
        "uuid":"a68c20e55a654b1084a0f1fd3ae032f3",
        "valueType":"marker"
      }
    ]
    ,
    "wsGroups":[
      {
        "description":"description",
        "displayExtension":"groupTestAttrAssign",
        "displayName":"test:groupTestAttrAssign",
        "extension":"groupTestAttrAssign",
        "name":"test:groupTestAttrAssign",
        "uuid":"86be2e0ee09a4538ac4d17f9e3769ab6"
      }
    ]
    ,
    "wsMemberships":[
    ]
    ,
    "wsStems":[
    ]
    ,
    "wsSubjects":[
    ]
  }
}


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


package edu.internet2.middleware.grouper.ws.samples.rest.attribute;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.ws.rest.attribute.WsRestGetAttributeAssignmentsLiteRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.soap.WsGetAttributeAssignmentsResults;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleGetAttributeAssignmentsRestLite implements WsSampleRest {

  /**
   * get attribute assignments lite web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  @SuppressWarnings("deprecation")
  public static void getAttributeAssignmentsLite(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();
      
      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));

      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      PostMethod method = new PostMethod(
          RestClientSettings.URL + "/" + wsSampleRestType.getWsLiteResponseContentType().name()
            + "/" + RestClientSettings.VERSION  
            + "/attributeAssignments");

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER, 
          RestClientSettings.PASS);
      
      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT), defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestGetAttributeAssignmentsLiteRequest wsRestGetAttributeAssignmentsLiteRequest 
        = new WsRestGetAttributeAssignmentsLiteRequest();

      // set the act as id
      wsRestGetAttributeAssignmentsLiteRequest.setActAsSubjectId("GrouperSystem");
      wsRestGetAttributeAssignmentsLiteRequest.setAttributeAssignType("group");
      wsRestGetAttributeAssignmentsLiteRequest.setIncludeAssignmentsOnAssignments("T");
      wsRestGetAttributeAssignmentsLiteRequest.setWsAttributeDefNameName("test:testAttributeAssignDefName");


      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(wsRestGetAttributeAssignmentsLiteRequest);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));


      
      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      //convert to object (from xhtml, xml, json, etc)
      WsGetAttributeAssignmentsResults wsGetAttributeAssignmentsResults = (WsGetAttributeAssignmentsResults)wsSampleRestType
        .getWsLiteResponseContentType().parseString(response);
      
      String resultMessage = wsGetAttributeAssignmentsResults.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println("Server version: " + wsGetAttributeAssignmentsResults.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  @SuppressWarnings("unchecked")
  public static void main(String[] args) {
    getAttributeAssignmentsLite(WsSampleRestType.xml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    getAttributeAssignmentsLite(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    return true;
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: v1_6_000, result code: SUCCESS, result message: , Found 2 results.
