Grouper web service sample of service: assignAttributes, WsSampleAssignAttributesRestLite, manually written lite/rest, format: json, for version: v1_6_000


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouperWs/servicesRest/json/v1_6_000/attributeAssignments HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.1
Host: localhost:8092
Content-Length: 248
Content-Type: text/x-json; charset=UTF-8

{
  "WsRestAssignAttributesLiteRequest":{
    "actAsSubjectId":"GrouperSystem",
    "attributeAssignOperation":"assign_attr",
    "attributeAssignType":"group",
    "wsAttributeDefNameName":"test:testAttributeAssignDefName",
    "wsOwnerGroupName":"test:groupTestAttrAssign"
  }
}


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Set-Cookie: JSESSIONID=xxxxxxxxxxxxxxxxxxxxxxxx; Path=/grouperWs
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: text/x-json;charset=UTF-8
Content-Length: 1962
Date: Tue, 13 Apr 2010 16:30:12 GMT
Connection: close

{
  "WsAssignAttributesLiteResults":{
    "responseMetadata":{
      "millis":"155",
      "serverVersion":"v1_6_000"
    },
    "resultMetadata":{
      "resultCode":"SUCCESS",
      "resultMessage":", Found 1 results.",
      "success":"T"
    },
    "wsAttributeAssignResult":{
      "changed":"F",
      "valuesChanged":"F",
      "wsAttributeAssigns":[
        {
          "attributeAssignActionId":"ab220a23f597494985fd5a6585339382",
          "attributeAssignActionName":"assign",
          "attributeAssignActionType":"immediate",
          "attributeAssignDelegatable":"FALSE",
          "attributeAssignType":"group",
          "attributeDefId":"d90c0cb00374495b963936f61912a25c",
          "attributeDefName":"test:testAttributeAssignDefNameDef",
          "attributeDefNameId":"a33ad97ed0184b6db3342c11bc7a711c",
          "attributeDefNameName":"test:testAttributeAssignDefName",
          "createdOn":"2010/04/13 12:30:10.920",
          "enabled":"T",
          "id":"878a9f427c1c4be291ed9d491059d635",
          "lastUpdated":"2010/04/13 12:30:10.920",
          "ownerGroupId":"0d375764f1194325b4ac81ebeb5bc713",
          "ownerGroupName":"test:groupTestAttrAssign",
          "wsAttributeAssignValues":[
            {
              "id":"ec679380dc454f388170e3d22af1aeeb",
              "valueSystem":"15"
            },
            {
              "id":"03f4e0d69c40409a9bb9ddc500b10aee",
              "valueSystem":"5"
            },
            {
              "id":"5903fa20720c479f9bda4db743b65e5d",
              "valueSystem":"5"
            }
          ]
        }
      ]
      
    },
    "wsAttributeDefName":{
      "attributeDefId":"d90c0cb00374495b963936f61912a25c",
      "attributeDefName":"test:testAttributeAssignDefNameDef",
      "displayExtension":"testAttributeAssignDefName",
      "displayName":"test:testAttributeAssignDefName",
      "extension":"testAttributeAssignDefName",
      "name":"test:testAttributeAssignDefName",
      "uuid":"a33ad97ed0184b6db3342c11bc7a711c"
    },
    "wsAttributeDefs":[
      {
        "attributeDefType":"attr",
        "extension":"testAttributeAssignDefNameDef",
        "multiAssignable":"F",
        "multiValued":"T",
        "name":"test:testAttributeAssignDefNameDef",
        "uuid":"d90c0cb00374495b963936f61912a25c",
        "valueType":"integer"
      }
    ]
    ,
    "wsGroup":{
      "description":"description",
      "displayExtension":"groupTestAttrAssign",
      "displayName":"test:groupTestAttrAssign",
      "extension":"groupTestAttrAssign",
      "name":"test:groupTestAttrAssign",
      "uuid":"0d375764f1194325b4ac81ebeb5bc713"
    }
  }
}


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


package edu.internet2.middleware.grouper.ws.samples.rest.attribute;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.ws.rest.attribute.WsRestAssignAttributesLiteRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.soap.WsAssignAttributesLiteResults;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleAssignAttributesRestLite implements WsSampleRest {

  /**
   * get attribute assignments lite web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  @SuppressWarnings("deprecation")
  public static void assignAttributesLite(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();
      
      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));

      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      PostMethod method = new PostMethod(
          RestClientSettings.URL + "/" + wsSampleRestType.getWsLiteResponseContentType().name()
            + "/" + RestClientSettings.VERSION  
            + "/attributeAssignments");

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER, 
          RestClientSettings.PASS);
      
      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT), defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestAssignAttributesLiteRequest wsRestAssignAttributesLiteRequest 
        = new WsRestAssignAttributesLiteRequest();

      // set the act as id
      wsRestAssignAttributesLiteRequest.setActAsSubjectId("GrouperSystem");
      wsRestAssignAttributesLiteRequest.setAttributeAssignType("group");
      wsRestAssignAttributesLiteRequest.setWsAttributeDefNameName("test:testAttributeAssignDefName");
      wsRestAssignAttributesLiteRequest.setWsOwnerGroupName("test:groupTestAttrAssign");
      wsRestAssignAttributesLiteRequest.setAttributeAssignOperation("assign_attr");
      
      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(wsRestAssignAttributesLiteRequest);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));


      
      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      //convert to object (from xhtml, xml, json, etc)
      WsAssignAttributesLiteResults wsAssignAttributesLiteResults = (WsAssignAttributesLiteResults)wsSampleRestType
        .getWsLiteResponseContentType().parseString(response);
      
      String resultMessage = wsAssignAttributesLiteResults.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println("Server version: " + wsAssignAttributesLiteResults.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  @SuppressWarnings("unchecked")
  public static void main(String[] args) {
    assignAttributesLite(WsSampleRestType.xml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    assignAttributesLite(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    return true;
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: v1_6_000, result code: SUCCESS, result message: , Found 1 results.
