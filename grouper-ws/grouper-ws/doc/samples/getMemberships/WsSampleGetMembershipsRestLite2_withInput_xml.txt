Grouper web service sample of service: getMemberships, WsSampleGetMembershipsRestLite2, manually written lite/rest, type: _withInput, format: xml, for version: v1_6_000


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


GET /grouper-ws/servicesRest/xml/v1_5_000/subjects/10021368/memberships HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.1
Host: localhost:8092


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Pragma: No-cache
Cache-Control: no-cache
Expires: Wed, 31 Dec 1969 19:00:00 EST
Set-Cookie: JSESSIONID=xxxxxxxxxxxxxxxxxxxxxxxx; Path=/grouper-ws
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: text/xml;charset=UTF-8
Date: Sat, 19 Dec 2009 21:34:12 GMT
Connection: close

<WsGetMembershipsResults>
  <wsMemberships>
    <WsMembership>
      <membershipId>70c07cbc64994a4e895afe39a6c7f6bd:2a16e105975a4dceb8986262fe56a6f1</membershipId>
      <listName>members</listName>
      <listType>list</listType>
      <membershipType>immediate</membershipType>
      <enabled>T</enabled>
      <memberId>971dea02747045c7a0af54f85c705a57</memberId>
      <groupId>884e439b6e154cf5b18f1f96cd81ceb0</groupId>
      <subjectId>10021368</subjectId>
      <subjectSourceId>jdbc</subjectSourceId>
      <groupName>aStem:aGroup</groupName>
      <createTime>2009/12/19 16:34:10.829</createTime>
    </WsMembership>
    <WsMembership>
      <membershipId>35d69fa7b7274193b50ef13c362c4aaf:08aec4fa18d34204ace5f38e1a341875</membershipId>
      <listName>members</listName>
      <listType>list</listType>
      <membershipType>immediate</membershipType>
      <enabled>T</enabled>
      <memberId>971dea02747045c7a0af54f85c705a57</memberId>
      <groupId>3af9472b96fe4054bbbbe72b1fa6be46</groupId>
      <subjectId>10021368</subjectId>
      <subjectSourceId>jdbc</subjectSourceId>
      <groupName>aStem:aGroup2</groupName>
      <createTime>2009/12/19 16:34:10.878</createTime>
    </WsMembership>
    <WsMembership>
      <membershipId>82310c04a8ed4abbb815fb5700cc7d8a:a5488d03096148849fe32140af5c0510</membershipId>
      <listName>members</listName>
      <listType>list</listType>
      <membershipType>immediate</membershipType>
      <enabled>T</enabled>
      <memberId>971dea02747045c7a0af54f85c705a57</memberId>
      <groupId>eb98a1cd84cc461c8c112d0f23c917b8</groupId>
      <subjectId>10021368</subjectId>
      <subjectSourceId>jdbc</subjectSourceId>
      <groupName>etc:sysadmingroup</groupName>
      <createTime>2009/12/19 16:34:11.114</createTime>
    </WsMembership>
    <WsMembership>
      <membershipId>5e277121af57458f81cfa70943e15f94:de1e361409684562aa4774eadd40ee6e</membershipId>
      <listName>members</listName>
      <listType>list</listType>
      <membershipType>immediate</membershipType>
      <enabled>T</enabled>
      <memberId>971dea02747045c7a0af54f85c705a57</memberId>
      <groupId>5de2b6e0d5be40cb8aded52195e9ef6a</groupId>
      <subjectId>10021368</subjectId>
      <subjectSourceId>jdbc</subjectSourceId>
      <groupName>etc:webServiceActAsGroup</groupName>
      <createTime>2009/12/19 16:34:11.070</createTime>
    </WsMembership>
  </wsMemberships>
  <wsGroups>
    <WsGroup>
      <extension>aGroup</extension>
      <displayExtension>a group</displayExtension>
      <description>a group description</description>
      <displayName>a stem:a group</displayName>
      <name>aStem:aGroup</name>
      <uuid>884e439b6e154cf5b18f1f96cd81ceb0</uuid>
    </WsGroup>
    <WsGroup>
      <extension>aGroup2</extension>
      <displayExtension>a group2</displayExtension>
      <description>a group description2</description>
      <displayName>a stem:a group2</displayName>
      <name>aStem:aGroup2</name>
      <uuid>3af9472b96fe4054bbbbe72b1fa6be46</uuid>
    </WsGroup>
    <WsGroup>
      <extension>sysadmingroup</extension>
      <displayExtension>sysadmingroup</displayExtension>
      <displayName>etc:sysadmingroup</displayName>
      <name>etc:sysadmingroup</name>
      <uuid>eb98a1cd84cc461c8c112d0f23c917b8</uuid>
    </WsGroup>
    <WsGroup>
      <extension>webServiceActAsGroup</extension>
      <displayExtension>webServiceActAsGroup</displayExtension>
      <displayName>etc:webServiceActAsGroup</displayName>
      <name>etc:webServiceActAsGroup</name>
      <uuid>5de2b6e0d5be40cb8aded52195e9ef6a</uuid>
    </WsGroup>
  </wsGroups>
  <wsSubjects>
    <WsSubject>
      <resultCode>SUCCESS</resultCode>
      <success>T</success>
      <id>10021368</id>
      <sourceId>jdbc</sourceId>
    </WsSubject>
  </wsSubjects>
  <resultMetadata>
    <resultCode>SUCCESS</resultCode>
    <resultMessage>Found 4 results involving 4 groups and 1 subjects</resultMessage>
    <success>T</success>
  </resultMetadata>
  <responseMetadata>
    <millis>181</millis>
    <serverVersion>v1_6_000</serverVersion>
  </responseMetadata>
</WsGetMembershipsResults>


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


package edu.internet2.middleware.grouper.ws.samples.rest.membership;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.GetMethod;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.soap.WsGetMembershipsResults;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleGetMembershipsRestLite2 implements WsSampleRest {

  /**
   * get members lite web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  @SuppressWarnings("deprecation")
  public static void getMembershipsLite(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();
      
      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));

      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      GetMethod method = new GetMethod(
          RestClientSettings.URL + "/" + wsSampleRestType.getWsLiteResponseContentType().name()
            + "/" + RestClientSettings.VERSION  
            + "/subjects/10021368/memberships");

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER, 
          RestClientSettings.PASS);
      
      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT), defaultcreds);

      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      //convert to object (from xhtml, xml, json, etc)
      WsGetMembershipsResults wsGetMembershipsResults = (WsGetMembershipsResults)wsSampleRestType
        .getWsLiteResponseContentType().parseString(response);
      
      String resultMessage = wsGetMembershipsResults.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println("Server version: " + wsGetMembershipsResults.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  @SuppressWarnings("unchecked")
  public static void main(String[] args) {
    getMembershipsLite(WsSampleRestType.xml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    getMembershipsLite(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    return true;
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: v1_6_000, result code: SUCCESS, result message: Found 4 results involving 4 groups and 1 subjects
