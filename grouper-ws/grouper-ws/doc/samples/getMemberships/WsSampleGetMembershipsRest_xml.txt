Grouper web service sample of service: getMemberships, WsSampleGetMembershipsRest, manually written lite/rest, format: xml, for version: v1_6_000


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouper-ws/servicesRest/v1_5_000/memberships HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.1
Host: localhost:8092
Content-Length: 278
Content-Type: text/xml; charset=UTF-8

<WsRestGetMembershipsRequest>
  <wsGroupLookups>
    <WsGroupLookup>
      <groupName>aStem:aGroup</groupName>
    </WsGroupLookup>
  </wsGroupLookups>
  <subjectAttributeNames>
    <string>description</string>
    <string>loginid</string>
    <string>name</string>
  </subjectAttributeNames>
</WsRestGetMembershipsRequest>


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Set-Cookie: JSESSIONID=xxxxxxxxxxxxxxxxxxxxxxxx; Path=/grouper-ws
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: text/xml;charset=UTF-8
Date: Fri, 18 Dec 2009 04:38:26 GMT
Connection: close

<WsGetMembershipsResults>
  <wsMemberships>
    <WsMembership>
      <membershipId>d9bc008e6eef449c93c26d1e3dafedd2:46ba8943c9364931bec0d1fcb3c31778</membershipId>
      <listName>members</listName>
      <listType>list</listType>
      <membershipType>immediate</membershipType>
      <enabled>T</enabled>
      <memberId>18115df1c9b043f2bcaf58163003a276</memberId>
      <groupId>f7136ae90a1a49d7b623334fd9ec154c</groupId>
      <subjectId>GrouperSystem</subjectId>
      <subjectSourceId>g:isa</subjectSourceId>
      <groupName>aStem:aGroup</groupName>
      <createTime>2009/12/17 23:38:24.238</createTime>
    </WsMembership>
    <WsMembership>
      <membershipId>5084466824364e27a90df91ce8b257e4:46ba8943c9364931bec0d1fcb3c31778</membershipId>
      <listName>members</listName>
      <listType>list</listType>
      <membershipType>immediate</membershipType>
      <enabled>T</enabled>
      <memberId>07afa53575a2494cb859cb83458c97f5</memberId>
      <groupId>f7136ae90a1a49d7b623334fd9ec154c</groupId>
      <subjectId>10021368</subjectId>
      <subjectSourceId>jdbc</subjectSourceId>
      <groupName>aStem:aGroup</groupName>
      <createTime>2009/12/17 23:38:24.280</createTime>
    </WsMembership>
    <WsMembership>
      <membershipId>5ec4cef7088a45779203adcef8468639:46ba8943c9364931bec0d1fcb3c31778</membershipId>
      <listName>members</listName>
      <listType>list</listType>
      <membershipType>immediate</membershipType>
      <enabled>T</enabled>
      <memberId>c355f668f84348b595cf994bd7101922</memberId>
      <groupId>f7136ae90a1a49d7b623334fd9ec154c</groupId>
      <subjectId>10039438</subjectId>
      <subjectSourceId>jdbc</subjectSourceId>
      <groupName>aStem:aGroup</groupName>
      <createTime>2009/12/17 23:38:24.262</createTime>
    </WsMembership>
  </wsMemberships>
  <subjectAttributeNames>
    <string>description</string>
    <string>loginid</string>
    <string>name</string>
  </subjectAttributeNames>
  <wsGroups>
    <WsGroup>
      <extension>aGroup</extension>
      <displayExtension>a group</displayExtension>
      <description>a group description</description>
      <displayName>a stem:a group</displayName>
      <name>aStem:aGroup</name>
      <uuid>f7136ae90a1a49d7b623334fd9ec154c</uuid>
    </WsGroup>
  </wsGroups>
  <wsSubjects>
    <WsSubject>
      <resultCode>SUCCESS</resultCode>
      <success>T</success>
      <id>GrouperSystem</id>
      <name>GrouperSysAdmin</name>
      <sourceId>g:isa</sourceId>
      <attributeValues>
        <string>GrouperSysAdmin</string>
        <string></string>
        <string>EveryEntity</string>
      </attributeValues>
    </WsSubject>
    <WsSubject>
      <resultCode>SUCCESS</resultCode>
      <success>T</success>
      <id>10021368</id>
      <name>10021368</name>
      <sourceId>jdbc</sourceId>
      <attributeValues>
        <string></string>
        <string></string>
        <string>10021368</string>
      </attributeValues>
    </WsSubject>
    <WsSubject>
      <resultCode>SUCCESS</resultCode>
      <success>T</success>
      <id>10039438</id>
      <name>10039438</name>
      <sourceId>jdbc</sourceId>
      <attributeValues>
        <string></string>
        <string></string>
        <string>10039438</string>
      </attributeValues>
    </WsSubject>
  </wsSubjects>
  <resultMetadata>
    <resultCode>SUCCESS</resultCode>
    <resultMessage>Found 3 results involving 1 groups and 3 subjects</resultMessage>
    <success>T</success>
  </resultMetadata>
  <responseMetadata>
    <millis>541</millis>
    <serverVersion>v1_6_000</serverVersion>
  </responseMetadata>
</WsGetMembershipsResults>


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


package edu.internet2.middleware.grouper.ws.samples.rest.membership;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.ws.rest.WsRestResultProblem;
import edu.internet2.middleware.grouper.ws.rest.membership.WsRestGetMembershipsRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.soap.WsGetMembershipsResults;
import edu.internet2.middleware.grouper.ws.soap.WsGroupLookup;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleGetMembershipsRest implements WsSampleRest {

  /**
   * get member lite web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  public static void getMembershipsLite(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();
      
      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));

      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      String url = RestClientSettings.URL + "/" + RestClientSettings.VERSION  
        + "/memberships";
      PostMethod method = new PostMethod(
          url);

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER, 
          RestClientSettings.PASS);

      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT), defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestGetMembershipsRequest getMemberships = new WsRestGetMembershipsRequest();

      // seeif two subjects are in the group
      WsGroupLookup[] groupLookups = new WsGroupLookup[1];
      groupLookups[0] = new WsGroupLookup("aStem:aGroup", null);

      getMemberships.setWsGroupLookups(groupLookups);

      getMemberships.setSubjectAttributeNames(new String[]{"description", "loginid", "name"});
      
      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(getMemberships);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));
      
      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      Object result = wsSampleRestType
        .getWsLiteResponseContentType().parseString(response);
      
      //see if problem
      if (result instanceof WsRestResultProblem) {
        throw new RuntimeException(((WsRestResultProblem)result).getResultMetadata().getResultMessage());
      }
      
      //convert to object (from xhtml, xml, json, etc)
      WsGetMembershipsResults wsGetMembershipsResults = (WsGetMembershipsResults)result;
      
      String resultMessage = wsGetMembershipsResults.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: successString: " + successString + ", resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println("Server version: " + wsGetMembershipsResults.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  public static void main(String[] args) {
    getMembershipsLite(WsSampleRestType.xml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    getMembershipsLite(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    //dont allow http params
    return !WsSampleRestType.http_xhtml.equals(wsSampleRestType);
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: v1_6_000, result code: SUCCESS, result message: Found 3 results involving 1 groups and 3 subjects
