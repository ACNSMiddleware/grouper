Grouper web service sample of service: getMemberships, WsSampleGetMembershipsRest, manually written lite/rest, format: json, for version: v1_6_000


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouper-ws/servicesRest/v1_5_000/memberships HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.1
Host: localhost:8092
Content-Length: 138
Content-Type: text/x-json; charset=UTF-8

{
  "WsRestGetMembershipsRequest":{
    "subjectAttributeNames":[
      "description",
      "loginid",
      "name"
    ]
    ,
    "wsGroupLookups":[
      {
        "groupName":"aStem:aGroup"
      }
    ]
  }
}


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Set-Cookie: JSESSIONID=xxxxxxxxxxxxxxxxxxxxxxxx; Path=/grouper-ws
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: text/x-json;charset=UTF-8
Content-Length: 1971
Date: Thu, 17 Dec 2009 22:31:06 GMT
Connection: close

{
  "WsGetMembershipsResults":{
    "responseMetadata":{
      "millis":"158",
      "serverVersion":"v1_6_000"
    },
    "resultMetadata":{
      "resultCode":"SUCCESS",
      "success":"T"
    },
    "subjectAttributeNames":[
      "description",
      "loginid",
      "name"
    ]
    ,
    "wsGroups":[
      {
        "description":"a group description",
        "displayExtension":"a group",
        "displayName":"a stem:a group",
        "extension":"aGroup",
        "name":"aStem:aGroup",
        "uuid":"7198ab9250a74bfea544602231746eab"
      }
    ]
    ,
    "wsMemberships":[
      {
        "createTime":"2009/12/17 17:31:04.767",
        "enabled":"T",
        "groupId":"7198ab9250a74bfea544602231746eab",
        "groupName":"aStem:aGroup",
        "listName":"members",
        "listType":"list",
        "memberId":"18115df1c9b043f2bcaf58163003a276",
        "membershipId":"b6176656d2f34679b2389b46a1ecbf28:3be6bf138b1649e58efcaee78f0fa31b",
        "membershipType":"immediate",
        "subjectId":"GrouperSystem",
        "subjectSourceId":"g:isa"
      },
      {
        "createTime":"2009/12/17 17:31:04.808",
        "enabled":"T",
        "groupId":"7198ab9250a74bfea544602231746eab",
        "groupName":"aStem:aGroup",
        "listName":"members",
        "listType":"list",
        "memberId":"b59f99cde5e64200884f7c97e05d126c",
        "membershipId":"b85bb139fa1a4ff392d42702c3ff4b5f:3be6bf138b1649e58efcaee78f0fa31b",
        "membershipType":"immediate",
        "subjectId":"10021368",
        "subjectSourceId":"jdbc"
      },
      {
        "createTime":"2009/12/17 17:31:04.792",
        "enabled":"T",
        "groupId":"7198ab9250a74bfea544602231746eab",
        "groupName":"aStem:aGroup",
        "listName":"members",
        "listType":"list",
        "memberId":"e94da4878afc4a01bd28991642b4aa09",
        "membershipId":"17873aa877dd4311ab2d1336f6e6d533:3be6bf138b1649e58efcaee78f0fa31b",
        "membershipType":"immediate",
        "subjectId":"10039438",
        "subjectSourceId":"jdbc"
      }
    ]
    ,
    "wsSubjects":[
      {
        "attributeValues":[
          "GrouperSysAdmin",
          "",
          "EveryEntity"
        ]
        ,
        "id":"GrouperSystem",
        "name":"GrouperSysAdmin",
        "resultCode":"SUCCESS",
        "sourceId":"g:isa",
        "success":"T"
      },
      {
        "attributeValues":[
          "",
          "",
          "10021368"
        ]
        ,
        "id":"10021368",
        "name":"10021368",
        "resultCode":"SUCCESS",
        "sourceId":"jdbc",
        "success":"T"
      },
      {
        "attributeValues":[
          "",
          "",
          "10039438"
        ]
        ,
        "id":"10039438",
        "name":"10039438",
        "resultCode":"SUCCESS",
        "sourceId":"jdbc",
        "success":"T"
      }
    ]
  }
}


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


package edu.internet2.middleware.grouper.ws.samples.rest.membership;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.ws.rest.WsRestResultProblem;
import edu.internet2.middleware.grouper.ws.rest.membership.WsRestGetMembershipsRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.soap.WsGetMembershipsResults;
import edu.internet2.middleware.grouper.ws.soap.WsGroupLookup;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleGetMembershipsRest implements WsSampleRest {

  /**
   * get member lite web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  public static void getMembershipsLite(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();
      
      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));

      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      String url = RestClientSettings.URL + "/" + RestClientSettings.VERSION  
        + "/memberships";
      PostMethod method = new PostMethod(
          url);

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER, 
          RestClientSettings.PASS);

      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT), defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestGetMembershipsRequest getMemberships = new WsRestGetMembershipsRequest();

      // seeif two subjects are in the group
      WsGroupLookup[] groupLookups = new WsGroupLookup[1];
      groupLookups[0] = new WsGroupLookup("aStem:aGroup", null);

      getMemberships.setWsGroupLookups(groupLookups);

      getMemberships.setSubjectAttributeNames(new String[]{"description", "loginid", "name"});
      
      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(getMemberships);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));
      
      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      Object result = wsSampleRestType
        .getWsLiteResponseContentType().parseString(response);
      
      //see if problem
      if (result instanceof WsRestResultProblem) {
        throw new RuntimeException(((WsRestResultProblem)result).getResultMetadata().getResultMessage());
      }
      
      //convert to object (from xhtml, xml, json, etc)
      WsGetMembershipsResults wsGetMembershipsResults = (WsGetMembershipsResults)result;
      
      String resultMessage = wsGetMembershipsResults.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: successString: " + successString + ", resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println("Server version: " + wsGetMembershipsResults.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  public static void main(String[] args) {
    getMembershipsLite(WsSampleRestType.xml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    getMembershipsLite(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    //dont allow http params
    return !WsSampleRestType.http_xhtml.equals(wsSampleRestType);
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: v1_6_000, result code: SUCCESS, result message: null
