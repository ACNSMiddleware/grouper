Grouper web service sample of service: assignPermissions, WsSampleAssignPermissionsRest, manually written lite/rest, format: xml, for version: 2.0.0


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouperWs/servicesRest/v2_0_000/permissionAssignments HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.0
Host: localhost:8092
Content-Length: 461
Content-Type: text/xml; charset=UTF-8

<WsRestAssignPermissionsRequest>
  <permissionAssignOperation>assign_permission</permissionAssignOperation>
  <permissionType>role</permissionType>
  <permissionDefNameLookups>
    <WsAttributeDefNameLookup>
      <uuid></uuid>
      <name>aStem:permissionDefName</name>
    </WsAttributeDefNameLookup>
  </permissionDefNameLookups>
  <roleLookups>
    <WsGroupLookup>
      <groupName>aStem:role</groupName>
    </WsGroupLookup>
  </roleLookups>
  <actions>
    <string>write</string>
  </actions>
</WsRestAssignPermissionsRequest>


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Set-Cookie: JSESSIONID=xxxxxxxxxxxxxxxxxxxxxxxx; Path=/grouperWs
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: text/xml;charset=UTF-8
Date: Sat, 13 Aug 2011 00:35:57 GMT
Connection: close

<WsAssignPermissionsResults>
  <wsAttributeDefs>
    <WsAttributeDef>
      <extension>permissionDef</extension>
      <name>aStem:permissionDef</name>
      <uuid>81fd2993d31d4f16a2d0c7748e41eceb</uuid>
      <attributeDefType>perm</attributeDefType>
      <multiAssignable>F</multiAssignable>
      <multiValued>F</multiValued>
      <valueType>marker</valueType>
    </WsAttributeDef>
  </wsAttributeDefs>
  <wsAttributeDefNames>
    <WsAttributeDefName>
      <extension>permissionDefName</extension>
      <displayExtension>permissionDefName</displayExtension>
      <displayName>a stem:permissionDefName</displayName>
      <name>aStem:permissionDefName</name>
      <uuid>2aff6870628b4bdd8fdebfa284bce0dd</uuid>
      <attributeDefId>81fd2993d31d4f16a2d0c7748e41eceb</attributeDefId>
      <attributeDefName>aStem:permissionDef</attributeDefName>
    </WsAttributeDefName>
  </wsAttributeDefNames>
  <wsAssignPermissionResults>
    <WsAssignPermissionResult>
      <wsAttributeAssigns>
        <WsAttributeAssign>
          <disallowed>F</disallowed>
          <attributeAssignActionType>immediate</attributeAssignActionType>
          <attributeAssignDelegatable>FALSE</attributeAssignDelegatable>
          <attributeAssignActionId>4d4b2bf628b14cd9b3b2d57e3df0e7d8</attributeAssignActionId>
          <attributeAssignActionName>write</attributeAssignActionName>
          <attributeAssignType>group</attributeAssignType>
          <attributeDefNameId>2aff6870628b4bdd8fdebfa284bce0dd</attributeDefNameId>
          <attributeDefNameName>aStem:permissionDefName</attributeDefNameName>
          <attributeDefId>81fd2993d31d4f16a2d0c7748e41eceb</attributeDefId>
          <attributeDefName>aStem:permissionDef</attributeDefName>
          <createdOn>2011/08/12 20:35:57.096</createdOn>
          <enabled>T</enabled>
          <id>6b3038aa0f0f43f3ab5d917435888a77</id>
          <lastUpdated>2011/08/12 20:35:57.096</lastUpdated>
          <ownerGroupId>0f968e725bfe4bff8a8944e3f288cee4</ownerGroupId>
          <ownerGroupName>aStem:role</ownerGroupName>
        </WsAttributeAssign>
      </wsAttributeAssigns>
      <changed>T</changed>
      <deleted>F</deleted>
    </WsAssignPermissionResult>
  </wsAssignPermissionResults>
  <resultMetadata>
    <resultCode>SUCCESS</resultCode>
    <resultMessage>, Found 1 results.  </resultMessage>
    <success>T</success>
  </resultMetadata>
  <responseMetadata>
    <resultWarnings></resultWarnings>
    <millis>1412</millis>
    <serverVersion>2.0.0</serverVersion>
  </responseMetadata>
  <wsGroups>
    <WsGroup>
      <extension>role</extension>
      <displayExtension>role</displayExtension>
      <displayName>a stem:role</displayName>
      <name>aStem:role</name>
      <uuid>0f968e725bfe4bff8a8944e3f288cee4</uuid>
    </WsGroup>
  </wsGroups>
  <wsSubjects/>
</WsAssignPermissionsResults>


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


package edu.internet2.middleware.grouper.ws.samples.rest.permission;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.ws.coresoap.WsAssignPermissionsResults;
import edu.internet2.middleware.grouper.ws.coresoap.WsAttributeDefNameLookup;
import edu.internet2.middleware.grouper.ws.coresoap.WsGroupLookup;
import edu.internet2.middleware.grouper.ws.rest.WsRestResultProblem;
import edu.internet2.middleware.grouper.ws.rest.permission.WsRestAssignPermissionsRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleAssignPermissionsRest implements WsSampleRest {

  /**
   * permission assignments lite web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  public static void assignPermissions(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();
      
      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));

      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      String url = RestClientSettings.URL + "/" + RestClientSettings.VERSION  
        + "/permissionAssignments";
      PostMethod method = new PostMethod(
          url);

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER, 
          RestClientSettings.PASS);

      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT), defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestAssignPermissionsRequest assignPermissions = new WsRestAssignPermissionsRequest();

      assignPermissions.setPermissionType("role");
      assignPermissions.setActions(new String[]{"write"});
      WsGroupLookup wsGroupLookup = new WsGroupLookup("aStem:role", null);
      assignPermissions.setRoleLookups(new WsGroupLookup[]{wsGroupLookup});
      assignPermissions.setPermissionAssignOperation("assign_permission");

      WsAttributeDefNameLookup wsAttributeDefNameLookup = new WsAttributeDefNameLookup();
      wsAttributeDefNameLookup.setUuid("");
      wsAttributeDefNameLookup.setName("aStem:permissionDefName");
      assignPermissions.setPermissionDefNameLookups(new WsAttributeDefNameLookup[]{wsAttributeDefNameLookup});
      
      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(assignPermissions);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));
      
      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      Object result = wsSampleRestType
        .getWsLiteResponseContentType().parseString(response);
      
      //see if problem
      if (result instanceof WsRestResultProblem) {
        throw new RuntimeException(((WsRestResultProblem)result).getResultMetadata().getResultMessage());
      }
      
      //convert to object (from xhtml, xml, json, etc)
      WsAssignPermissionsResults wsAssignPermissionsResults = (WsAssignPermissionsResults)result;
      
      String resultMessage = wsAssignPermissionsResults.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: successString: " + successString + ", resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println("Server version: " + wsAssignPermissionsResults.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  public static void main(String[] args) {
    assignPermissions(WsSampleRestType.xml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    assignPermissions(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    //dont allow http params
    return !WsSampleRestType.http_xhtml.equals(wsSampleRestType);
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: 2.0.0, result code: SUCCESS, result message: , Found 1 results.
