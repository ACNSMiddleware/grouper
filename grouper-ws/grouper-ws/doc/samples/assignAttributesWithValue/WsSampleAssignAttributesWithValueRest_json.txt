Grouper web service sample of service: assignAttributesWithValue, WsSampleAssignAttributesWithValueRest, manually written lite/rest, format: json, for version: 2.1.1


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouper-ws/servicesRest/v2_1_001/attributeAssignments HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.1
Host: localhost:8092
Content-Length: 330
Content-Type: text/x-json; charset=UTF-8

{
  "WsRestAssignAttributesRequest":{
    "attributeAssignOperation":"assign_attr",
    "attributeAssignType":"group",
    "attributeAssignValueOperation":"add_value",
    "values":[
      {
        "valueSystem":"63"
      }
    ]
    ,
    "wsAttributeDefNameLookups":[
      {
        "name":"test:testAttributeAssignDefName",
        "uuid":""
      }
    ]
    ,
    "wsOwnerGroupLookups":[
      {
        "groupName":"test:groupTestAttrAssign"
      }
    ]
  }
}


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Set-Cookie: JSESSIONID=xxxxxxxxxxxxxxxxxxxxxxxx; Path=/grouper-ws
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: text/x-json;charset=UTF-8
Content-Length: 2276
Date: Sun, 01 Jul 2012 16:20:58 GMT
Connection: close

{
  "WsAssignAttributesResults":{
    "responseMetadata":{
      "millis":"219",
      "serverVersion":"2.1.1"
    },
    "resultMetadata":{
      "resultCode":"SUCCESS",
      "resultMessage":", Found 1 results.",
      "success":"T"
    },
    "wsAttributeAssignResults":[
      {
        "changed":"F",
        "deleted":"F",
        "valuesChanged":"T",
        "wsAttributeAssignValueResults":[
          {
            "changed":"T",
            "deleted":"F",
            "wsAttributeAssignValue":{
              "id":"1f13ec8bde144f1c82ef4e8ee0037ae5",
              "valueSystem":"63"
            }
          }
        ]
        ,
        "wsAttributeAssigns":[
          {
            "attributeAssignActionId":"517fe14b5dc24918ae66b769dde89b7d",
            "attributeAssignActionName":"assign",
            "attributeAssignActionType":"immediate",
            "attributeAssignDelegatable":"FALSE",
            "attributeAssignType":"group",
            "attributeDefId":"cb51e6077a1746f9bbec9d1445b0a30d",
            "attributeDefName":"test:testAttributeAssignDefNameDef",
            "attributeDefNameId":"5cf8b9dbf80945d9ba7dc5a66c46e6f8",
            "attributeDefNameName":"test:testAttributeAssignDefName",
            "createdOn":"2012/07/01 12:20:56.945",
            "disallowed":"F",
            "enabled":"T",
            "id":"c5bf33166b954694970824ef64523c5b",
            "lastUpdated":"2012/07/01 12:20:56.945",
            "ownerGroupId":"694a5da601cd4168a49f35fb8bcc41a0",
            "ownerGroupName":"test:groupTestAttrAssign",
            "wsAttributeAssignValues":[
              {
                "id":"8f1fcb36bc0d465f85ba24ee97c5bc68",
                "valueSystem":"15"
              },
              {
                "id":"3f77a24654db40ec8615bf4d26f047f4",
                "valueSystem":"5"
              },
              {
                "id":"90479d9a373a45668d1b1c60269daa1b",
                "valueSystem":"5"
              },
              {
                "id":"1f13ec8bde144f1c82ef4e8ee0037ae5",
                "valueSystem":"63"
              }
            ]
          }
        ]
      }
    ]
    ,
    "wsAttributeDefNames":[
      {
        "attributeDefId":"cb51e6077a1746f9bbec9d1445b0a30d",
        "attributeDefName":"test:testAttributeAssignDefNameDef",
        "displayExtension":"testAttributeAssignDefName",
        "displayName":"test:testAttributeAssignDefName",
        "extension":"testAttributeAssignDefName",
        "name":"test:testAttributeAssignDefName",
        "uuid":"5cf8b9dbf80945d9ba7dc5a66c46e6f8"
      }
    ]
    ,
    "wsAttributeDefs":[
      {
        "attributeDefType":"attr",
        "extension":"testAttributeAssignDefNameDef",
        "multiAssignable":"F",
        "multiValued":"T",
        "name":"test:testAttributeAssignDefNameDef",
        "uuid":"cb51e6077a1746f9bbec9d1445b0a30d",
        "valueType":"integer"
      }
    ]
    ,
    "wsGroups":[
      {
        "description":"description",
        "displayExtension":"groupTestAttrAssign",
        "displayName":"test:groupTestAttrAssign",
        "extension":"groupTestAttrAssign",
        "name":"test:groupTestAttrAssign",
        "typeOfGroup":"group",
        "uuid":"694a5da601cd4168a49f35fb8bcc41a0"
      }
    ]
    ,
    "wsMemberships":[
    ]
    ,
    "wsStems":[
    ]
    ,
    "wsSubjects":[
    ]
  }
}


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


/*******************************************************************************
 * Copyright 2012 Internet2
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package edu.internet2.middleware.grouper.ws.samples.rest.attribute;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.ws.coresoap.WsAssignAttributesResults;
import edu.internet2.middleware.grouper.ws.coresoap.WsAttributeAssignValue;
import edu.internet2.middleware.grouper.ws.coresoap.WsAttributeDefNameLookup;
import edu.internet2.middleware.grouper.ws.coresoap.WsGroupLookup;
import edu.internet2.middleware.grouper.ws.rest.WsRestResultProblem;
import edu.internet2.middleware.grouper.ws.rest.attribute.WsRestAssignAttributesRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleAssignAttributesWithValueRest implements WsSampleRest {

  /**
   * attribute assignments lite web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  public static void assignAttributesWithValue(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();
      
      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));

      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      String url = RestClientSettings.URL + "/" + RestClientSettings.VERSION  
        + "/attributeAssignments";
      PostMethod method = new PostMethod(
          url);

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER, 
          RestClientSettings.PASS);

      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT), defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestAssignAttributesRequest assignAttributes = new WsRestAssignAttributesRequest();

      assignAttributes.setAttributeAssignType("group");

      WsGroupLookup wsGroupLookup = new WsGroupLookup("test:groupTestAttrAssign", null);
      assignAttributes.setWsOwnerGroupLookups(new WsGroupLookup[]{wsGroupLookup});
      assignAttributes.setAttributeAssignOperation("assign_attr");
      assignAttributes.setAttributeAssignValueOperation("add_value");
      WsAttributeAssignValue wsAttributeAssignValue = new WsAttributeAssignValue();
      wsAttributeAssignValue.setValueSystem("63");
      assignAttributes.setValues(new WsAttributeAssignValue[]{wsAttributeAssignValue});

      WsAttributeDefNameLookup wsAttributeDefNameLookup = new WsAttributeDefNameLookup();
      wsAttributeDefNameLookup.setUuid("");
      wsAttributeDefNameLookup.setName("test:testAttributeAssignDefName");
      assignAttributes.setWsAttributeDefNameLookups(new WsAttributeDefNameLookup[]{wsAttributeDefNameLookup});
      
      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(assignAttributes);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));
      
      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      Object result = wsSampleRestType
        .getWsLiteResponseContentType().parseString(response);
      
      //see if problem
      if (result instanceof WsRestResultProblem) {
        throw new RuntimeException(((WsRestResultProblem)result).getResultMetadata().getResultMessage());
      }
      
      //convert to object (from xhtml, xml, json, etc)
      WsAssignAttributesResults wsAssignAttributesResults = (WsAssignAttributesResults)result;
      
      String resultMessage = wsAssignAttributesResults.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: successString: " + successString + ", resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println("Server version: " + wsAssignAttributesResults.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  public static void main(String[] args) {
    assignAttributesWithValue(WsSampleRestType.xml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    assignAttributesWithValue(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    //dont allow http params
    return !WsSampleRestType.http_json.equals(wsSampleRestType);
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: 2.1.1, result code: SUCCESS, result message: , Found 1 results.
