Grouper web service sample of service: getGroups, WsSampleGetGroupsRest, manually written lite/rest, format: xhtml, for version: v1_3_000


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouper-ws/servicesRest/v1_3_000/subjects HTTP/1.1
Connection: close
Authorization: Basic R3JvdXBlclN5c3RlbTpwYXNz
User-Agent: Jakarta Commons-HttpClient/3.0.1
Host: localhost:8092
Content-Length: 896
Content-Type: application/xhtml+xml; charset=UTF-8

<?xml version='1.0' encoding='iso-8859-1'?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>WsRestGetGroupsRequest</title>
  </head>
  <body>
    <div title="WsRestGetGroupsRequest">
      <p class="clientVersion" />
      <ul class="subjectLookups">
        <li title="WsSubjectLookup">
          <p class="subjectId">10021368</p>
          <p class="subjectSourceId" />
          <p class="subjectIdentifier" />
        </li>
        <li title="WsSubjectLookup">
          <p class="subjectId">10039438</p>
          <p class="subjectSourceId" />
          <p class="subjectIdentifier" />
        </li>
      </ul>
      <div class="actAsSubjectLookup" title="WsSubjectLookup">
        <p class="subjectId">GrouperSystem</p>
        <p class="subjectSourceId" />
        <p class="subjectIdentifier" />
      </div>
      <p class="includeGroupDetail" />
      <p class="includeSubjectDetail" />
      <p class="memberFilter" />
    </div>
  </body>
</html>


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 201 Created
Server: Apache-Coyote/1.1
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
Content-Type: application/xhtml+xml
Date: Sun, 30 Mar 2008 08:51:49 GMT
Connection: close

<?xml version='1.0' encoding='iso-8859-1'?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>WsGetGroupsResults</title>
  </head>
  <body>
    <div title="WsGetGroupsResults">
      <div class="resultMetadata" title="WsResultMeta">
        <p class="success">T</p>
        <p class="resultMessage">Success for: clientVersion: v1_3_000, subjectLookups: Array size: 2: [0]: edu.internet2.middleware.grouper.ws.soap.WsSubjectLookup@e80f0d[subject=&lt;null>,cause=&lt;null>,subjectFindResult=&lt;null>,subjectId=10021368,subjectIdentifier=&lt;null>,subjectSourceId=...
memberFilter: All, includeGroupDetail: false, actAsSubject: edu.internet2.middleware.grouper.ws.soap.WsSubjectLookup@cd0c52[subject=&lt;null>,cause=&lt;null>,subjectFindResult=&lt;null>,subjectId=GrouperSystem,subjectIdentifier=&lt;null>,subjectSourceId=&lt;null>]
, params: null</p>
        <p class="resultCode">SUCCESS</p>
      </div>
      <div class="responseMetadata" title="WsResponseMeta">
        <p class="millis">266</p>
        <p class="resultWarnings" />
        <p class="serverVersion">v1_3_000</p>
      </div>
      <ul class="results">
        <li title="WsGetGroupsResult">
          <div class="resultMetadata" title="WsResultMeta">
            <p class="success">T</p>
            <p class="resultMessage" />
            <p class="resultCode">SUCCESS</p>
          </div>
          <ul class="wsGroups">
            <li title="WsGroup">
              <p class="name">aStem:aGroup2</p>
              <p class="displayName">a stem:a group2</p>
              <p class="description">a group description2</p>
              <p class="uuid">f7a9e321-6a1d-4866-95ed-c301f88b54ae</p>
              <div class="detail" title="WsGroupDetail" />
              <p class="extension">aGroup2</p>
              <p class="displayExtension">a group2</p>
            </li>
          </ul>
          <div class="wsSubject" title="WsSubject">
            <p class="name" />
            <p class="id">10021368</p>
            <p class="success">T</p>
            <p class="resultCode">SUCCESS</p>
            <p class="sourceId">qsuob</p>
          </div>
        </li>
        <li title="WsGetGroupsResult">
          <div class="resultMetadata" title="WsResultMeta">
            <p class="success">T</p>
            <p class="resultMessage" />
            <p class="resultCode">SUCCESS</p>
          </div>
          <ul class="wsGroups">
            <li title="WsGroup">
              <p class="name">aStem:aGroup2</p>
              <p class="displayName">a stem:a group2</p>
              <p class="description">a group description2</p>
              <p class="uuid">f7a9e321-6a1d-4866-95ed-c301f88b54ae</p>
              <div class="detail" title="WsGroupDetail" />
              <p class="extension">aGroup2</p>
              <p class="displayExtension">a group2</p>
            </li>
          </ul>
          <div class="wsSubject" title="WsSubject">
            <p class="name" />
            <p class="id">10039438</p>
            <p class="success">T</p>
            <p class="resultCode">SUCCESS</p>
            <p class="sourceId">qsuob</p>
          </div>
        </li>
      </ul>
    </div>
  </body>
</html>


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


package edu.internet2.middleware.grouper.ws.samples.rest.group;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.webservicesClient.util.ManualClientSettings;
import edu.internet2.middleware.grouper.ws.rest.WsRestResultProblem;
import edu.internet2.middleware.grouper.ws.rest.group.WsRestGetGroupsRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.soap.WsGetGroupsResults;
import edu.internet2.middleware.grouper.ws.soap.WsSubjectLookup;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleGetGroupsRest implements WsSampleRest {

  /**
   * get groups lite web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  public static void getGroupsLite(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();
      
      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      PostMethod method = new PostMethod(
          RestClientSettings.URL + "/" + RestClientSettings.VERSION  
            + "/subjects");

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(ManualClientSettings.USER, 
          ManualClientSettings.PASS);

      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(ManualClientSettings.HOST, ManualClientSettings.PORT), defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestGetGroupsRequest getGroups = new WsRestGetGroupsRequest();

      // set the act as id
      WsSubjectLookup actAsSubject = new WsSubjectLookup("GrouperSystem", null, null);
      getGroups.setActAsSubjectLookup(actAsSubject);

      // seeif two subjects are in the group
      WsSubjectLookup[] subjectLookups = new WsSubjectLookup[2];
      subjectLookups[0] = new WsSubjectLookup("10021368", null, null);

      subjectLookups[1] = new WsSubjectLookup("10039438", null, null);

      getGroups.setSubjectLookups(subjectLookups);
      
      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(getGroups);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));
      
      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      Object result = wsSampleRestType
        .getWsLiteResponseContentType().parseString(response);
      
      //see if problem
      if (result instanceof WsRestResultProblem) {
        throw new RuntimeException(((WsRestResultProblem)result).getResultMetadata().getResultMessage());
      }
      
      //convert to object (from xhtml, xml, json, etc)
      WsGetGroupsResults wsGetGroupsResults = (WsGetGroupsResults)result;
      
      String resultMessage = wsGetGroupsResults.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: successString: " + successString + ", resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println("Server version: " + wsGetGroupsResults.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  @SuppressWarnings("unchecked")
  public static void main(String[] args) {
    getGroupsLite(WsSampleRestType.xhtml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    getGroupsLite(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    //dont allow http params
    return !WsSampleRestType.http_xhtml.equals(wsSampleRestType);
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: v1_3_000, result code: SUCCESS, result message: Success for: clientVersion: v1_3_000, subjectLookups: Array size: 2: [0]: edu.internet2.middleware.grouper.ws.soap.WsSubjectLookup@e80f0d[subject=<null>,cause=<null>,subjectFindResult=<null>,subjectId=10021368,subjectIdentifier=<null>,subjectSourceId=...
memberFilter: All, includeGroupDetail: false, actAsSubject: edu.internet2.middleware.grouper.ws.soap.WsSubjectLookup@cd0c52[subject=<null>,cause=<null>,subjectFindResult=<null>,subjectId=GrouperSystem,subjectIdentifier=<null>,subjectSourceId=<null>]
, params: null
