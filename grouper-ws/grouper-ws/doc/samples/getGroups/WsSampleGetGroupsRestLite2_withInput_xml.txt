Grouper web service sample of service: getGroups, WsSampleGetGroupsRestLite2, manually written lite/rest, type: _withInput, format: xml, for version: v1_3_000


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouper-ws/servicesRest/v1_3_000/subjects/sources/qsuob/subjectId/10021368/groups HTTP/1.1
Connection: close
Authorization: Basic R3JvdXBlclN5c3RlbTpwYXNz
User-Agent: Jakarta Commons-HttpClient/3.0.1
Host: localhost:8092
Content-Length: 191
Content-Type: text/xml; charset=UTF-8

<WsRestGetGroupsLiteRequest>
  <actAsSubjectId>GrouperSystem</actAsSubjectId>
  <includeGroupDetail>T</includeGroupDetail>
  <includeSubjectDetail>T</includeSubjectDetail>
</WsRestGetGroupsLiteRequest>


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
Content-Type: text/xml
Date: Sat, 29 Mar 2008 10:34:14 GMT
Connection: close

<WsGetGroupsLiteResult>
  <resultMetadata>
    <wsResultCode class="edu.internet2.middleware.grouper.ws.soap.WsGetGroupsLiteResult$WsGetGroupsLiteResultCode">SUCCESS</wsResultCode>
    <resultCode>SUCCESS</resultCode>
    <resultMessage>Success for: clientVersion: v1_3_000, subjectLookups: Array size: 1: [0]: edu.internet2.middleware.grouper.ws.soap.WsSubjectLookup@1bfcfca[subject=&lt;null&gt;,cause=&lt;null&gt;,subjectFindResult=&lt;null&gt;,subjectId=10021368,subjectIdentifier=&lt;null&gt;,subjectSourceId...
memberFilter: All, includeGroupDetail: true, actAsSubject: edu.internet2.middleware.grouper.ws.soap.WsSubjectLookup@1e2e2f4[subject=&lt;null&gt;,cause=&lt;null&gt;,subjectFindResult=&lt;null&gt;,subjectId=GrouperSystem,subjectIdentifier=&lt;null&gt;,subjectSourceId=&lt;null&gt;]
, params: null</resultMessage>
    <success>T</success>
    <httpStatusCode>200</httpStatusCode>
  </resultMetadata>
  <responseMetadata>
    <resultWarnings></resultWarnings>
    <serverVersion>v1_3_000</serverVersion>
  </responseMetadata>
  <wsGroups>
    <WsGroup>
      <extension>aGroup2</extension>
      <displayExtension>a group2</displayExtension>
      <description>a group description2</description>
      <displayName>a stem:a group2</displayName>
      <name>aStem:aGroup2</name>
      <uuid>f7a9e321-6a1d-4866-95ed-c301f88b54ae</uuid>
      <detail>
        <hasComposite>F</hasComposite>
        <typeNames>
          <string>base</string>
        </typeNames>
        <attributeNames>
          <string>description</string>
        </attributeNames>
        <attributeValues>
          <string>a group description2</string>
        </attributeValues>
        <createSubjectId>GrouperSystem</createSubjectId>
        <createTime>2008/03/29 06:32:31.699</createTime>
        <isCompositeFactor>F</isCompositeFactor>
        <modifySource></modifySource>
        <modifySubjectId>GrouperSystem</modifySubjectId>
        <modifyTime>2008/03/29 06:32:32.355</modifyTime>
      </detail>
    </WsGroup>
  </wsGroups>
  <wsSubject>
    <resultCode>SUCCESS</resultCode>
    <success>T</success>
    <id>10021368</id>
    <sourceId>qsuob</sourceId>
  </wsSubject>
</WsGetGroupsLiteResult>


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


package edu.internet2.middleware.grouper.ws.samples.rest;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.webservicesClient.util.ManualClientSettings;
import edu.internet2.middleware.grouper.ws.rest.WsRestResultProblem;
import edu.internet2.middleware.grouper.ws.rest.group.WsRestGetGroupsLiteRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.soap.WsGetGroupsLiteResult;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleGetGroupsRestLite2 implements WsSampleRest {

  /**
   * get groups lite web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  public static void getGroupsLite(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();
      
      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      PostMethod method = new PostMethod(
          RestClientSettings.URL + "/" + RestClientSettings.VERSION  
            + "/subjects/sources/qsuob/subjectId/10021368/groups");
      
      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(ManualClientSettings.USER, 
          ManualClientSettings.PASS);
      
      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(ManualClientSettings.HOST, ManualClientSettings.PORT), defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestGetGroupsLiteRequest getGroupsLite = new WsRestGetGroupsLiteRequest();

      // set the act as id
      getGroupsLite.setActAsSubjectId("GrouperSystem");

      getGroupsLite.setIncludeGroupDetail("T");
      getGroupsLite.setIncludeSubjectDetail("T");
      
      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(getGroupsLite);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));
      
      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      Object resultObject = wsSampleRestType.getWsLiteResponseContentType().parseString(response);
    
      //see if problem
      if (resultObject instanceof WsRestResultProblem) {
        throw new RuntimeException(((WsRestResultProblem)resultObject).getResultMetadata().getResultMessage());
      }

      //convert to object (from xhtml, xml, json, etc)
      WsGetGroupsLiteResult wsGetGroupsLiteResult = (WsGetGroupsLiteResult)resultObject;
      
      String resultMessage = wsGetGroupsLiteResult.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println("Server version: " + wsGetGroupsLiteResult.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  @SuppressWarnings("unchecked")
  public static void main(String[] args) {
    getGroupsLite(WsSampleRestType.xhtml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    getGroupsLite(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    //allow all
    return true;
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: v1_3_000, result code: SUCCESS, result message: Success for: clientVersion: v1_3_000, subjectLookups: Array size: 1: [0]: edu.internet2.middleware.grouper.ws.soap.WsSubjectLookup@1bfcfca[subject=<null>,cause=<null>,subjectFindResult=<null>,subjectId=10021368,subjectIdentifier=<null>,subjectSourceId...
memberFilter: All, includeGroupDetail: true, actAsSubject: edu.internet2.middleware.grouper.ws.soap.WsSubjectLookup@1e2e2f4[subject=<null>,cause=<null>,subjectFindResult=<null>,subjectId=GrouperSystem,subjectIdentifier=<null>,subjectSourceId=<null>]
, params: null
