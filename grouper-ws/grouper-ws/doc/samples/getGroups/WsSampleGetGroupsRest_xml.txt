Grouper web service sample of service: getGroups, WsSampleGetGroupsRest, manually written lite/rest, format: xml, for version: v1_4_002


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouperWs/servicesRest/v1_4_002/subjects HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.1
Host: localhost:8092
Content-Length: 289
Content-Type: text/xml; charset=UTF-8

<WsRestGetGroupsRequest>
  <subjectLookups>
    <WsSubjectLookup>
      <subjectId>10021368</subjectId>
    </WsSubjectLookup>
    <WsSubjectLookup>
      <subjectId>10039438</subjectId>
    </WsSubjectLookup>
  </subjectLookups>
  <subjectAttributeNames>
    <string>description</string>
  </subjectAttributeNames>
</WsRestGetGroupsRequest>


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 201 Created
Server: Apache-Coyote/1.1
Set-Cookie: JSESSIONID=xxxxxxxxxxxxxxxxxxxxxxxx; Path=/grouperWs
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: text/xml
Date: Thu, 05 Mar 2009 06:25:35 GMT
Connection: close

<WsGetGroupsResults>
  <results>
    <WsGetGroupsResult>
      <wsGroups>
        <WsGroup>
          <extension>aGroup2</extension>
          <displayExtension>a group2</displayExtension>
          <description>a group description2</description>
          <displayName>a stem:a group2</displayName>
          <name>aStem:aGroup2</name>
          <uuid>11716b0f-e03b-4b1c-928c-02a80e840607</uuid>
        </WsGroup>
        <WsGroup>
          <extension>sysadmingroup</extension>
          <displayExtension>sysadmingroup</displayExtension>
          <displayName>etc:sysadmingroup</displayName>
          <name>etc:sysadmingroup</name>
          <uuid>60ce9e23-c173-408b-b105-69097eae4d3e</uuid>
        </WsGroup>
        <WsGroup>
          <extension>webServiceActAsGroup</extension>
          <displayExtension>webServiceActAsGroup</displayExtension>
          <displayName>etc:webServiceActAsGroup</displayName>
          <name>etc:webServiceActAsGroup</name>
          <uuid>06c4250f-f9e5-4ecd-984b-58d4d3c79ecb</uuid>
        </WsGroup>
        <WsGroup>
          <extension>aGroup</extension>
          <displayExtension>a group</displayExtension>
          <description>a group description</description>
          <displayName>a stem:a group</displayName>
          <name>aStem:aGroup</name>
          <uuid>38a3532c-cb82-4b90-bb50-d57b67b31967</uuid>
        </WsGroup>
        <WsGroup>
          <extension>webServiceClientUsers</extension>
          <displayExtension>webServiceClientUsers</displayExtension>
          <displayName>etc:webServiceClientUsers</displayName>
          <name>etc:webServiceClientUsers</name>
          <uuid>5ac9dc4a-7d97-4411-9817-91d3d63f4fbd</uuid>
        </WsGroup>
      </wsGroups>
      <resultMetadata>
        <resultCode>SUCCESS</resultCode>
        <success>T</success>
      </resultMetadata>
      <wsSubject>
        <resultCode>SUCCESS</resultCode>
        <success>T</success>
        <id>10021368</id>
        <sourceId>pennperson</sourceId>
        <attributeValues>
          <string>Chris Hyzer</string>
        </attributeValues>
      </wsSubject>
    </WsGetGroupsResult>
    <WsGetGroupsResult>
      <wsGroups>
        <WsGroup>
          <extension>aGroup</extension>
          <displayExtension>a group</displayExtension>
          <description>a group description</description>
          <displayName>a stem:a group</displayName>
          <name>aStem:aGroup</name>
          <uuid>38a3532c-cb82-4b90-bb50-d57b67b31967</uuid>
        </WsGroup>
        <WsGroup>
          <extension>aGroup2</extension>
          <displayExtension>a group2</displayExtension>
          <description>a group description2</description>
          <displayName>a stem:a group2</displayName>
          <name>aStem:aGroup2</name>
          <uuid>11716b0f-e03b-4b1c-928c-02a80e840607</uuid>
        </WsGroup>
      </wsGroups>
      <resultMetadata>
        <resultCode>SUCCESS</resultCode>
        <success>T</success>
      </resultMetadata>
      <wsSubject>
        <resultCode>SUCCESS</resultCode>
        <success>T</success>
        <id>10039438</id>
        <sourceId>pennperson</sourceId>
        <attributeValues>
          <string>John Smith</string>
        </attributeValues>
      </wsSubject>
    </WsGetGroupsResult>
  </results>
  <resultMetadata>
    <resultCode>SUCCESS</resultCode>
    <resultMessage>Success for: clientVersion: v1_4_002, subjectLookups: Array size: 2: [0]: WsSubjectLookup[subjectId=10021368]
[1]: WsSubjectLookup[subjectId=10039438]

memberFilter: All, includeGroupDetail: false, actAsSubject: null
, params: null</resultMessage>
    <success>T</success>
  </resultMetadata>
  <subjectAttributeNames>
    <string>description</string>
  </subjectAttributeNames>
  <responseMetadata>
    <millis>281</millis>
    <serverVersion>v1_4_002</serverVersion>
  </responseMetadata>
</WsGetGroupsResults>


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


package edu.internet2.middleware.grouper.ws.samples.rest.group;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.ws.rest.WsRestResultProblem;
import edu.internet2.middleware.grouper.ws.rest.group.WsRestGetGroupsRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.soap.WsGetGroupsResults;
import edu.internet2.middleware.grouper.ws.soap.WsSubjectLookup;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleGetGroupsRest implements WsSampleRest {

  /**
   * get groups lite web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  @SuppressWarnings("deprecation")
  public static void getGroupsLite(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();
      
      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));

      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      PostMethod method = new PostMethod(
          RestClientSettings.URL + "/" + RestClientSettings.VERSION  
            + "/subjects");

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER, 
          RestClientSettings.PASS);

      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT), defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestGetGroupsRequest getGroups = new WsRestGetGroupsRequest();

      getGroups.setSubjectAttributeNames(new String[]{"description"});

      // seeif two subjects are in the group
      WsSubjectLookup[] subjectLookups = new WsSubjectLookup[2];
      subjectLookups[0] = new WsSubjectLookup("10021368", null, null);

      subjectLookups[1] = new WsSubjectLookup("10039438", null, null);

      getGroups.setSubjectLookups(subjectLookups);
      
      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(getGroups);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));
      
      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      Object result = wsSampleRestType
        .getWsLiteResponseContentType().parseString(response);
      
      //see if problem
      if (result instanceof WsRestResultProblem) {
        throw new RuntimeException(((WsRestResultProblem)result).getResultMetadata().getResultMessage());
      }
      
      //convert to object (from xhtml, xml, json, etc)
      WsGetGroupsResults wsGetGroupsResults = (WsGetGroupsResults)result;
      
      String resultMessage = wsGetGroupsResults.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: successString: " + successString + ", resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println("Server version: " + wsGetGroupsResults.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  @SuppressWarnings("unchecked")
  public static void main(String[] args) {
    getGroupsLite(WsSampleRestType.xml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    getGroupsLite(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    //dont allow http params
    return !WsSampleRestType.http_xhtml.equals(wsSampleRestType);
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: v1_4_002, result code: SUCCESS, result message: Success for: clientVersion: v1_4_002, subjectLookups: Array size: 2: [0]: WsSubjectLookup[subjectId=10021368]
[1]: WsSubjectLookup[subjectId=10039438]

memberFilter: All, includeGroupDetail: false, actAsSubject: null
, params: null
