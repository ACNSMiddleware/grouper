Grouper web service sample of service: getGrouperPrivileges, WsSampleGetGrouperPrivilegesListRestLite, manually written lite/rest, type: _list, format: http_xhtml, for version: v1_4_000


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouperWs/servicesRest/v1_4_000/grouperPrivileges HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.1
Host: localhost:8092
Content-Length: 154

wsLiteObjectType=WsRestGetGrouperPrivilegesLiteRequest&subjectId=test.subject.0&groupName=aStem%3AaGroup&privilegeType=access&actAsSubjectId=GrouperSystem


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Set-Cookie: JSESSIONID=xxxxxxxxxxxxxxxxxxxxxxxx; Path=/grouperWs
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: application/xhtml+xml
Date: Mon, 15 Dec 2008 09:00:43 GMT
Connection: close

<?xml version='1.0' encoding='iso-8859-1'?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>WsGetGrouperPrivilegesLiteResult</title>
  </head>
  <body>
    <div title="WsGetGrouperPrivilegesLiteResult">
      <div class="resultMetadata" title="WsResultMeta">
        <p class="resultCode">SUCCESS</p>
        <p class="success">T</p>
        <p class="resultMessage" />
        <p class="resultCode2" />
      </div>
      <div class="responseMetadata" title="WsResponseMeta">
        <p class="millis">453</p>
        <p class="resultWarnings" />
        <p class="serverVersion">v1_4_000</p>
      </div>
      <ul class="privilegeResults">
        <li title="WsGrouperPrivilegeResult">
          <p class="privilegeName">read</p>
          <div class="wsGroup" title="WsGroup">
            <p class="name">aStem:aGroup</p>
            <p class="displayName">a stem:a group</p>
            <p class="description">a group description</p>
            <div class="detail" title="WsGroupDetail" />
            <p class="extension">aGroup</p>
            <p class="uuid">1b718ac1-743d-4d5c-90e2-80141df45915</p>
            <p class="displayExtension">a group</p>
          </div>
          <div class="wsStem" title="WsStem" />
          <div class="wsSubject" title="WsSubject">
            <p class="name" />
            <p class="id">test.subject.0</p>
            <p class="resultCode">SUCCESS</p>
            <p class="success">T</p>
            <p class="identifierLookup" />
            <p class="sourceId">jdbc</p>
          </div>
          <p class="allowed">T</p>
          <p class="privilegeType">access</p>
          <div class="ownerSubject" title="WsSubject">
            <p class="name" />
            <p class="id">GrouperAll</p>
            <p class="resultCode">SUCCESS</p>
            <p class="success">T</p>
            <p class="identifierLookup" />
            <p class="sourceId">g:isa</p>
          </div>
          <p class="revokable">F</p>
        </li>
        <li title="WsGrouperPrivilegeResult">
          <p class="privilegeName">view</p>
          <div class="wsGroup" title="WsGroup">
            <p class="name">aStem:aGroup</p>
            <p class="displayName">a stem:a group</p>
            <p class="description">a group description</p>
            <div class="detail" title="WsGroupDetail" />
            <p class="extension">aGroup</p>
            <p class="uuid">1b718ac1-743d-4d5c-90e2-80141df45915</p>
            <p class="displayExtension">a group</p>
          </div>
          <div class="wsStem" title="WsStem" />
          <div class="wsSubject" title="WsSubject">
            <p class="name" />
            <p class="id">test.subject.0</p>
            <p class="resultCode">SUCCESS</p>
            <p class="success">T</p>
            <p class="identifierLookup" />
            <p class="sourceId">jdbc</p>
          </div>
          <p class="allowed">T</p>
          <p class="privilegeType">access</p>
          <div class="ownerSubject" title="WsSubject">
            <p class="name" />
            <p class="id">GrouperAll</p>
            <p class="resultCode">SUCCESS</p>
            <p class="success">T</p>
            <p class="identifierLookup" />
            <p class="sourceId">g:isa</p>
          </div>
          <p class="revokable">F</p>
        </li>
      </ul>
    </div>
  </body>
</html>


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


package edu.internet2.middleware.grouper.ws.samples.rest.grouperPrivileges;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.Group;
import edu.internet2.middleware.grouper.GroupFinder;
import edu.internet2.middleware.grouper.GrouperSession;
import edu.internet2.middleware.grouper.SubjectFinder;
import edu.internet2.middleware.grouper.ws.rest.group.WsRestGetGrouperPrivilegesLiteRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.soap.WsGetGrouperPrivilegesLiteResult;
import edu.internet2.middleware.grouper.ws.soap.WsGrouperPrivilegeResult;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleGetGrouperPrivilegesListRestLite implements WsSampleRest {

  /**
   * get grouper privileges lite web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  @SuppressWarnings("deprecation")
  public static void getGrouperPrivilegesListLite(WsSampleRestType wsSampleRestType) {

    try {
      
      HttpClient httpClient = new HttpClient();
      
      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));
      
      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      PostMethod method = new PostMethod(
          RestClientSettings.URL + "/" + RestClientSettings.VERSION  
            + "/grouperPrivileges");

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER, 
          RestClientSettings.PASS);
      
      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT), defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestGetGrouperPrivilegesLiteRequest wsRestGetGrouperPrivilegesLiteRequest 
        = new WsRestGetGrouperPrivilegesLiteRequest();

      // set the act as id
      wsRestGetGrouperPrivilegesLiteRequest.setActAsSubjectId("GrouperSystem");
      
      wsRestGetGrouperPrivilegesLiteRequest.setSubjectId("test.subject.0");
      wsRestGetGrouperPrivilegesLiteRequest.setGroupName("aStem:aGroup");
      
      wsRestGetGrouperPrivilegesLiteRequest.setPrivilegeType("access");

      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(wsRestGetGrouperPrivilegesLiteRequest);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));

      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      //convert to object (from xhtml, xml, json, etc)
      WsGetGrouperPrivilegesLiteResult wsGetGrouperPrivilegesLiteResult = (WsGetGrouperPrivilegesLiteResult)wsSampleRestType
        .getWsLiteResponseContentType().parseString(response);
      
      String resultMessage = wsGetGrouperPrivilegesLiteResult.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println("Server version: " + wsGetGrouperPrivilegesLiteResult.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );
      
      System.out.println(wsGetGrouperPrivilegesLiteResult);
      
      boolean foundAdmin = false;
      
      //lets make sure admin is in there
      for (WsGrouperPrivilegeResult wsGrouperPrivilegeResult : wsGetGrouperPrivilegesLiteResult.getPrivilegeResults()) {
        if (StringUtils.equals("admin", wsGrouperPrivilegeResult.getPrivilegeName())
            && StringUtils.equals("T", wsGrouperPrivilegeResult.getAllowed())) {
          foundAdmin = true;
        }
          
      }
      GrouperSession grouperSession = GrouperSession.startRootSession();
      boolean shouldHaveAdmin = false;
      try {
        Group group = GroupFinder.findByName(grouperSession, "aStem:aGroup");
        shouldHaveAdmin = group.hasAdmin(SubjectFinder.findById("test.subject.0"));
      } finally {
        GrouperSession.stopQuietly(grouperSession);
      }
      if (shouldHaveAdmin != foundAdmin) {
        throw new RuntimeException("admin priv found (" + foundAdmin 
            + ") is not the same as it should be: " + shouldHaveAdmin);
      }
      
    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  @SuppressWarnings("unchecked")
  public static void main(String[] args) {
    RestClientSettings.resetData();
    
    getGrouperPrivilegesListLite(WsSampleRestType.xhtml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    getGrouperPrivilegesListLite(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    return true;
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: v1_4_000, result code: SUCCESS, result message: null
WsGetGrouperPrivilegesLiteResult[
  resultMetadata=WsResultMeta[resultCode=SUCCESS,success=T,httpStatusCode=500],
  privilegeResults={WsGrouperPrivilegeResult[allowed=T,
  ownerSubject=WsSubject[resultCode=SUCCESS,success=T,id=GrouperAll,sourceId=g:isa],privilegeName=read,privilegeType=access,revokable=F,
  wsGroup=WsGroup[extension=aGroup,displayExtension=a group,description=a group description,displayName=a stem:a group,name=aStem:aGroup,uuid=1b718ac1-743d-4d5c-90e2-80141df45915],
  wsSubject=WsSubject[resultCode=SUCCESS,success=T,id=test.subject.0,sourceId=jdbc]],WsGrouperPrivilegeResult[allowed=T,
  ownerSubject=WsSubject[resultCode=SUCCESS,success=T,id=GrouperAll,sourceId=g:isa],privilegeName=view,privilegeType=access,revokable=F,
  wsGroup=WsGroup[extension=aGroup,displayExtension=a group,description=a group description,displayName=a stem:a group,name=aStem:aGroup,uuid=1b718ac1-743d-4d5c-90e2-80141df45915],
  wsSubject=WsSubject[resultCode=SUCCESS,success=T,id=test.subject.0,sourceId=jdbc]]},
  responseMetadata=WsResponseMeta[millis=453,millisStart=0,serverVersion=v1_4_000]]
