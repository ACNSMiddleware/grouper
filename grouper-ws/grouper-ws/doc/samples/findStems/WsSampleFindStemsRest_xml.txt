Grouper web service sample of service: findStems, WsSampleFindStemsRest, manually written lite/rest, format: xml, for version: v1_3_000


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouper-ws/servicesRest/v1_3_000/stems HTTP/1.1
Connection: close
Authorization: Basic R3JvdXBlclN5c3RlbTpwYXNz
User-Agent: Jakarta Commons-HttpClient/3.0.1
Host: localhost:8092
Content-Length: 262
Content-Type: text/xml; charset=UTF-8

<WsRestFindStemsRequest>
  <wsStemQueryFilter>
    <stemQueryFilterType>FIND_BY_STEM_NAME_APPROXIMATE</stemQueryFilterType>
    <stemName>aSte</stemName>
  </wsStemQueryFilter>
  <actAsSubjectLookup>
    <subjectId>GrouperSystem</subjectId>
  </actAsSubjectLookup>
</WsRestFindStemsRequest>


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: text/xml
Date: Mon, 31 Mar 2008 06:48:30 GMT
Connection: close

<WsFindStemsResults>
  <stemResults>
    <WsStem>
      <extension>a stem</extension>
      <displayExtension>aStem</displayExtension>
      <description></description>
      <displayName>aStem</displayName>
      <name>a stem</name>
      <uuid>a stem description</uuid>
    </WsStem>
    <WsStem>
      <extension>aStem</extension>
      <displayExtension>a stem</displayExtension>
      <description>a stem description</description>
      <displayName>a stem</displayName>
      <name>aStem</name>
      <uuid>d16f5fda-80f5-40ea-a845-5d67dd5fffac</uuid>
    </WsStem>
    <WsStem>
      <extension>testStem</extension>
      <displayExtension>test stem</displayExtension>
      <description>the test stem</description>
      <displayName>a stem:test stem</displayName>
      <name>aStem:testStem</name>
      <uuid>163c8521-74fb-4975-ba95-df9ab284023c</uuid>
    </WsStem>
    <WsStem>
      <extension>test</extension>
      <displayExtension>the test stem</displayExtension>
      <description>test stem</description>
      <displayName>a stem:the test stem</displayName>
      <name>aStem:test</name>
      <uuid>2067512d-b25e-4a45-8668-507157dda1f8</uuid>
    </WsStem>
    <WsStem>
      <extension>aStemToSave</extension>
      <displayExtension>disp1</displayExtension>
      <description>desc1</description>
      <displayName>a stem:disp1</displayName>
      <name>aStem:aStemToSave</name>
      <uuid>87a28251-f2cc-4589-b67b-bd14ee3ff290</uuid>
    </WsStem>
    <WsStem>
      <extension>whateverStem</extension>
      <displayExtension>disp1</displayExtension>
      <description>desc1</description>
      <displayName>a stem:disp1</displayName>
      <name>aStem:whateverStem</name>
      <uuid>f9223f4e-37b1-4fbe-99c3-96a550c4fa8d</uuid>
    </WsStem>
    <WsStem>
      <extension>whateverStem2</extension>
      <displayExtension>disp2</displayExtension>
      <description>descs</description>
      <displayName>a stem:disp2</displayName>
      <name>aStem:whateverStem2</name>
      <uuid>09fbd59b-6a6d-41da-9a6c-394418b02f13</uuid>
    </WsStem>
  </stemResults>
  <resultMetadata>
    <wsResultCode class="edu.internet2.middleware.grouper.ws.soap.WsFindStemsResults$WsFindStemsResultsCode">SUCCESS</wsResultCode>
    <resultCode>SUCCESS</resultCode>
    <resultMessage>Success for: clientVersion: v1_3_000, wsStemQueryFilter: edu.internet2.middleware.grouper.ws.soap.WsStemQueryFilter@386ac2[grouperSession=&lt;null&gt;,stemQueryFilterType=FIND_BY_STEM_NAME_APPROXIMATE,stemName=aSte,parentStemName=&lt;null&gt;,parentStemNameScope=&lt;null&gt;,stemUuid=&lt;null&gt;,stemAttributeValue=&lt;null&gt;,stemAttributeName=&lt;null&gt;,stemQueryFilter0=&lt;null&gt;,stemQueryFilter1=&lt;null&gt;], actAsSubject: edu.internet2.middleware.grouper.ws.soap.WsSubjectLookup@1e8e6aa[subject=&lt;null&gt;,cause=&lt;null&gt;,subjectFindResult=&lt;null&gt;,subjectId=GrouperSystem,subjectIdentifier=&lt;null&gt;,subjectSourceId=&lt;null&gt;]
, params: null</resultMessage>
    <success>T</success>
    <httpStatusCode>200</httpStatusCode>
  </resultMetadata>
  <responseMetadata>
    <resultWarnings></resultWarnings>
    <millis>-1</millis>
    <millisStart>1206946110943</millisStart>
    <serverVersion>v1_3_000</serverVersion>
  </responseMetadata>
</WsFindStemsResults>


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


package edu.internet2.middleware.grouper.ws.samples.rest.stem;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.webservicesClient.util.ManualClientSettings;
import edu.internet2.middleware.grouper.ws.query.WsStemQueryFilterType;
import edu.internet2.middleware.grouper.ws.rest.WsRestResultProblem;
import edu.internet2.middleware.grouper.ws.rest.stem.WsRestFindStemsRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.soap.WsFindStemsResults;
import edu.internet2.middleware.grouper.ws.soap.WsStemQueryFilter;
import edu.internet2.middleware.grouper.ws.soap.WsSubjectLookup;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleFindStemsRest implements WsSampleRest {

  /**
   * find stem lite web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  public static void findStemsLite(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();
      
      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      PostMethod method = new PostMethod(
          RestClientSettings.URL + "/" + RestClientSettings.VERSION  
            + "/stems");

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(ManualClientSettings.USER, 
          ManualClientSettings.PASS);

      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(ManualClientSettings.HOST, ManualClientSettings.PORT), defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestFindStemsRequest findStems = new WsRestFindStemsRequest();

      // set the act as id
      WsSubjectLookup actAsSubject = new WsSubjectLookup("GrouperSystem", null, null);
      findStems.setActAsSubjectLookup(actAsSubject);

      WsStemQueryFilter wsStemQueryFilter = new WsStemQueryFilter();
      wsStemQueryFilter.setStemName("aSte");
      wsStemQueryFilter.setStemQueryFilterType(WsStemQueryFilterType.FIND_BY_STEM_NAME_APPROXIMATE.name());
      
      findStems.setWsStemQueryFilter(wsStemQueryFilter);

      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(findStems);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));
      
      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      Object result = wsSampleRestType
        .getWsLiteResponseContentType().parseString(response);
      
      //see if problem
      if (result instanceof WsRestResultProblem) {
        throw new RuntimeException(((WsRestResultProblem)result).getResultMetadata().getResultMessage());
      }
      
      //convert to object (from xhtml, xml, json, etc)
      WsFindStemsResults wsFindStemsResults = (WsFindStemsResults)result;
      
      String resultMessage = wsFindStemsResults.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: successString: " + successString + ", resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println("Server version: " + wsFindStemsResults.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  @SuppressWarnings("unchecked")
  public static void main(String[] args) {
    findStemsLite(WsSampleRestType.xhtml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    findStemsLite(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    //dont allow http params
    return !WsSampleRestType.http_xhtml.equals(wsSampleRestType);
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: v1_3_000, result code: SUCCESS, result message: Success for: clientVersion: v1_3_000, wsStemQueryFilter: edu.internet2.middleware.grouper.ws.soap.WsStemQueryFilter@386ac2[grouperSession=<null>,stemQueryFilterType=FIND_BY_STEM_NAME_APPROXIMATE,stemName=aSte,parentStemName=<null>,parentStemNameScope=<null>,stemUuid=<null>,stemAttributeValue=<null>,stemAttributeName=<null>,stemQueryFilter0=<null>,stemQueryFilter1=<null>], actAsSubject: edu.internet2.middleware.grouper.ws.soap.WsSubjectLookup@1e8e6aa[subject=<null>,cause=<null>,subjectFindResult=<null>,subjectId=GrouperSystem,subjectIdentifier=<null>,subjectSourceId=<null>]
, params: null
