Grouper web service sample of service: getPermissionAssignments, WsSampleGetPermissionAssignmentsRest, manually written lite/rest, format: json, for version: v1_6_000


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouperWs/servicesRest/v1_6_000/permissionAssignments HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.1
Host: localhost:8092
Content-Length: 110
Content-Type: text/x-json; charset=UTF-8

{
  "WsRestGetPermissionAssignmentsRequest":{
    "wsAttributeDefLookups":[
      {
        "name":"aStem:permissionDef",
        "uuid":""
      }
    ]
  }
}


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Set-Cookie: JSESSIONID=xxxxxxxxxxxxxxxxxxxxxxxx; Path=/grouperWs
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: text/x-json;charset=UTF-8
Content-Length: 1763
Date: Sun, 18 Apr 2010 13:38:23 GMT
Connection: close

{
  "WsGetPermissionAssignmentsResults":{
    "responseMetadata":{
      "millis":"443",
      "serverVersion":"v1_6_000"
    },
    "resultMetadata":{
      "resultCode":"SUCCESS",
      "resultMessage":", Found 2 results.",
      "success":"T"
    },
    "wsAttributeDefs":[
      {
        "attributeDefType":"perm",
        "extension":"permissionDef",
        "multiAssignable":"F",
        "multiValued":"F",
        "name":"aStem:permissionDef",
        "uuid":"5f0da6b636314974af7495dc5b1816f5",
        "valueType":"marker"
      }
    ]
    ,
    "wsGroups":[
      {
        "displayExtension":"role",
        "displayName":"a stem:role",
        "extension":"role",
        "name":"aStem:role",
        "uuid":"d0da9f64adaf49cd8e4ee0dac412a530"
      },
      {
        "displayExtension":"role2",
        "displayName":"a stem:role2",
        "extension":"role2",
        "name":"aStem:role2",
        "uuid":"6fcf887da4a84565aeb850cf084eb83a"
      }
    ]
    ,
    "wsPermissionAssigns":[
      {
        "action":"action",
        "attributeAssignId":"76df23fca8664e53bd7c9178208d5bc4",
        "attributeDefId":"5f0da6b636314974af7495dc5b1816f5",
        "attributeDefName":"aStem:permissionDef",
        "attributeDefNameId":"f4f52092b8a74fe5ba9dc88cb3ba8b37",
        "attributeDefNameName":"aStem:permissionDefName",
        "enabled":"T",
        "membershipId":"aec7eb72f8784e729e75c3335bf975f3:2c6a66cbba0d491388f42fcce8f8ec54",
        "permissionType":"role",
        "roleId":"d0da9f64adaf49cd8e4ee0dac412a530",
        "roleName":"aStem:role",
        "sourceId":"jdbc",
        "subjectId":"test.subject.0"
      },
      {
        "action":"action2",
        "attributeAssignId":"5725b3d24f6142c6be7085c147c1bc33",
        "attributeDefId":"5f0da6b636314974af7495dc5b1816f5",
        "attributeDefName":"aStem:permissionDef",
        "attributeDefNameId":"daa551be8e3b4224856b54e954de02ae",
        "attributeDefNameName":"aStem:permissionDefName2",
        "enabled":"T",
        "membershipId":"3c33def1bb19487cbdf96b8cad8a8c93:277b6f4dde1740d789bb7dd760e487de",
        "permissionType":"role_subject",
        "roleId":"6fcf887da4a84565aeb850cf084eb83a",
        "roleName":"aStem:role2",
        "sourceId":"jdbc",
        "subjectId":"test.subject.1"
      }
    ]
    ,
    "wsSubjects":[
    ]
  }
}


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


package edu.internet2.middleware.grouper.ws.samples.rest.permission;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.ws.rest.WsRestResultProblem;
import edu.internet2.middleware.grouper.ws.rest.permission.WsRestGetPermissionAssignmentsRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.soap.WsAttributeDefLookup;
import edu.internet2.middleware.grouper.ws.soap.WsGetPermissionAssignmentsResults;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleGetPermissionAssignmentsRest implements WsSampleRest {

  /**
   * get permission assignments lite web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  public static void getPermissionAssignments(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();
      
      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));

      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      String url = RestClientSettings.URL + "/" + RestClientSettings.VERSION  
        + "/permissionAssignments";
      PostMethod method = new PostMethod(
          url);

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER, 
          RestClientSettings.PASS);

      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT), defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestGetPermissionAssignmentsRequest getPermissionAssignments = new WsRestGetPermissionAssignmentsRequest();

      
      
      WsAttributeDefLookup wsAttributeDefLookup = new WsAttributeDefLookup();
      wsAttributeDefLookup.setUuid("");
      wsAttributeDefLookup.setName("aStem:permissionDef");
      getPermissionAssignments.setWsAttributeDefLookups(new WsAttributeDefLookup[]{wsAttributeDefLookup});
      
      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(getPermissionAssignments);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));
      
      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      Object result = wsSampleRestType
        .getWsLiteResponseContentType().parseString(response);
      
      //see if problem
      if (result instanceof WsRestResultProblem) {
        throw new RuntimeException(((WsRestResultProblem)result).getResultMetadata().getResultMessage());
      }
      
      //convert to object (from xhtml, xml, json, etc)
      WsGetPermissionAssignmentsResults wsGetPermissionAssignmentsResults = (WsGetPermissionAssignmentsResults)result;
      
      String resultMessage = wsGetPermissionAssignmentsResults.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: successString: " + successString + ", resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println("Server version: " + wsGetPermissionAssignmentsResults.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  public static void main(String[] args) {
    getPermissionAssignments(WsSampleRestType.xml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    getPermissionAssignments(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    //dont allow http params
    return !WsSampleRestType.http_xhtml.equals(wsSampleRestType);
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: v1_6_000, result code: SUCCESS, result message: , Found 2 results.
