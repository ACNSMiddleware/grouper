Grouper web service sample of service: getPermissionAssignments, WsSampleGetPermissionAssignmentsRest, manually written lite/rest, format: xml, for version: 2.1.0


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouper-ws/servicesRest/v2_1_000/permissionAssignments HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.0
Host: localhost:8092
Content-Length: 216
Content-Type: text/xml; charset=UTF-8

<WsRestGetPermissionAssignmentsRequest>
  <wsAttributeDefLookups>
    <WsAttributeDefLookup>
      <uuid></uuid>
      <name>aStem:permissionDef</name>
    </WsAttributeDefLookup>
  </wsAttributeDefLookups>
</WsRestGetPermissionAssignmentsRequest>


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Set-Cookie: JSESSIONID=xxxxxxxxxxxxxxxxxxxxxxxx; Path=/grouper-ws
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: text/xml;charset=UTF-8
Date: Sat, 17 Mar 2012 15:44:58 GMT
Connection: close

<WsGetPermissionAssignmentsResults>
  <wsAttributeDefs>
    <WsAttributeDef>
      <extension>permissionDef</extension>
      <name>aStem:permissionDef</name>
      <uuid>8b6e295640654512adb8da133b53c988</uuid>
      <attributeDefType>perm</attributeDefType>
      <multiAssignable>F</multiAssignable>
      <multiValued>F</multiValued>
      <valueType>marker</valueType>
    </WsAttributeDef>
  </wsAttributeDefs>
  <wsPermissionAssigns>
    <WsPermissionAssign>
      <action>read</action>
      <permissionType>role</permissionType>
      <attributeDefNameId>b72677a38f17457ebef87665dac8af25</attributeDefNameId>
      <attributeDefNameName>aStem:permissionDefName</attributeDefNameName>
      <attributeDefId>8b6e295640654512adb8da133b53c988</attributeDefId>
      <attributeDefName>aStem:permissionDef</attributeDefName>
      <enabled>T</enabled>
      <attributeAssignId>09468fec39b4497fa1a93406db0e1345</attributeAssignId>
      <roleId>9a27b9c9a3164e6bbabb8f66316ba09f</roleId>
      <roleName>aStem:role</roleName>
      <subjectId>test.subject.0</subjectId>
      <sourceId>jdbc</sourceId>
      <membershipId>43216e4c415a4d11a7dde3a926d6d9e1:98c99e8057204b4d8aeacbc319631448</membershipId>
      <allowedOverall>T</allowedOverall>
      <disallowed>F</disallowed>
    </WsPermissionAssign>
    <WsPermissionAssign>
      <action>read</action>
      <permissionType>role</permissionType>
      <attributeDefNameId>b72677a38f17457ebef87665dac8af25</attributeDefNameId>
      <attributeDefNameName>aStem:permissionDefName</attributeDefNameName>
      <attributeDefId>8b6e295640654512adb8da133b53c988</attributeDefId>
      <attributeDefName>aStem:permissionDef</attributeDefName>
      <enabled>T</enabled>
      <attributeAssignId>09468fec39b4497fa1a93406db0e1345</attributeAssignId>
      <roleId>9a27b9c9a3164e6bbabb8f66316ba09f</roleId>
      <roleName>aStem:role</roleName>
      <subjectId>test.subject.4</subjectId>
      <sourceId>jdbc</sourceId>
      <membershipId>86ff81ffa48d49c7acf387261e460aab:98c99e8057204b4d8aeacbc319631448</membershipId>
      <allowedOverall>T</allowedOverall>
      <disallowed>F</disallowed>
    </WsPermissionAssign>
    <WsPermissionAssign>
      <action>write</action>
      <permissionType>role_subject</permissionType>
      <attributeDefNameId>2d37292c0d2545159d9107120850615d</attributeDefNameId>
      <attributeDefNameName>aStem:permissionDefName2</attributeDefNameName>
      <attributeDefId>8b6e295640654512adb8da133b53c988</attributeDefId>
      <attributeDefName>aStem:permissionDef</attributeDefName>
      <enabled>T</enabled>
      <attributeAssignId>618ccc93618c4fd6a1e2d825b0244436</attributeAssignId>
      <roleId>f636a30b1ffb4331a12b89da0ac45b7b</roleId>
      <roleName>aStem:role2</roleName>
      <subjectId>test.subject.1</subjectId>
      <sourceId>jdbc</sourceId>
      <membershipId>b76b5f434c2043b686eb9d4b7353d5cf:309c4d77f1cd4156b38d82df689a260a</membershipId>
      <allowedOverall>T</allowedOverall>
      <disallowed>F</disallowed>
    </WsPermissionAssign>
  </wsPermissionAssigns>
  <resultMetadata>
    <resultCode>SUCCESS</resultCode>
    <resultMessage>, Found 3 results.  </resultMessage>
    <success>T</success>
  </resultMetadata>
  <responseMetadata>
    <resultWarnings></resultWarnings>
    <millis>157</millis>
    <serverVersion>2.1.0</serverVersion>
  </responseMetadata>
  <wsGroups>
    <WsGroup>
      <extension>role</extension>
      <typeOfGroup>role</typeOfGroup>
      <displayExtension>role</displayExtension>
      <displayName>a stem:role</displayName>
      <name>aStem:role</name>
      <uuid>9a27b9c9a3164e6bbabb8f66316ba09f</uuid>
    </WsGroup>
    <WsGroup>
      <extension>role2</extension>
      <typeOfGroup>role</typeOfGroup>
      <displayExtension>role2</displayExtension>
      <displayName>a stem:role2</displayName>
      <name>aStem:role2</name>
      <uuid>f636a30b1ffb4331a12b89da0ac45b7b</uuid>
    </WsGroup>
  </wsGroups>
  <wsSubjects/>
</WsGetPermissionAssignmentsResults>


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


package edu.internet2.middleware.grouper.ws.samples.rest.permission;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.ws.coresoap.WsAttributeDefLookup;
import edu.internet2.middleware.grouper.ws.coresoap.WsGetPermissionAssignmentsResults;
import edu.internet2.middleware.grouper.ws.rest.WsRestResultProblem;
import edu.internet2.middleware.grouper.ws.rest.permission.WsRestGetPermissionAssignmentsRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleGetPermissionAssignmentsRest implements WsSampleRest {

  /**
   * get permission assignments lite web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  public static void getPermissionAssignments(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();
      
      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));

      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      String url = RestClientSettings.URL + "/" + RestClientSettings.VERSION  
        + "/permissionAssignments";
      PostMethod method = new PostMethod(
          url);

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER, 
          RestClientSettings.PASS);

      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT), defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestGetPermissionAssignmentsRequest getPermissionAssignments = new WsRestGetPermissionAssignmentsRequest();

      
      
      WsAttributeDefLookup wsAttributeDefLookup = new WsAttributeDefLookup();
      wsAttributeDefLookup.setUuid("");
      wsAttributeDefLookup.setName("aStem:permissionDef");
      getPermissionAssignments.setWsAttributeDefLookups(new WsAttributeDefLookup[]{wsAttributeDefLookup});
      
      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(getPermissionAssignments);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));
      
      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      Object result = wsSampleRestType
        .getWsLiteResponseContentType().parseString(response);
      
      //see if problem
      if (result instanceof WsRestResultProblem) {
        throw new RuntimeException(((WsRestResultProblem)result).getResultMetadata().getResultMessage());
      }
      
      //convert to object (from xhtml, xml, json, etc)
      WsGetPermissionAssignmentsResults wsGetPermissionAssignmentsResults = (WsGetPermissionAssignmentsResults)result;
      
      String resultMessage = wsGetPermissionAssignmentsResults.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: successString: " + successString + ", resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println("Server version: " + wsGetPermissionAssignmentsResults.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  public static void main(String[] args) {
    getPermissionAssignments(WsSampleRestType.xml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    getPermissionAssignments(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    //dont allow http params
    return !WsSampleRestType.http_xhtml.equals(wsSampleRestType);
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: 2.1.0, result code: SUCCESS, result message: , Found 3 results.
