Grouper web service sample of service: assignGrouperPrivileges, WsSampleAssignGrouperPrivilegesRest, manually written lite/rest, format: json, for version: 2.1.1


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouper-ws/servicesRest/v2_1_001/grouperPrivileges HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.1
Host: localhost:8092
Content-Length: 442
Content-Type: text/x-json; charset=UTF-8

{
  "WsRestAssignGrouperPrivilegesRequest":{
    "actAsSubjectLookup":{
      "subjectId":"GrouperSystem"
    },
    "allowed":"T",
    "clientVersion":"v2_1_001",
    "privilegeNames":[
      "update",
      "read"
    ]
    ,
    "privilegeType":"access",
    "replaceAllExisting":"F",
    "wsGroupLookup":{
      "groupName":"aStem:aGroup"
    },
    "wsSubjectLookups":[
      {
        "subjectId":"test.subject.0",
        "subjectIdentifier":"",
        "subjectSourceId":"jdbc"
      },
      {
        "subjectId":"",
        "subjectIdentifier":"id.test.subject.1",
        "subjectSourceId":""
      }
    ]
  }
}


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Set-Cookie: JSESSIONID=xxxxxxxxxxxxxxxxxxxxxxxx; Path=/grouper-ws
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: text/x-json;charset=UTF-8
Content-Length: 1833
Date: Sun, 01 Jul 2012 13:23:26 GMT
Connection: close

{
  "WsAssignGrouperPrivilegesResults":{
    "responseMetadata":{
      "millis":"295",
      "serverVersion":"2.1.1"
    },
    "resultMetadata":{
      "resultCode":"SUCCESS",
      "resultMessage":"Success for: clientVersion: 2.1.1, wsSubjects: Array size: 2: [0]: WsSubjectLookup[subjectId=test.subject.0,subjectIdentifier=,subjectSourceId=j..., group: WsGroupLookup[pitGroups=[],groupName=aStem:aGroup], stem: null, privilege: ACCESS-Array size: 2: [0]: update\n[1]: read\n, allowed? true, actAsSubject: WsSubjectLookup[subjectId=GrouperSystem], replaceAllExisting: false\n, params: null",
      "success":"T"
    },
    "results":[
      {
        "privilegeName":"update",
        "privilegeType":"access",
        "resultMetadata":{
          "resultCode":"SUCCESS_ALLOWED",
          "success":"T"
        },
        "wsSubject":{
          "id":"test.subject.0",
          "name":"my name is test.subject.0",
          "resultCode":"SUCCESS",
          "sourceId":"jdbc",
          "success":"T"
        }
        
      },
      {
        "privilegeName":"update",
        "privilegeType":"access",
        "resultMetadata":{
          "resultCode":"SUCCESS_ALLOWED",
          "success":"T"
        },
        "wsSubject":{
          "id":"test.subject.1",
          "identifierLookup":"id.test.subject.1",
          "name":"my name is test.subject.1",
          "resultCode":"SUCCESS",
          "sourceId":"jdbc",
          "success":"T"
        }
        
      },
      {
        "privilegeName":"read",
        "privilegeType":"access",
        "resultMetadata":{
          "resultCode":"SUCCESS_ALLOWED",
          "success":"T"
        },
        "wsSubject":{
          "id":"test.subject.0",
          "name":"my name is test.subject.0",
          "resultCode":"SUCCESS",
          "sourceId":"jdbc",
          "success":"T"
        }
        
      },
      {
        "privilegeName":"read",
        "privilegeType":"access",
        "resultMetadata":{
          "resultCode":"SUCCESS_ALLOWED",
          "success":"T"
        },
        "wsSubject":{
          "id":"test.subject.1",
          "identifierLookup":"id.test.subject.1",
          "name":"my name is test.subject.1",
          "resultCode":"SUCCESS",
          "sourceId":"jdbc",
          "success":"T"
        }
      }
    ]
    ,
    "wsGroup":{
      "description":"a group description",
      "displayExtension":"a group",
      "displayName":"a stem:a group",
      "extension":"aGroup",
      "name":"aStem:aGroup",
      "typeOfGroup":"group",
      "uuid":"4aa15d6ac21d4b95b03ba8c070841aab"
    }
  }
}


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


/*******************************************************************************
 * Copyright 2012 Internet2
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package edu.internet2.middleware.grouper.ws.samples.rest.grouperPrivileges;

import java.lang.reflect.Array;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

import edu.internet2.middleware.grouper.ws.coresoap.WsAssignGrouperPrivilegesResult;
import edu.internet2.middleware.grouper.ws.coresoap.WsAssignGrouperPrivilegesResults;
import edu.internet2.middleware.grouper.ws.coresoap.WsGroupLookup;
import edu.internet2.middleware.grouper.ws.coresoap.WsSubjectLookup;
import edu.internet2.middleware.grouper.ws.rest.group.WsRestAssignGrouperPrivilegesRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleAssignGrouperPrivilegesRest implements WsSampleRest {

  /**
   * get grouper privileges web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  @SuppressWarnings("deprecation")
  public static void assignGrouperPrivileges(WsSampleRestType wsSampleRestType) {

    try {
      
      HttpClient httpClient = new HttpClient();
      
      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));

      httpClient.getParams().setParameter("http.socket.timeout", new Integer(30000));

      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      PostMethod method = new PostMethod(
          RestClientSettings.URL + "/" + RestClientSettings.VERSION  
            + "/grouperPrivileges");

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER, 
          RestClientSettings.PASS);
      
      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT), defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestAssignGrouperPrivilegesRequest wsRestAssignGrouperPrivilegesRequest 
        = new WsRestAssignGrouperPrivilegesRequest();
      
      wsRestAssignGrouperPrivilegesRequest.setPrivilegeType("access");
      wsRestAssignGrouperPrivilegesRequest.setPrivilegeNames(new String[]{"update", "read"});
      
      // set the act as id
      WsSubjectLookup actAsSubject = WsSubjectLookup.class.newInstance();
      actAsSubject.setSubjectId("GrouperSystem");
      wsRestAssignGrouperPrivilegesRequest.setActAsSubjectLookup(actAsSubject);

      // just add, dont replace
      wsRestAssignGrouperPrivilegesRequest.setReplaceAllExisting("F");

      WsGroupLookup wsGroupLookup = WsGroupLookup.class.newInstance();
      wsGroupLookup.setGroupName("aStem:aGroup");
      wsRestAssignGrouperPrivilegesRequest.setWsGroupLookup(wsGroupLookup);
      
      //version, e.g. v1_3_000
      wsRestAssignGrouperPrivilegesRequest.setClientVersion(RestClientSettings.VERSION);

      // add two subjects to the group
      WsSubjectLookup[] subjectLookups = (WsSubjectLookup[]) Array.newInstance(WsSubjectLookup.class,
              2);
      subjectLookups[0] = WsSubjectLookup.class.newInstance();
      subjectLookups[0].setSubjectId("test.subject.0");
      subjectLookups[0].setSubjectSourceId("jdbc");
      subjectLookups[0].setSubjectIdentifier("");

      subjectLookups[1] = WsSubjectLookup.class.newInstance();
      subjectLookups[1].setSubjectId("");
      subjectLookups[1].setSubjectSourceId("");
      subjectLookups[1].setSubjectIdentifier("id.test.subject.1");

      wsRestAssignGrouperPrivilegesRequest.setWsSubjectLookups(subjectLookups);

      wsRestAssignGrouperPrivilegesRequest.setAllowed("T");

      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(wsRestAssignGrouperPrivilegesRequest);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));

      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      //convert to object (from xhtml, xml, json, etc)
      WsAssignGrouperPrivilegesResults wsAssignGrouperPrivilegesResults = (WsAssignGrouperPrivilegesResults)wsSampleRestType
        .getWsLiteResponseContentType().parseString(response);
      
      String resultMessage = wsAssignGrouperPrivilegesResults.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println(ToStringBuilder.reflectionToString(
          wsAssignGrouperPrivilegesResults, ToStringStyle.MULTI_LINE_STYLE));
      System.out.println(ToStringBuilder.reflectionToString(
          wsAssignGrouperPrivilegesResults.getResultMetadata(),
          ToStringStyle.MULTI_LINE_STYLE));

      if (wsAssignGrouperPrivilegesResults != null) {
        for (WsAssignGrouperPrivilegesResult wsAssignGrouperPrivilegesResult : wsAssignGrouperPrivilegesResults.getResults()) {
            System.out.println(ToStringBuilder.reflectionToString(
                wsAssignGrouperPrivilegesResult, ToStringStyle.MULTI_LINE_STYLE));
            System.out.println(ToStringBuilder.reflectionToString(
                wsAssignGrouperPrivilegesResult.getResultMetadata(),
                    ToStringStyle.MULTI_LINE_STYLE));
        }
      }

      if (!StringUtils.equals("T", 
          wsAssignGrouperPrivilegesResults.getResultMetadata().getSuccess())) {
        throw new RuntimeException("didnt get success! ");
      }

      System.out.println("Server version: " + wsAssignGrouperPrivilegesResults.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );
        
    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  @SuppressWarnings("unchecked")
  public static void main(String[] args) {
    RestClientSettings.resetData();
    assignGrouperPrivileges(WsSampleRestType.xhtml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    assignGrouperPrivileges(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    //dont allow http params
    return !WsSampleRestType.http_json.equals(wsSampleRestType);
  }
}


#########################################
##
## Stdout
##
#########################################


edu.internet2.middleware.grouper.ws.coresoap.WsAssignGrouperPrivilegesResults@759b61[
  resultMetadata=WsResultMeta[resultCode=SUCCESS,resultMessage=Success for: clientVersion: 2.1.1, wsSubjects: Array size: 2: [0]: WsSubjectLookup[subjectId=test.subject.0,subjectIdentifier=,subjectSourceId=j..., group: WsGroupLookup[pitGroups=[],groupName=aStem:aGroup], stem: null, privilege: ACCESS-Array size: 2: [0]: update
[1]: read
, allowed? true, actAsSubject: WsSubjectLookup[subjectId=GrouperSystem], replaceAllExisting: false
, params: null,success=T,httpStatusCode=500]
  subjectAttributeNames=<null>
  responseMetadata=WsResponseMeta[resultWarnings=,millis=295,millisStart=0,serverVersion=2.1.1]
  wsGroup=WsGroup[extension=aGroup,typeOfGroup=group,displayExtension=a group,description=a group description,displayName=a stem:a group,name=aStem:aGroup,uuid=4aa15d6ac21d4b95b03ba8c070841aab]
  wsStem=<null>
  results={WsAssignGrouperPrivilegesResult[
  resultMetadata=WsResultMeta[resultCode=SUCCESS_ALLOWED,success=T,httpStatusCode=500],privilegeName=update,privilegeType=access,
  wsSubject=WsSubject[resultCode=SUCCESS,success=T,id=test.subject.0,name=my name is test.subject.0,sourceId=jdbc]],WsAssignGrouperPrivilegesResult[
  resultMetadata=WsResultMeta[resultCode=SUCCESS_ALLOWED,success=T,httpStatusCode=500],privilegeName=update,privilegeType=access,
  wsSubject=WsSubject[identifierLookup=id.test.subject.1,resultCode=SUCCESS,success=T,id=test.subject.1,name=my name is test.subject.1,sourceId=jdbc]],WsAssignGrouperPrivilegesResult[
  resultMetadata=WsResultMeta[resultCode=SUCCESS_ALLOWED,success=T,httpStatusCode=500],privilegeName=read,privilegeType=access,
  wsSubject=WsSubject[resultCode=SUCCESS,success=T,id=test.subject.0,name=my name is test.subject.0,sourceId=jdbc]],WsAssignGrouperPrivilegesResult[
  resultMetadata=WsResultMeta[resultCode=SUCCESS_ALLOWED,success=T,httpStatusCode=500],privilegeName=read,privilegeType=access,
  wsSubject=WsSubject[identifierLookup=id.test.subject.1,resultCode=SUCCESS,success=T,id=test.subject.1,name=my name is test.subject.1,sourceId=jdbc]]}
]
edu.internet2.middleware.grouper.ws.coresoap.WsResultMeta@12c2bac[
  params=<null>
  resultCode=SUCCESS
  resultCode2=<null>
  resultMessage=Success for: clientVersion: 2.1.1, wsSubjects: Array size: 2: [0]: WsSubjectLookup[subjectId=test.subject.0,subjectIdentifier=,subjectSourceId=j..., group: WsGroupLookup[pitGroups=[],groupName=aStem:aGroup], stem: null, privilege: ACCESS-Array size: 2: [0]: update
[1]: read
, allowed? true, actAsSubject: WsSubjectLookup[subjectId=GrouperSystem], replaceAllExisting: false
, params: null
  success=T
  httpStatusCode=500
]
edu.internet2.middleware.grouper.ws.coresoap.WsAssignGrouperPrivilegesResult@9158ab[
  resultMetadata=WsResultMeta[resultCode=SUCCESS_ALLOWED,success=T,httpStatusCode=500]
  params=<null>
  allowed=<null>
  privilegeName=update
  privilegeType=access
  wsSubject=WsSubject[resultCode=SUCCESS,success=T,id=test.subject.0,name=my name is test.subject.0,sourceId=jdbc]
]
edu.internet2.middleware.grouper.ws.coresoap.WsResultMeta@54751b[
  params=<null>
  resultCode=SUCCESS_ALLOWED
  resultCode2=<null>
  resultMessage=<null>
  success=T
  httpStatusCode=500
]
edu.internet2.middleware.grouper.ws.coresoap.WsAssignGrouperPrivilegesResult@17e805b[
  resultMetadata=WsResultMeta[resultCode=SUCCESS_ALLOWED,success=T,httpStatusCode=500]
  params=<null>
  allowed=<null>
  privilegeName=update
  privilegeType=access
  wsSubject=WsSubject[identifierLookup=id.test.subject.1,resultCode=SUCCESS,success=T,id=test.subject.1,name=my name is test.subject.1,sourceId=jdbc]
]
edu.internet2.middleware.grouper.ws.coresoap.WsResultMeta@1cd721[
  params=<null>
  resultCode=SUCCESS_ALLOWED
  resultCode2=<null>
  resultMessage=<null>
  success=T
  httpStatusCode=500
]
edu.internet2.middleware.grouper.ws.coresoap.WsAssignGrouperPrivilegesResult@a5f647[
  resultMetadata=WsResultMeta[resultCode=SUCCESS_ALLOWED,success=T,httpStatusCode=500]
  params=<null>
  allowed=<null>
  privilegeName=read
  privilegeType=access
  wsSubject=WsSubject[resultCode=SUCCESS,success=T,id=test.subject.0,name=my name is test.subject.0,sourceId=jdbc]
]
edu.internet2.middleware.grouper.ws.coresoap.WsResultMeta@1cbc21d[
  params=<null>
  resultCode=SUCCESS_ALLOWED
  resultCode2=<null>
  resultMessage=<null>
  success=T
  httpStatusCode=500
]
edu.internet2.middleware.grouper.ws.coresoap.WsAssignGrouperPrivilegesResult@9785a7[
  resultMetadata=WsResultMeta[resultCode=SUCCESS_ALLOWED,success=T,httpStatusCode=500]
  params=<null>
  allowed=<null>
  privilegeName=read
  privilegeType=access
  wsSubject=WsSubject[identifierLookup=id.test.subject.1,resultCode=SUCCESS,success=T,id=test.subject.1,name=my name is test.subject.1,sourceId=jdbc]
]
edu.internet2.middleware.grouper.ws.coresoap.WsResultMeta@1c7c568[
  params=<null>
  resultCode=SUCCESS_ALLOWED
  resultCode2=<null>
  resultMessage=<null>
  success=T
  httpStatusCode=500
]
Server version: 2.1.1, result code: SUCCESS, result message: Success for: clientVersion: 2.1.1, wsSubjects: Array size: 2: [0]: WsSubjectLookup[subjectId=test.subject.0,subjectIdentifier=,subjectSourceId=j..., group: WsGroupLookup[pitGroups=[],groupName=aStem:aGroup], stem: null, privilege: ACCESS-Array size: 2: [0]: update
[1]: read
, allowed? true, actAsSubject: WsSubjectLookup[subjectId=GrouperSystem], replaceAllExisting: false
, params: null
