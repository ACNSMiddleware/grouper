Grouper web service sample of service: assignGrouperPrivileges, WsSampleAssignGrouperPrivilegesRest, manually written lite/rest, format: xml, for version: 2.0.0


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouperWs/servicesRest/v2_0_000/grouperPrivileges HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.0
Host: localhost:8092
Content-Length: 771
Content-Type: text/xml; charset=UTF-8

<WsRestAssignGrouperPrivilegesRequest>
  <replaceAllExisting>F</replaceAllExisting>
  <allowed>T</allowed>
  <clientVersion>v2_0_000</clientVersion>
  <wsGroupLookup>
    <groupName>aStem:aGroup</groupName>
  </wsGroupLookup>
  <privilegeType>access</privilegeType>
  <privilegeNames>
    <string>update</string>
    <string>read</string>
  </privilegeNames>
  <wsSubjectLookups>
    <WsSubjectLookup>
      <subjectId>test.subject.0</subjectId>
      <subjectIdentifier></subjectIdentifier>
      <subjectSourceId>jdbc</subjectSourceId>
    </WsSubjectLookup>
    <WsSubjectLookup>
      <subjectId></subjectId>
      <subjectIdentifier>id.test.subject.1</subjectIdentifier>
      <subjectSourceId></subjectSourceId>
    </WsSubjectLookup>
  </wsSubjectLookups>
  <actAsSubjectLookup>
    <subjectId>GrouperSystem</subjectId>
  </actAsSubjectLookup>
</WsRestAssignGrouperPrivilegesRequest>


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Set-Cookie: JSESSIONID=xxxxxxxxxxxxxxxxxxxxxxxx; Path=/grouperWs
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: text/xml;charset=UTF-8
Date: Fri, 12 Aug 2011 22:06:29 GMT
Connection: close

<WsAssignGrouperPrivilegesResults>
  <resultMetadata>
    <resultCode>SUCCESS</resultCode>
    <resultMessage>Success for: clientVersion: 2.0.0, wsSubjects: Array size: 2: [0]: WsSubjectLookup[subjectId=test.subject.0,subjectIdentifier=,subjectSourceId=j..., group: WsGroupLookup[groupName=aStem:aGroup], stem: null, privilege: ACCESS-Array size: 2: [0]: update
[1]: read
, allowed? true, actAsSubject: WsSubjectLookup[subjectId=GrouperSystem], replaceAllExisting: false
, params: null</resultMessage>
    <success>T</success>
  </resultMetadata>
  <responseMetadata>
    <resultWarnings></resultWarnings>
    <millis>233</millis>
    <serverVersion>2.0.0</serverVersion>
  </responseMetadata>
  <wsGroup>
    <extension>aGroup</extension>
    <displayExtension>a group</displayExtension>
    <description>a group description</description>
    <displayName>a stem:a group</displayName>
    <name>aStem:aGroup</name>
    <uuid>f403c5be63b04d5abc10f8f998944f95</uuid>
  </wsGroup>
  <results>
    <WsAssignGrouperPrivilegesResult>
      <resultMetadata>
        <resultCode>SUCCESS_ALLOWED</resultCode>
        <success>T</success>
      </resultMetadata>
      <privilegeName>update</privilegeName>
      <privilegeType>access</privilegeType>
      <wsSubject>
        <resultCode>SUCCESS</resultCode>
        <success>T</success>
        <id>test.subject.0</id>
        <name>my name is test.subject.0</name>
        <sourceId>jdbc</sourceId>
      </wsSubject>
    </WsAssignGrouperPrivilegesResult>
    <WsAssignGrouperPrivilegesResult>
      <resultMetadata>
        <resultCode>SUCCESS_ALLOWED</resultCode>
        <success>T</success>
      </resultMetadata>
      <privilegeName>update</privilegeName>
      <privilegeType>access</privilegeType>
      <wsSubject>
        <identifierLookup>id.test.subject.1</identifierLookup>
        <resultCode>SUCCESS</resultCode>
        <success>T</success>
        <id>test.subject.1</id>
        <name>my name is test.subject.1</name>
        <sourceId>jdbc</sourceId>
      </wsSubject>
    </WsAssignGrouperPrivilegesResult>
    <WsAssignGrouperPrivilegesResult>
      <resultMetadata>
        <resultCode>SUCCESS_ALLOWED</resultCode>
        <success>T</success>
      </resultMetadata>
      <privilegeName>read</privilegeName>
      <privilegeType>access</privilegeType>
      <wsSubject>
        <resultCode>SUCCESS</resultCode>
        <success>T</success>
        <id>test.subject.0</id>
        <name>my name is test.subject.0</name>
        <sourceId>jdbc</sourceId>
      </wsSubject>
    </WsAssignGrouperPrivilegesResult>
    <WsAssignGrouperPrivilegesResult>
      <resultMetadata>
        <resultCode>SUCCESS_ALLOWED</resultCode>
        <success>T</success>
      </resultMetadata>
      <privilegeName>read</privilegeName>
      <privilegeType>access</privilegeType>
      <wsSubject>
        <identifierLookup>id.test.subject.1</identifierLookup>
        <resultCode>SUCCESS</resultCode>
        <success>T</success>
        <id>test.subject.1</id>
        <name>my name is test.subject.1</name>
        <sourceId>jdbc</sourceId>
      </wsSubject>
    </WsAssignGrouperPrivilegesResult>
  </results>
</WsAssignGrouperPrivilegesResults>


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


package edu.internet2.middleware.grouper.ws.samples.rest.grouperPrivileges;

import java.lang.reflect.Array;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

import edu.internet2.middleware.grouper.ws.coresoap.WsAssignGrouperPrivilegesResult;
import edu.internet2.middleware.grouper.ws.coresoap.WsAssignGrouperPrivilegesResults;
import edu.internet2.middleware.grouper.ws.coresoap.WsGroupLookup;
import edu.internet2.middleware.grouper.ws.coresoap.WsSubjectLookup;
import edu.internet2.middleware.grouper.ws.rest.group.WsRestAssignGrouperPrivilegesRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleAssignGrouperPrivilegesRest implements WsSampleRest {

  /**
   * get grouper privileges web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  @SuppressWarnings("deprecation")
  public static void assignGrouperPrivileges(WsSampleRestType wsSampleRestType) {

    try {
      
      HttpClient httpClient = new HttpClient();
      
      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));

      httpClient.getParams().setParameter("http.socket.timeout", new Integer(30000));

      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      PostMethod method = new PostMethod(
          RestClientSettings.URL + "/" + RestClientSettings.VERSION  
            + "/grouperPrivileges");

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER, 
          RestClientSettings.PASS);
      
      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT), defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestAssignGrouperPrivilegesRequest wsRestAssignGrouperPrivilegesRequest 
        = new WsRestAssignGrouperPrivilegesRequest();
      
      wsRestAssignGrouperPrivilegesRequest.setPrivilegeType("access");
      wsRestAssignGrouperPrivilegesRequest.setPrivilegeNames(new String[]{"update", "read"});
      
      // set the act as id
      WsSubjectLookup actAsSubject = WsSubjectLookup.class.newInstance();
      actAsSubject.setSubjectId("GrouperSystem");
      wsRestAssignGrouperPrivilegesRequest.setActAsSubjectLookup(actAsSubject);

      // just add, dont replace
      wsRestAssignGrouperPrivilegesRequest.setReplaceAllExisting("F");

      WsGroupLookup wsGroupLookup = WsGroupLookup.class.newInstance();
      wsGroupLookup.setGroupName("aStem:aGroup");
      wsRestAssignGrouperPrivilegesRequest.setWsGroupLookup(wsGroupLookup);
      
      //version, e.g. v1_3_000
      wsRestAssignGrouperPrivilegesRequest.setClientVersion(RestClientSettings.VERSION);

      // add two subjects to the group
      WsSubjectLookup[] subjectLookups = (WsSubjectLookup[]) Array.newInstance(WsSubjectLookup.class,
              2);
      subjectLookups[0] = WsSubjectLookup.class.newInstance();
      subjectLookups[0].setSubjectId("test.subject.0");
      subjectLookups[0].setSubjectSourceId("jdbc");
      subjectLookups[0].setSubjectIdentifier("");

      subjectLookups[1] = WsSubjectLookup.class.newInstance();
      subjectLookups[1].setSubjectId("");
      subjectLookups[1].setSubjectSourceId("");
      subjectLookups[1].setSubjectIdentifier("id.test.subject.1");

      wsRestAssignGrouperPrivilegesRequest.setWsSubjectLookups(subjectLookups);

      wsRestAssignGrouperPrivilegesRequest.setAllowed("T");

      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(wsRestAssignGrouperPrivilegesRequest);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));

      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      //convert to object (from xhtml, xml, json, etc)
      WsAssignGrouperPrivilegesResults wsAssignGrouperPrivilegesResults = (WsAssignGrouperPrivilegesResults)wsSampleRestType
        .getWsLiteResponseContentType().parseString(response);
      
      String resultMessage = wsAssignGrouperPrivilegesResults.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println(ToStringBuilder.reflectionToString(
          wsAssignGrouperPrivilegesResults, ToStringStyle.MULTI_LINE_STYLE));
      System.out.println(ToStringBuilder.reflectionToString(
          wsAssignGrouperPrivilegesResults.getResultMetadata(),
          ToStringStyle.MULTI_LINE_STYLE));

      if (wsAssignGrouperPrivilegesResults != null) {
        for (WsAssignGrouperPrivilegesResult wsAssignGrouperPrivilegesResult : wsAssignGrouperPrivilegesResults.getResults()) {
            System.out.println(ToStringBuilder.reflectionToString(
                wsAssignGrouperPrivilegesResult, ToStringStyle.MULTI_LINE_STYLE));
            System.out.println(ToStringBuilder.reflectionToString(
                wsAssignGrouperPrivilegesResult.getResultMetadata(),
                    ToStringStyle.MULTI_LINE_STYLE));
        }
      }

      if (!StringUtils.equals("T", 
          wsAssignGrouperPrivilegesResults.getResultMetadata().getSuccess())) {
        throw new RuntimeException("didnt get success! ");
      }

      System.out.println("Server version: " + wsAssignGrouperPrivilegesResults.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );
        
    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  @SuppressWarnings("unchecked")
  public static void main(String[] args) {
    RestClientSettings.resetData();
    assignGrouperPrivileges(WsSampleRestType.xhtml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    assignGrouperPrivileges(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    //dont allow http params
    return !WsSampleRestType.http_xhtml.equals(wsSampleRestType);
  }
}


#########################################
##
## Stdout
##
#########################################


edu.internet2.middleware.grouper.ws.coresoap.WsAssignGrouperPrivilegesResults@74fc26[
  resultMetadata=WsResultMeta[resultCode=SUCCESS,resultMessage=Success for: clientVersion: 2.0.0, wsSubjects: Array size: 2: [0]: WsSubjectLookup[subjectId=test.subject.0,subjectIdentifier=,subjectSourceId=j..., group: WsGroupLookup[groupName=aStem:aGroup], stem: null, privilege: ACCESS-Array size: 2: [0]: update
[1]: read
, allowed? true, actAsSubject: WsSubjectLookup[subjectId=GrouperSystem], replaceAllExisting: false
, params: null,success=T,httpStatusCode=0]
  subjectAttributeNames=<null>
  responseMetadata=WsResponseMeta[resultWarnings=,millis=233,millisStart=0,serverVersion=2.0.0]
  wsGroup=WsGroup[extension=aGroup,displayExtension=a group,description=a group description,displayName=a stem:a group,name=aStem:aGroup,uuid=f403c5be63b04d5abc10f8f998944f95]
  wsStem=<null>
  results={WsAssignGrouperPrivilegesResult[
  resultMetadata=WsResultMeta[resultCode=SUCCESS_ALLOWED,success=T,httpStatusCode=0],privilegeName=update,privilegeType=access,
  wsSubject=WsSubject[resultCode=SUCCESS,success=T,id=test.subject.0,name=my name is test.subject.0,sourceId=jdbc]],WsAssignGrouperPrivilegesResult[
  resultMetadata=WsResultMeta[resultCode=SUCCESS_ALLOWED,success=T,httpStatusCode=0],privilegeName=update,privilegeType=access,
  wsSubject=WsSubject[identifierLookup=id.test.subject.1,resultCode=SUCCESS,success=T,id=test.subject.1,name=my name is test.subject.1,sourceId=jdbc]],WsAssignGrouperPrivilegesResult[
  resultMetadata=WsResultMeta[resultCode=SUCCESS_ALLOWED,success=T,httpStatusCode=0],privilegeName=read,privilegeType=access,
  wsSubject=WsSubject[resultCode=SUCCESS,success=T,id=test.subject.0,name=my name is test.subject.0,sourceId=jdbc]],WsAssignGrouperPrivilegesResult[
  resultMetadata=WsResultMeta[resultCode=SUCCESS_ALLOWED,success=T,httpStatusCode=0],privilegeName=read,privilegeType=access,
  wsSubject=WsSubject[identifierLookup=id.test.subject.1,resultCode=SUCCESS,success=T,id=test.subject.1,name=my name is test.subject.1,sourceId=jdbc]]}
]
edu.internet2.middleware.grouper.ws.coresoap.WsResultMeta@562513[
  params=<null>
  resultCode=SUCCESS
  resultCode2=<null>
  resultMessage=Success for: clientVersion: 2.0.0, wsSubjects: Array size: 2: [0]: WsSubjectLookup[subjectId=test.subject.0,subjectIdentifier=,subjectSourceId=j..., group: WsGroupLookup[groupName=aStem:aGroup], stem: null, privilege: ACCESS-Array size: 2: [0]: update
[1]: read
, allowed? true, actAsSubject: WsSubjectLookup[subjectId=GrouperSystem], replaceAllExisting: false
, params: null
  success=T
  httpStatusCode=0
]
edu.internet2.middleware.grouper.ws.coresoap.WsAssignGrouperPrivilegesResult@185816c[
  resultMetadata=WsResultMeta[resultCode=SUCCESS_ALLOWED,success=T,httpStatusCode=0]
  params=<null>
  allowed=<null>
  privilegeName=update
  privilegeType=access
  wsSubject=WsSubject[resultCode=SUCCESS,success=T,id=test.subject.0,name=my name is test.subject.0,sourceId=jdbc]
]
edu.internet2.middleware.grouper.ws.coresoap.WsResultMeta@1f416c1[
  params=<null>
  resultCode=SUCCESS_ALLOWED
  resultCode2=<null>
  resultMessage=<null>
  success=T
  httpStatusCode=0
]
edu.internet2.middleware.grouper.ws.coresoap.WsAssignGrouperPrivilegesResult@1a2e7e2[
  resultMetadata=WsResultMeta[resultCode=SUCCESS_ALLOWED,success=T,httpStatusCode=0]
  params=<null>
  allowed=<null>
  privilegeName=update
  privilegeType=access
  wsSubject=WsSubject[identifierLookup=id.test.subject.1,resultCode=SUCCESS,success=T,id=test.subject.1,name=my name is test.subject.1,sourceId=jdbc]
]
edu.internet2.middleware.grouper.ws.coresoap.WsResultMeta@25d882[
  params=<null>
  resultCode=SUCCESS_ALLOWED
  resultCode2=<null>
  resultMessage=<null>
  success=T
  httpStatusCode=0
]
edu.internet2.middleware.grouper.ws.coresoap.WsAssignGrouperPrivilegesResult@136af3c[
  resultMetadata=WsResultMeta[resultCode=SUCCESS_ALLOWED,success=T,httpStatusCode=0]
  params=<null>
  allowed=<null>
  privilegeName=read
  privilegeType=access
  wsSubject=WsSubject[resultCode=SUCCESS,success=T,id=test.subject.0,name=my name is test.subject.0,sourceId=jdbc]
]
edu.internet2.middleware.grouper.ws.coresoap.WsResultMeta@12a8dc9[
  params=<null>
  resultCode=SUCCESS_ALLOWED
  resultCode2=<null>
  resultMessage=<null>
  success=T
  httpStatusCode=0
]
edu.internet2.middleware.grouper.ws.coresoap.WsAssignGrouperPrivilegesResult@16879ce[
  resultMetadata=WsResultMeta[resultCode=SUCCESS_ALLOWED,success=T,httpStatusCode=0]
  params=<null>
  allowed=<null>
  privilegeName=read
  privilegeType=access
  wsSubject=WsSubject[identifierLookup=id.test.subject.1,resultCode=SUCCESS,success=T,id=test.subject.1,name=my name is test.subject.1,sourceId=jdbc]
]
edu.internet2.middleware.grouper.ws.coresoap.WsResultMeta@14e2e1[
  params=<null>
  resultCode=SUCCESS_ALLOWED
  resultCode2=<null>
  resultMessage=<null>
  success=T
  httpStatusCode=0
]
Server version: 2.0.0, result code: SUCCESS, result message: Success for: clientVersion: 2.0.0, wsSubjects: Array size: 2: [0]: WsSubjectLookup[subjectId=test.subject.0,subjectIdentifier=,subjectSourceId=j..., group: WsGroupLookup[groupName=aStem:aGroup], stem: null, privilege: ACCESS-Array size: 2: [0]: update
[1]: read
, allowed? true, actAsSubject: WsSubjectLookup[subjectId=GrouperSystem], replaceAllExisting: false
, params: null
