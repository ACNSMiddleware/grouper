<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping
    PUBLIC "-//Hibernate/Hibernate Mapping DTD//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-2.0.dtd">

<!-- $Id: Factor.hbm.xml,v 1.1.2.1 2005-10-14 18:15:04 blair Exp $ -->

<hibernate-mapping package="edu.internet2.middleware.grouper">
  <class name="Factor" table="grouper_factors">

    <meta attribute="class-description">
Group math factors.
@author blair christensen.
    </meta>
    <meta attribute="implement-equals">true</meta>
    <meta attribute="session-method">HibernateUtil.getSession();</meta>

    <!-- id -->
    <id name="id" type="string">
      <meta attribute="use-in-tostring">false</meta>
      <column name="id" sql-type="char(32)"/>
      <generator class="uuid.hex"/>
    </id>
    <!-- id -->
    <!-- discriminator -->
    <discriminator column="klass" type="string"/>
    <!-- discriminator -->
    <!-- version -->
    <version name="version"/>
    <!-- version -->


    <!-- node_a_id -->
    <!-- TODO Map to member? -->
    <property
      name="node_a_id"
      type="string"
      not-null="true"
    >
      <meta attribute="field-description">
Get node a.
      </meta>
      <meta attribute="scope-get">public</meta>
      <meta attribute="use-in-equals">true</meta>
      <meta attribute="use-in-tostring">true</meta>
      <column name="node_a_id" sql-type="char(32)"/>
    </property>
    <!-- node_a_id -->

    <!-- node_b_id -->
    <!-- TODO Map to member? -->
    <property
      name="node_b_id"
      type="string"
      not-null="true"
    >
      <meta attribute="field-description">
Get node b.
      </meta>
      <meta attribute="scope-get">public</meta>
      <meta attribute="use-in-equals">true</meta>
      <meta attribute="use-in-tostring">true</meta>
      <column name="node_b_id" sql-type="char(32)"/>
    </property>
    <!-- node_b_id -->

    <!-- complement -->
    <subclass name="ComplementFactor" discriminator-value="complement"/>
    <!-- complement -->

    <!-- intersection -->
    <subclass name="IntersectionFactor" discriminator-value="intersection"/>
    <!-- intersection -->

    <!-- union -->
    <subclass name="UnionFactor"        discriminator-value="union"/>
    <!-- union -->

  </class>
</hibernate-mapping>

