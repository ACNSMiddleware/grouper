
# Grouper API 

This file contains a synopsis of the Grouper API.  For more details,
see the API javadoc and other documentation.

$Id: API,v 1.86.2.1 2005-10-17 16:47:04 blair Exp $

---

The new...

# eg

TODO When|what performs a save?
TODO How do transactions fit in?
TODO Should the root stem be an actual entry in the db?
TODO Custom mship types

try {
  Subject subj        = SubjectFinder.findById(id);
  Stem    rootStem    = StemFinder.findRootStem(subj);
  Stem    childStem   = new Stem(extension, displayExtn, description);
  try {
    rootStem.addChildStem(childStem);
  }
  catch (StemAddException e) {
    System.err.println("Unable to add stem: " + e.getMessage());
  }
  Group   childGroup  = new Group(extension, displayExtn, description);
  try {
    childStem.addChildGroup(childGroup);
  }
  catch (GroupAddException e) {
    System.err.println("Unable to add group: " + e.getMessage());
  }
  Group   otherGroup  = new Group(extension, displayExtn, description);
  try {
    childStem.addChildGroup(otherGroup);
  }
  catch (GroupAddException e) {
    System.err.println("Unable to add group " + e.getMessage());
  }
  try {
    childGroup.addMember( MemberFinder.findBySubject(subj) );
  }
  catch (MemberAddException e) {
    System.err.println("Unable to add member: " + e.getMessage());
  }
  try {
    otherGroup.addMember( MemberFinder.findByGroup(childGroup) );
  }
  catch (MemberAddException e) {
    System.err.println("Unable to add member: " + e.getMessage());
  }
}
catch (SubjectNotFoundException e) {
  System.err.println("Unable to find subject: " + e.getMessage());
}

# Interfaces

## _Privilege_

# Classes

## Group
* Group               Group(extension, displayExtension, description)
* void                addMember(member)
* void                delete()
* void                deleteMember(member)
* String              getAttribute(attr)
* Map                 getAttributes()
* String              getCreateSource()
* Subject             getCreateSubject()
* Date                getCreateDate()
* String              getDescription()
* String              getDisplayExtension()
* String              getDisplayName()
* Set                 getEffectiveMembers()
* Set                 getImmediateMemberships()
* String              getExtension()
* Set                 getImmediateMembers()
* Set                 getImmediateMemberships()
* Set                 getMembers()
* Set                 getMemberships()
* String              getModifySource()
* Subject             getModifySubject()
* Date                getModifyDate()
* String              getName()
* Stem                getParentStem()
* Set                 getTypes()
* String              getUuid()
* boolean             hasMember()
* void                setAttribute(attr, value)
* void                setDescription(value)
* void                setDisplayExtension(value)
* void                setTypes(values)
* void                unsetAttribute(attr)

* Set                 getAdmins()
* Set                 getPrivileges(member)
* Set                 getOptins()
* Set                 getOptouts()
* Set                 getReaders()
* Set                 getUpdaters()
* Set                 getViewers()
* void                grantPriv(member, privilege)
* boolean             hasAdmin(member)
* boolean             hasOptin(member)
* boolean             hasOptout(member)
* boolean             hasRead(member)
* boolean             hasUpdate(member)
* boolean             hasView(member)
* void                revokePriv(member, privilege) 
* void                revokePriv(privilege)

## GroupFinder
* Group               GroupFinder.findByName(subject, name)
* Group               GroupFinder.findByUuid(subject, uuid)

## Member
* Set                 getEffectiveGroups()
* Set                 getGroups()
* Set                 getImmediateGroups()
* String              getSubjectId()
* Source              getSubjectSource()
* SubjectType         getSubjectType()
* String              getSubjectTypeId()
* String              getUuid()
* Set                 hasAdmin()
* boolean             hasAdmin(group)
* Set                 hasCreate()
* boolean             hasCreate(stem)
* Set                 hasOptin()
* boolean             hasOptin(group)
* Set                 hasOptout()
* boolean             hasOptout(group)
* Set                 hasPrivs(group)
* Set                 hasPrivs(stem)
* Set                 hasRead()
* boolean             hasRead(group)
* Set                 hasStem()
* boolean             hasStem(stem)
* Set                 hasUpdate()
* boolean             hasUpdate(group)
* Set                 hasView()
* boolean             hasView(group)
* boolean             isMember(group)

## MemberFinder
* Member              MemberFinder.findByGroup(group)
* Member              MemberFinder.findBySubject(subject)
* Member              MemberFinder.findByUuid(uuid)

## Stem
* Stem                Stem(extension, displayExtension, description);
* void                addChildGroup(group)
* void                addChildStem(stem)
* Set                 getChildGroups()
* Set                 getChildStems()
* String              getCreateSource()
* Subject             getCreateSubject()
* Date                getCreateTime()
* String              getDescription()
* String              getDisplayExtension()
* String              getDisplayName()
* String              getExtension()
* String              getModifySource()
* Subject             getModifySubject()
* Date                getModifyTime()
* String              getName()
* Stem                getParentStem()
* String              getUuid()
* void                setDescription(value)
* void                setDisplayExtension(value) 

* Set                 getCreators()
* Set                 getPrivileges(member)
* Set                 getStemmers()
* void                grantPriv(member, privilege)
* boolean             hasCreate(member)
* boolean             hasStem(member)
* void                revokePriv(member, privilege) 
* void                revokePriv(privilege)

## StemFinder
* Stem                StemFinder.findByName(subject, name)
* Stem                StemFinder.findByUuid(subject, uuid)
* Stem                StemFinder.findRootStem(subject)

## SubjectFinder
* Subject             SubjectFinder.findById(id)  
* Subject             SubjectFinder.findById(id, type)
* Subject             SubjectFinder.findByIdentifier(id)  
* Subject             SubjectFinder.findByIdentifier(id, type)
* Set                 SubjectFinder.find(query)

----

And the old.

# Classes

## Grouper

* String              static config(parameter)
* boolean             static groupField(groupType, groupField)
* List                static groupFields()
* boolean             static groupType(groupType)
* List                static groupTypeDefs()
* List                static groupTypes()

---

## GrouperAttribute

* String              field()
* String              value()

---

## GrouperField

* String              field()
* boolean             isList()
* String              readPriv()
* String              writePriv()

---

## GrouperList

* List                chain()
* Group               group()
* String              groupField()
* GrouperMember       member()
* Group               via()

---

## GrouperQuery

* boolean             base(namespace)
* void                clear()
* boolean             clear(filter)
* boolean             createdAfter(date)
* boolean             createdBefore(date)
* List                getGroups()
* List                getListValues()
* List                getMembers()
* List                getStems()
* boolean             group(name)
* boolean             group(namespace, name)
* boolean             groupAttr(attribute, value)
* boolean             groupAttr(namespace, attribute, value)
* boolean             groupType(groupType)
* boolean             membershipType(membershipType)
* boolean             modifedAfter(date)
* boolean             modifiedBefore(date)
* boolean             stem(name)
* boolean             stem(namespace, name)
* boolean             stemAttr(name, value)
* boolean             stemAttr(namespace, name, value)

---

## GrouperSchema

* String              type()

---

## GrouperSession

* GrouperAccess       access()
* GrouperMember       getMember()
* GrouperNaming       naming()
* GrouperSession      static start(subject)
* boolean             stop()
* Subject             subject()

---

## GrouperTypeDef

* String              field();
* String              type();

---

## MemberOf

* List                memberOf(GrouperList)

---

## MemberVia

* GrouperList         toList(session)

