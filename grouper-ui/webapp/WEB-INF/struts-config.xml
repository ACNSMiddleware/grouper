<?xml version="1.0" encoding="ISO-8859-1"?>


<!DOCTYPE struts-config PUBLIC 
          "-//Apache Software Foundation//DTD Struts Configuration 1.1//EN"
          "http://jakarta.apache.org/struts/dtds/struts-config_1_1.dtd">

<struts-config>
  <form-beans>
  <form-bean dynamic="true" name="DebugPrefsFormBean"
               type="org.apache.struts.action.DynaActionForm">
      <form-property name="isActive" type="java.lang.Boolean"/>
      <form-property name="i2miDir" type="java.lang.String"/>
      <form-property name="siteDir" type="java.lang.String"/>
      <form-property name="doShowResources" type="java.lang.Boolean"/>
      <form-property name="doShowResourcesInSitu" type="java.lang.Boolean"/>
       <form-property name="doShowTilesHistory" type="java.lang.Boolean"/>
	   <form-property name="doHideStyles" type="java.lang.Boolean"/>
	   <form-property name="doSaveOutput" type="java.lang.Boolean"/>
	   <form-property name="outputDir" type="java.lang.String"/>
             <form-property name="JSPEditor" type="java.lang.String"/>
    </form-bean>  
    <form-bean dynamic="true" name="BrowseFormBean"
               type="org.apache.struts.action.DynaActionForm">
      <form-property name="start" type="java.lang.String"/>
      <form-property name="currentNode" type="java.lang.String"/>
      <form-property name="resetBrowse" type="java.lang.String"/>
      <form-property name="hideQuickLinks" type="java.lang.String"/>
       <form-property name="flat" type="java.lang.String"/>
       <form-property name="pageSize" type="java.lang.String"/>
    </form-bean>  
  
	  <form-bean dynamic="true" name="GroupFormBean"
               type="org.apache.struts.action.DynaActionForm">
      <form-property name="groupName" type="java.lang.String"/>
      <form-property name="groupType" type="java.lang.String"/>
      <form-property name="groupDescription" type="java.lang.String"/>
      <form-property name="groupDisplayName" type="java.lang.String"/>
      <form-property name="groupId" type="java.lang.String"/>
      <form-property name="membershipListScope" type="java.lang.String"/>
      <form-property name="privilege" type="java.lang.String"/>
             <form-property name="pageSize" type="java.lang.String"/>
                    <form-property name="asMemberOf" type="java.lang.String"/>
    </form-bean>
    
    <form-bean dynamic="true" name="StemFormBean"
               type="org.apache.struts.action.DynaActionForm">
      <form-property name="stemName" type="java.lang.String"/>
      <form-property name="stemDescription" type="java.lang.String"/>
      <form-property name="stemDisplayName" type="java.lang.String"/>
      <form-property name="stemId" type="java.lang.String"/>
      <form-property name="privilege" type="java.lang.String"/>
             <form-property name="pageSize" type="java.lang.String"/>
    </form-bean>
    
    <form-bean dynamic="true" name="GroupOrStemMemberFormBean"
               type="org.apache.struts.action.DynaActionForm">
	   <form-property name="subjectId" type="java.lang.String"/>
	   <form-property name="subjectType" type="java.lang.String"/>
	    <form-property name="privilege" type="java.lang.String"/>
       <form-property name="privileges" type="java.lang.String[]"/>
       <form-property name="asMemberOf" type="java.lang.String"/>
              <form-property name="pageSize" type="java.lang.String"/>
              	        <form-property name="groupId" type="java.lang.String"/>
	        <form-property name="stemId" type="java.lang.String"/>
    </form-bean>
    
    <form-bean dynamic="true" name="SearchFormBean"
               type="org.apache.struts.action.DynaActionForm">
      <form-property name="searchTerm" type="java.lang.String"/>
	        <form-property name="searchFrom" type="java.lang.String"/>
	        <form-property name="searchFor" type="java.lang.String"/>
	        <form-property name="start" type="java.lang.String"/>
	        <form-property name="newSearch" type="java.lang.String"/>
	        <form-property name="groupId" type="java.lang.String"/>
	        <form-property name="stemId" type="java.lang.String"/>
	         <form-property name="stems" type="java.lang.String"/>
	          <form-property name="personSource" type="java.lang.String"/>
	         
	            <form-property name="searchInDisplayNameOrExtension" type="java.lang.String"/>
	               <form-property name="searchInNameOrExtension" type="java.lang.String"/>
	                  
	                      <form-property name="pageSize" type="java.lang.String"/>
    </form-bean>

    <form-bean dynamic="true" name="DummyFormBean"
               type="org.apache.struts.action.DynaActionForm">
      <form-property name="searchTerm" type="java.lang.String"/>
	        <form-property name="searchFrom" type="java.lang.String"/>
      <form-property name="groupName" type="java.lang.String"/>
      <form-property name="groupType" type="java.lang.String"/>
      <form-property name="groupDescription" type="java.lang.String"/>
      <form-property name="groupAttrFacultyCode" type="java.lang.String"/>
      <form-property name="groupAttrUnitCode" type="java.lang.String"/>
      <form-property name="stemName" type="java.lang.String"/>
      <form-property name="stemDescription" type="java.lang.String"/>
      <form-property name="password" type="java.lang.String"/>
      <form-property name="username" type="java.lang.String"/>
      <form-property name="groupDisplayName" type="java.lang.String"/>
      <form-property name="stemDisplayName" type="java.lang.String"/>
      <form-property name="stemId" type="java.lang.String"/>
      <form-property name="groupId" type="java.lang.String"/>
	  <form-property name="membershipListScope" type="java.lang.String"/>
      <form-property name="memberId" type="java.lang.String"/>
	   <form-property name="subjectId" type="java.lang.String"/>
	    <form-property name="subjectType" type="java.lang.String"/>
      <form-property name="privileges" type="java.lang.String[]"/>
	  <form-property name="privilege" type="java.lang.String"/>
      <form-property name="groups" type="java.lang.String[]"/>
      <form-property name="people" type="java.lang.String[]"/>
      <form-property name="asMemberOf" type="java.lang.String"/>
       <form-property name="pageSize" type="java.lang.String"/>
    </form-bean>
    
     <form-bean dynamic="true" name="AssignMembersFormBean"
               type="org.apache.struts.action.DynaActionForm">
      <form-property name="stemId" type="java.lang.String"/>
      <form-property name="groupId" type="java.lang.String"/>
      <form-property name="stems" type="java.lang.String"/>
      <form-property name="privileges" type="java.lang.String[]"/>
      <form-property name="members" type="java.lang.String[]"/>

    </form-bean>
  </form-beans>
  <global-forwards>
    <forward name="CreateGroups" path="/populateCreateGroups.do"
             redirect="false"/>
    <forward name="Home" path="/home.do" redirect="false"/>
    <forward name="JoinGroups" path="/populateJoinGroups.do" redirect="false"/>
    <forward name="ManageGroups" path="/populateManageGroups.do"
             redirect="false"/>
             <forward name="AllGroups" path="/populateAllGroups.do"
             redirect="false"/>
    <forward name="MyGroups" path="/populateMyGroups.do" redirect="false"/>
    <forward name="Groups" path="/populateMyGroups.do" redirect="false"/>
	<forward name="Index" path="/populateIndex.do" redirect="true"/>
	<forward name="Login" path="/login.do" redirect="true"/>
  </global-forwards>
  <action-mappings>
  <action  path="/editJSP"
            scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.EditJSPAction"
            unknown="false" validate="false">
      <forward name="Editor" path="EditorDef" redirect="false"/>
    </action>  
  
  <action  path="/help"
            scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateHelpAction"
            unknown="false" validate="false">
      <forward name="Help" path="HelpDef" redirect="false"/>
    </action>
    
        <action path="/populateDebugPrefs"  scope="request" name="DebugPrefsFormBean"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateDebugPrefsAction"
            unknown="false" validate="false">
      <forward name="DebugPrefs" path="DebugPrefsDef" redirect="false"/>
    </action>
    
        <action path="/populateChain"  name="GroupFormBean" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateChainAction"
            unknown="false" validate="false">
      <forward name="Chain" path="ChainDef" redirect="false"/>
    </action>
    
            <action path="/saveDebugPrefs"  scope="request" name="DebugPrefsFormBean"
            type="edu.internet2.middleware.grouper.ui.actions.SaveDebugPrefsAction"
            unknown="false" validate="false">
      <forward name="DebugPrefs" path="DebugPrefsDef" redirect="false"/>
    </action>
    <!--
      Keeps track of the current node. All browseStemsXXX.do actions
      call same Java class, but different current nodes possible for each main tab.
    -->
    <action name="BrowseFormBean" parameter="MyGroups" path="/browseStems"
            scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.BrowseStemsAction"
            unknown="false" validate="false">
      <forward name="MyGroups" path="MyGroupsDef" redirect="false"/>
    </action>
    <!-- see browseStems.do                                                  -->
    <action parameter="CreateGroups" name="BrowseFormBean" path="/browseStemsCreate" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.BrowseStemsAction"
            unknown="false" validate="false">
      <forward name="CreateGroups" path="CreateGroupsDef" redirect="false"/>
    </action>
      <!-- see browseStems.do                                                  -->
    <action parameter="AllGroups" name="BrowseFormBean" path="/browseStemsAll" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.BrowseStemsAction"
            unknown="false" validate="false">
      <forward name="AllGroups" path="AllGroupsDef" redirect="false"/>
    </action>
    <!--
      See browseStems.do. If the node is a group a different forward is called
      to expand the group to list immediate members.<p/>
                  
      <STRONG>API:</STRONG>calls GrouperGroup.loadByName<br/>
    -->
    <action name="BrowseFormBean" parameter="FindNewMembers"
            path="/browseStemsFind" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.BrowseStemsAction"
            unknown="false" validate="false">
      <forward name="FindNewMembers" path="/populateFindNewMembers.do"
               redirect="false"/>
      <forward name="FindNewMembersForStems"
               path="/populateFindNewMembersForStems.do" redirect="false"/>
    </action>
    
    <!-- See browseStems.do                                                  -->
    <action parameter="JoinGroups" path="/browseStemsJoin" name="BrowseFormBean" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.BrowseStemsAction"
            unknown="false" validate="false">
      <forward name="JoinGroups" path="JoinGroupsDef" redirect="false"/>
    </action>
    <!-- See browseStems.do                                                  -->
    <action name="BrowseFormBean" parameter="ManageGroups"
            path="/browseStemsManage" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.BrowseStemsAction"
            unknown="false" validate="false">
      <forward name="ManageGroups" path="ManageGroupsDef" redirect="false"/>
    </action>
    <!--
      Responsible for displaying login form. We need pluggable login 
      e.g. CAS, database, LDAP etc so the login page may not be part 
      of the application.<p/>
                  
      <STRONG>DECISION:</STRONG> what should we do for default authentication?
    -->
    <action path="/callLogin" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.CallLoginAction"
            unknown="false" validate="false">
      <!--
        Default login that comes with Grouper UI - should we provide database table
        with utility to manage encrypted passwords?
      -->
      <forward name="callLogin" path="/login.do" redirect="true"/>
    </action>
    <!--
      Removes (disables?) group from repository<p/>
                  
      <STRONG>QUESTION:</STRONG> Some groups will be created by loaders and should 
      not be deleted through the user interface. However, other admin privileges are still desirable
      to allow management of privileges. Do we need a distinct DELETE privilege?<p/>
                  
      <STRONG>API:</STRONG> GrouperGroup.delete
    -->
    <action name="GroupFormBean" path="/deleteGroup" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.DeleteGroupAction"
            unknown="false" validate="false">
      <forward name="CreateGroups" path="/populateCreateGroups.do"
               redirect="false"/>
      <!-- Return to manage screen                                           -->
      <forward name="ManageGroups" path="/populateManageGroups.do"
               redirect="false"/>
    </action>
    <!--
      Removes (disables?) stem from repository. <p/>
                  
      <STRONG>QUESTIONS:</STRONG> Can stems be deleted? Some stems will be created by loaders and ought not be deleted 
      through the user interface. New stems can be added (with STEM
      privilege). Do we need to distinguish ability to create stems vs delete stems?<p/>
                  
      <STRONG>API:</STRONG>GrouperGroup.delete?
    -->
    <action path="/deleteStem" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.DeleteStemAction"
            unknown="false" validate="false">
      <forward name="CreateGroups" path="/populateCreateGroups.do"
               redirect="false"/>
      <forward name="ManageGroups" path="/populateManageGroups.do"
               redirect="false"/>
    </action>
    <!--
      Currently assigns membership, and Grants privileges (for both groups and stems). 
      Forwards depending on submit button pressed on input form. <p/>
                  
      <STRONG>TODO:</STRONG> revoke privileges if they existed and are not now assigned.<p/>
                  
      <STRONG>API:</STRONG> Grouper.access();<br/>
      GrouperGroup.loadByName;<br/>
      GrouperGroup.listAddVal;<br/>
      GrouperSubject.load<br/>
      GrouperMember.load<br/>
      access.grant<br/>
    -->
    <action name="AssignMembersFormBean" path="/doAssignNewMembers" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.DoAssignNewMembersAction"
            unknown="false" validate="false">
      <forward name="FindNewMembers" path="/populateFindNewMembers.do"
               redirect="false"/>
      <forward name="GroupMembers" path="/populateGroupMembers.do"
               redirect="false"/>
                     <forward name="GroupPrivilegees" path="/populateGroupPriviligees.do"
               redirect="false"/>
      <forward name="GroupSummary" path="/populateGroupSummary.do"
               redirect="false"/>
      <forward name="StemPrivilegees" path="/populateStemPriviligees.do"
               redirect="false"/>
    </action>
    <!--
      An institution can specify a default 'tab' to be the home page. Can
      perhaps offer user preference later.<p/>
                  
      <STRONG>TODO:</STRONG> make this a configuration option
    -->
    <action path="/home" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.HomeAction"
            unknown="false" validate="false">
                  <forward name="home" path="/populateMyGroups.do"
               redirect="false"/>
    </action>
    <!--
      Starts a Grouper session. Currently delegates to a JSP to set up 
      LocalizationContext for JSTL<p/>
                  
      <STRONG>API:</STRONG> GrouperSubject.load;<br/>
      GrouperSession.start;<p/>
                  
      <STRONG>TODO:</STRONG> when Http session ends need listener to stop the 
      Grouper session
    -->
    <action path="/initSession" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.InitSessionAction"
            unknown="false" validate="false">
      <forward name="InitSession" path="/WEB-INF/jsp/InitSession.jsp"
               redirect="false"/>
    </action>
    <!--
      Assuming optin privilege and not already a member, join group<p/>
                  
      <STRONG>QUESTION:</STRONG> is there a simple API call e.g. 
      'boolean GrouperGroup.isMember(GrouperSession,Subject / GrouperMember)? 
      I can get group memberships and check if current group is in list
      but should be easier.<p/>
                  
      <STRONG>API:</STRONG> GrouperGroup.listAddVal
    -->
    <action path="/joinGroup" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.JoinGroupAction"
            unknown="false" validate="false">
      <!-- Return to ManageGroups                                            -->
      <forward name="JoinGroups" path="/populateGroupSummary.do"
               redirect="false"/>
    </action>
    <!--
      Assuming optout privilege and already a member remove subject
      from member attribute<p/>
                  
      <STRONG>QUESTION:</STRONG> see joinGroup.do for isMember question<p/>
                  
      <STRONG>API:</STRONG> GrouperGroup.listDelVal;
    -->
    <action path="/leaveGroup" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.LeaveGroupAction"
            unknown="false" validate="false">
      <!-- Return to ManageGroups                                            -->
      <forward name="JoinGroups" path="/populateGroupSummary.do"
               redirect="false"/>
    </action>
    <!--
      Takes user credentials, delegates verification to configured 
      pluggable authentication module and forwards to initSession.do<p/>
                  
      <STRONG>TODO:</STRONG> Make pluggable authentication configurable
    -->
    <action  path="/login" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.LoginAction"
            unknown="false" validate="false">
      <forward name="default" path="/home.do" redirect="true"/>
	  <forward name="stop" path="emptyDef" redirect="false"/>
    </action>
    <!--
      Release any resources. Kill HTTP session - which should stop 
      GrouperSession.
    -->
    <action path="/logout" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.LogoutAction"
            unknown="false" validate="false">
      
    </action>
    <!--
      Process selection / search results - load subjects. Make current
      group / stem available. Check session subject's privileges<p/>
                  
      <STRONG>API:</STRONG>GrouperGroup.loadByName;<br/>
      GrouperSubject.load;<br/>
      grouperAccess.has<br/>
    -->
    <action  name="SearchFormBean" path="/populateAssignNewMembers"
            scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateAssignNewMembersAction"
            unknown="false" validate="false">
      <forward name="AssignNewMembers" path="AssignNewMembersDef"
               redirect="false"/>
    </action>
    <!-- Does any setup needed prior to creating new group                   -->
    <action path="/populateCreateGroup" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateCreateGroupAction"
            unknown="false" validate="false">
      <forward name="CreateGroup" path="EditGroupDef" redirect="false"/>
    </action>
    <!-- Does any setup needed for CreateGroups                              -->
    <action name="BrowseFormBean" path="/populateCreateGroups" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateCreateGroupsAction"
            unknown="false" validate="false">
      <forward name="CreateGroups" path="CreateGroupsDef" redirect="false"/>
    </action>
    <!-- Do any setup for stem creation                                      -->
    <action name="StemFormBean" path="/populateCreateStem" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateCreateStemAction"
            unknown="false" validate="false">
      <forward name="CreateStem" path="EditStemDef" redirect="false"/>
    </action>
    <!--
      Responsible for retrieving (and locking?) group to make available 
      for editing.<p/>
                  
      <STRONG>API:</STRONG>GrouperGroup.loadByName;<br/>
      GrouperGroup.attribute;<br/>
    -->
    <action name="GroupFormBean" path="/populateEditGroup" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateEditGroupAction"
            unknown="false" validate="false">
      <forward name="EditGroup" path="EditGroupDef" redirect="false"/>
    </action>
    <!--
      Responsible for retrieving (and locking?) group attributes to 
      make available for editing<p/>
                  
      <STRONG>TODO:</STRONG> everything
    -->
    <action name="DummyFormBean" path="/populateEditGroupAttributes"
            scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateEditGroupAttributesAction"
            unknown="false" validate="false">
      <forward name="EditGroupAttributes" path="EditGroupAttributesDef"
               redirect="false"/>
    </action>
    <!--
      Responsible for retrieving (and locking?) stem to make available 
      for editing.<p/>
                  
      <STRONG>API:</STRONG> GrouperGroup.loadByName;<br/>
      GrouperGroup.attribute;<br/>
    -->
    <action name="StemFormBean" path="/populateEditStem" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateEditStemAction"
            unknown="false" validate="false">
      <forward name="EditStem" path="EditStemDef" redirect="false"/>
    </action>
    <!--
      Does any setup required for browsing / searching for 
      new members. Retrieves current group / stem. 
      Retrieves displayExtensions for any parent stems<p/>
                  
      <STRONG>API: </STRONG>GrouperGroup.loadByName<br/>
      GrouperGroup.attributes<br/>
    -->
    <action name="GroupFormBean" path="/populateFindNewMembers" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateFindNewMembersAction"
            unknown="false" validate="false">
      <forward name="FindNewMembers" path="FindNewMembersDef" redirect="false"/>
    </action>
    
        <action  path="/cancelFindNewMembers" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.CancelFindNewMembersAction"
            unknown="false" validate="false">
      <forward name="GroupSummary" path="/populateGroupSummary.do" redirect="false"/>
      <forward name="BrowseStems" path="/browseStems.do" redirect="false"/>
      <forward name="BrowseStemsCreate" path="/browseStemsCreate.do" redirect="false"/>
      <forward name="BrowseStemsManage" path="/browseStemsManage.do" redirect="false"/>
      <forward name="BrowseStemsJoin" path="/browseStemsJoin.do" redirect="false"/>
      <forward name="BrowseStemsAll" path="/browseStemsAll.do" redirect="false"/>
    </action>
    <!--
      see populateFindNewMembers.do. Also sets flag to indicate context
      is stem
    -->
    <action name="StemFormBean" parameter="stems"
            path="/populateFindNewMembersForStems" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateFindNewMembersAction"
            unknown="false" validate="false">
      <forward name="FindNewMembers" path="FindNewMembersDef" redirect="false"/>
    </action>
    <!--
      Retrieves details (and locks?) for individual member. 
      Currently does not distinguish  membership from privileges<p/>
                  
      <STRONG>TODO:</STRONG> differentiate membership from other privileges<p/>
            
      <STRONG>QUESTION:</STRONG> In the context of membership should this really be 
       a Subject information page where various institution specific attributes can be found,
      possibly including ways to check other memberships of subject, and ability to revoke membership?<p/>
            
      <STRONG>API:</STRONG> Subject.load<br/>
      Grouper.access();<br/>
      GrouperAccess.has;<br/>
    -->
    <action name="GroupOrStemMemberFormBean" path="/populateGroupMember" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateGroupMemberAction"
            unknown="false" validate="false">
      <forward name="GroupMember" path="GroupMemberDef" redirect="false"/>
      <forward name="StemMember" path="StemMemberDef" redirect="false"/>
    </action>
    
    <action name="GroupFormBean" path="/populateGroupPriviligees" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateGroupPriviligeesAction"
            unknown="false" validate="false">
      <forward name="GroupPriviligees" path="GroupPriviligeesDef" redirect="false"/>
    </action>
	<action name="StemFormBean" path="/populateStemPriviligees" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateStemPriviligeesAction"
            unknown="false" validate="false">
      <forward name="StemPriviligees" path="StemPriviligeesDef" redirect="false"/>
    </action>
    <!--
      Lists immediate membership. In demo also lists privilegees and
      does not distinguish from members. <p/>
                  
      <STRONG>TODO:</STRONG> differentiate membership from privileges<p/>
                
      <STRONG>QUESTION:</STRONG> Custom group types may have additional List attributes, so presumably
      we should iterate over the set of List attributes (minus optins, optouts, admins, updaters, viewers and readers) and
      allow the user to choose which attribute they list - members being the default?<p/>
            
      <STRONG>QUESTION:</STRONG> When we make a group B a member of group A, group Bs members become effective members of group A.
      Since we can have multiple attributes which are lists of people - members being the default - will it be possible to say which attribute
      is used to derive membership? memberKey could be groupKey.list_name and groupKey would effectively represent groupKey.members or or groupKey.default_list_name<p/>
             
      <STRONG>QUESTION:</STRONG> Do we want to have some well known Subject attributes that others
      can map to? This would allow us to write generic templates for displaying template info, otherwise, institutions
      must always write their own as only they will know which subject attributes are supported.<p/>
                  
      <STRONG>API:</STRONG>GrouperGroup.load;<br/>
      GrouperGroup.listImmVals<br/>
      GrouperSubject.load<br/>
    -->
    <action name="GroupFormBean" path="/populateGroupMembers" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateGroupMembersAction"
            unknown="false" validate="false">
      <!-- Displays current group members                                    -->
      <forward name="GroupMembers" path="GroupMembersDef" redirect="false"/>
    </action>
    <!--
      Retrieves and makes available a GrouperGroup object. Also GrouperSession subject
      privileges for group are made available. Parent stems made available.<p/>
                  
      <STRONG>QUESTION:</STRONG> GrouperAccess allows me to determine a role e.g. admin
      however, in the Grouper_field table each field defines which role has read / write privilege. 
      Shouldn't I be asking 'does subject S have read / write privilege for field F
      to make decisions? Otherwise I am building in assumptions about 
      the roles into the UI making it a lot of work to change how these roles
      work in the future, or to add new roles. <p/>
                  
      <STRONG>API:</STRONG> GrouperGroup.loadByName<br/>
      GrouperGroup.attributes<br/>
      Grouper.access();<br/>
      GrouperAccess.has;<br/>
    -->
    <action name="GroupFormBean" path="/populateGroupSummary" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateGroupSummaryAction"
            unknown="false" validate="false">
      <forward name="GroupSummary" path="GroupSummaryDef" redirect="false"/>
    </action>
    <!-- The GroupSummary page duplicated for ease of diagramming!           -->
    <action path="/populateGroupSummaryPlaceHolder" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateGroupSummaryAction"
            unknown="false" validate="false">
      <forward name="GroupSummary" path="GroupSummaryPlaceHolderDef"
               redirect="false"/>
    </action>
	
	 <!--
      Error page if authentication fails
    -->
    <action path="/401" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.Populate401Action"
            unknown="false" validate="false">                                            
      <forward name="Index" path="IndexDef" redirect="false"/>
	  <forward name="Logout" path="/logout.do" redirect="false"/>
	  <forward name="Login" path="/login.do" redirect="false"/>
	  <forward name="stop" path="401Def" redirect="false"/>
    </action>
	
	 <!--
      Error page if exception
    -->
    <action path="/error" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateErrorAction"
            unknown="false" validate="false">                                            
      <forward name="error" path="ErrorDef" redirect="false"/>
	
    </action>
	
	
    <!--
      If there is a current and authenticated session goto Home, 
      otherwise, display the splash page, offering the option to login.
    -->
    <action path="/populateIndex" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateIndexAction"
            unknown="false" validate="false">
      <!-- User already logged in                                            -->
      <forward name="Home" path="/home.do" redirect="false"/>
      <!-- User not logged in                                                -->
      <forward name="Index" path="IndexDef" redirect="false"/>
    </action>
    <!-- Do any setup required before joining groups                         -->
    <action name="BrowseFormBean" path="/populateJoinGroups" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateJoinGroupsAction"
            unknown="false" validate="false">
      <forward name="JoinGroups" path="JoinGroupsDef" redirect="false"/>
    </action>
    <!-- Does any setup required to Manage Groups                            -->
    <action name="BrowseFormBean" path="/populateManageGroups" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateManageGroupsAction"
            unknown="false" validate="false">
      <forward name="ManageGroups" path="ManageGroupsDef" redirect="false"/>
    </action>
    
        <!-- Does any necessary setup for initial display of AllGroups.           -->
    <action name="BrowseFormBean" path="/populateAllGroups" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateAllGroupsAction"
            unknown="false" validate="false">
      <forward name="AllGroups" path="AllGroupsDef" redirect="false"/>
    </action>
    <!-- Does any necessary setup for initial display of MyGroups.           -->
    <action name="GroupOrStemMemberFormBean" path="/populateMyGroups" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateMyGroupsAction"
            unknown="false" validate="false">
      <forward name="MyGroups" path="MyGroupsDef" redirect="false"/>
    </action>
    <!-- Currently same as populateGroupMember                               -->
    <action name="GroupOrStemMemberFormBean" parameter="stems" path="/populateStemMember"
            scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateGroupMemberAction"
            unknown="false" validate="false">
      <forward name="StemMember" path="StemMemberDef" redirect="false"/>
    </action>
    <!-- Currently same as populateGroupMembers                              -->
    <action name="StemFormBean" parameter="stems" path="/populateStemMembers"
            scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PopulateGroupMembersAction"
            unknown="false" validate="false">
      <forward name="StemMembers" path="StemMembersDef" redirect="false"/>
    </action>
    <!--
      This is the work horse for browseStems. It makes available  a
      breadcrumb trail for where you have been, and makes available
      the contents of the current stem (or group if browsing for members), 
      Makes available the GrouperSession subject privileges for the
      current stem / group.<p/>
                  
      <STRONG>TODO:</STRONG> in the demo you only see stems which are relevant - lead 
      to stems / groups where you have privileges. This must be implemented
      for the Grouper API<p/>
      MyGroups=GroupMember.listVals<p/>
                  
      <i>QUESTION:</i> Should we let user select immediate / effective
      to get different view? What is difference between listVals and listEffVals?<p/>
                  
      CreateGroups=GrouperNaming.has(GrouperSession s, java.lang.String priv)<p>
                  
      <i>QUESTION:</i> Any one with CREATE or STEM privileges can create a group. Do I have to
      retrieve and merge lists? Could the API support String[] privs and return groups matching any listed privilege<p/>
                  
      ManageGroups=GrouperAccess.has(GrouperSession s, java.lang.String priv)<p/>
                  
      <i>QUESTION:</i> Any one with Admin or UPDATE privileges can manage spects of a group. Do I have to
      retrieve and merge lists? Could the API support String[] privs and return groups matching any listed privilege<p/>
                  
      JoinGroups=GrouperAccess.has(GrouperSession s, Grouper.PRIV_OPTIN )<p/>
                  
      <STRONG>QUESTION:</STRONG> What should I do for GrouperBackend.stems - 
      which is protected?<p/>
                  
      <STRONG>API:</STRONG> GrouperGroup.loadByName;<br/>
      GrouperGroup.listImmVals;<br/>
      Grouper.access();<br/>
      GrouperAccess.has;<br/>
      GrouperSubject.load;<br/>
      UoBSubjectImpl.attributes<br/>
      GrouperBackend.stems<br/>
    -->
    <action path="/prepareStems" scope="request" name="BrowseFormBean"
            type="edu.internet2.middleware.grouper.ui.actions.PrepareStemsAction"
            unknown="false" validate="false"/>
            
      <action path="/prepareGroupOrStemSearch" scope="request" name="SearchFormBean"
            type="edu.internet2.middleware.grouper.ui.actions.PrepareGroupSearchFormAction"
            unknown="false" validate="false"/>
			
			<action path="/getDynamicTileName" scope="request" name="DummyFormBean"
            type="edu.internet2.middleware.grouper.ui.actions.GetDynamicTileAction"
            unknown="false" validate="false"/>
			
			<action path="/propogateTilesAttributes" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.PropogateTilesAttributesAction"
            unknown="false" validate="false"/>
    <!--
      Saves modified data (and unlocks group?) or creates new group.
      Depending on submit button clicked by user it forwards to the 
      group summary page or the edit group atributes page.<p/>
                  
      <STRONG>TODO:</STRONG> ensure proper special character checking<p/>
                  
      <STRONG>API:</STRONG> GrouperGroup.loadByName;<br/>
      GrouperGroup.create;<br/>
      GrouperGroup.attribute;<br/>
    -->
    <action name="GroupFormBean" path="/saveGroup" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.SaveGroupAction"
            unknown="false" validate="false">
      <forward name="CreateAgain" path="/populateCreateGroup.do"
               redirect="false"/>
      <forward name="EditAgain" path="/populateEditGroup.do" redirect="false"/>
      <forward name="EditGroupAttributes" path="/populateEditGroupAttributes.do"
               redirect="false"/>
      <forward name="GroupSummary" path="/populateGroupSummary.do"
               redirect="false"/>
	  <forward name="GroupMembers" path="/populateGroupMembers.do"
               redirect="false"/>
	  <forward name="FindMembers" path="/populateFindNewMembers.do"
               redirect="false"/>
    </action>
    <!--
      Store changes in database (and unlock). Forwards appropriately
      depending on submit button clicked by user<p/>
                  
      <STRONG>TODO:</STRONG> everything
    -->
    <action name="DummyFormBean" path="/saveGroupAttributes" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.SaveGroupAttributesAction"
            unknown="false" validate="false">
      <forward name="FindNewMembers" path="/populateFindNewMembers.do"
               redirect="false"/>
      <forward name="GroupMembers" path="/populateGroupMembers.do"
               redirect="false"/>
      <forward name="GroupSummary" path="/populateGroupSummary.do"
               redirect="false"/>
    </action>
    <!--
      Saves any changes (and unlocks?). If removed from all attributes 
      then this member is no longer a member and will not appear on the 
      GroupMembers page<p/>
                  
      <STRONG>TODO:</STRONG> differentiate between membership and privileges;
                  
      <STRONG>API:</STRONG>GrouperGroup.addListVal;<br/>
      GrouperGroup.delListVal;<br/>
      Grouper.access();<br/>
      GrouperAccess.has;<br/>
      GrouperAccess.grant;<br/>
      GrouperAccess.revoke;<br/>
    -->
    <action name="GroupOrStemMemberFormBean" path="/saveGroupMember" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.SaveGroupMemberAction"
            unknown="false" validate="false">
      <forward name="GroupMembers" path="/populateGroupMembers.do"
               redirect="false"/>
       <forward name="GroupPrivilegees" path="/populateGroupPriviligees.do"
               redirect="false"/>
        <forward name="GroupMember" path="/populateGroupMember.do"
               redirect="false"/>
    </action>
    
    <action name="GroupOrStemMemberFormBean" path="/saveStemMember" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.SaveStemMemberAction"
            unknown="false" validate="false">
      <forward name="StemPriviligees" path="/populateStemPriviligees.do"
               redirect="false"/>
    </action>
    <!--
      Stores new / updated stem. Forwards as appropriate depending on 
      which submit button the user clicks<p/>
                  
      <STRONG>API:</STRONG> GrouperGroup.loadByName;<br/>
      GrouperGroup.create;<br/>
      GrouperGroup.attribute;<br/>
    -->
    <action name="StemFormBean" path="/saveStem" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.SaveStemAction"
            unknown="false" validate="false">
      <forward name="CreateAgain" path="/populateCreateStem.do" redirect="false"/>
      <!-- Refresh tree / search results - user can create another stem or group -->
      <forward name="CreateGroups" path="/populateCreateGroups.do"
               redirect="false"/>
      <forward name="EditAgain" path="/populateEditStem.do" redirect="false"/>
      <!-- Assign others with STEM / CREATE privilege for this stem          -->
      <forward name="FindNewMembers" path="/populateFindNewMembersForStems.do"
               redirect="false"/>
      <forward name="StemMembers" path="/populateStemMembers.do"
               redirect="false"/>
    </action>
    <!--
      Accepts search terms (and paging info?) to retrieve groups. <p/>
            
      <STRONG>TODO:</STRONG> only return groups subject is a member of<p/>
              
      <STRONG>QUESTION:</STRONG> Presumably we use the Subject interface
      to do a search, but we then need to process the results and only include
      relevant groups. How should we do this?<br/>
      <ul><li>Pass list of groups I am a member of to Subject interface and get it to 
      restrict the resultset?</li>
      <li>Retrieve results then iterate over all and only retain ones subject is a member of? If so,
      should this be part of Grouper API, or is client code responsible?
      </li>
      <li>Assuming memberships are small (&lt;500) we could 'search' in Java but 
      it would be hard to match the search capability of the Subject interface.</li>
      </ul>
                  
      <STRONG>TODO:</STRONG> everything
            
      <STRONG>API:</STRONG>To be determined
    -->
    <action name="SearchFormBean" path="/searchGroups" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.SearchGroupsAction"
            unknown="false" validate="false">
      <forward name="Results" path="SearchGroupResultsDef" redirect="false"/>
    </action>
    <!--
      See searchGroups.do.<p/>
                  
      <STRONG>TODO:</STRONG>only retrieve groups subject can join<p/>
    -->
    <action name="SearchFormBean" path="/searchGroupsJoin" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.SearchGroupsAction"
            unknown="false" validate="false">
      <forward name="Results" path="SearchGroupResultsDef" redirect="false"/>
    </action>
    
    <action name="SearchFormBean" path="/searchGroupsAll" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.SearchGroupsAction"
            unknown="false" validate="false">
      <forward name="Results" path="SearchGroupResultsDef" redirect="false"/>
    </action>
    <!--
      see searchGroups.do<p/>
                  
      <STRONG>TODO:</STRONG> only retrieve groups subject has update / admin privilege to
    -->
    <action name="SearchFormBean" path="/searchGroupsManage" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.SearchGroupsAction"
            unknown="false" validate="false">
      <forward name="Results" path="SearchGroupResultsDef" redirect="false"/>
    </action>
    <!--
      Takes search terms, including qualifying stem if any, and paging 
      information and carries out search making results available.<p/>
               
      <STRONG>TODO:</STRONG> Determine search interface<p/>
             
      <STRONG>QUESTION: </STRONG>Can only search one subject type at a time? What is 
      appropriate API?<p/>
            
      <STRONG>QUESTION: </STRONG>How should we restrict a search to 'members' (or other attribute) of a particular group / set of groups?<p/>
                  
      <STRONG>API:</STRONG> uk.ac.bris.is.intenet2.middleware.subject.SubjectTypeAdapterPersonImpl personAdapter = new uk.ac.bris.is.intenet2.middleware.subject.SubjectTypeAdapterPersonImpl();<br/>
      Subject[] results=personAdapter.searchByIdentifier(grouperSession.subject().getSubjectType(),query);
    -->
    <action name="SearchFormBean" path="/searchNewMembers" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.SearchNewMembersAction"
            unknown="false" validate="false">
      <forward name="AssignNewMembers" path="/populateAssignNewMembers.do"
               redirect="false"/>
    </action>
    <!--
      see searchGroups.do<p/>
      Retrieves stems matching search criteria - restricted to those 
      where user has CREATE / STEM  privilege<p/>
                  
      <STRONG>TODO:</STRONG> do restriction
    -->
    <action name="SearchFormBean" path="/searchStems" scope="request"
            type="edu.internet2.middleware.grouper.ui.actions.SearchStemsAction"
            unknown="false" validate="false">
      <forward name="Results" path="SearchStemResultsDef" redirect="false"/>
    </action>
  </action-mappings>
  <plug-in className="org.apache.struts.tiles.TilesPlugin">
    <set-property property="moduleAware" value="true"/>
    <set-property property="definitions-debug" value="0"/>
    <set-property property="definitions-parser-details" value="0"/>
    <set-property property="definitions-parser-validate" value="false"/>
    <set-property property="definitions-config" value="/WEB-INF/tiles-def.xml"/>
  </plug-in>
</struts-config>