
<project name="morphString" default="build" basedir=".">

  <target name="build" description="full build" depends="init,clean,compile,jar">
  </target>

  <target name="init">
    <tstamp />

    <property name="cvs.branch" value="HEAD" />
    
    <property name="main.sourceDir" value="src/java" />
    <property name="main.sourceExtDir" value="src/ext" />

    <property name="main.confDir" value="conf" />

    <property name="main.lib" value="lib" />

    <property name="main.binDir" value="dist/bin" />

    <property name="main.resourcesDir" value="conf" />

    <property name="main.outputDir" value="dist" />

    <mkdir dir="${main.binDir}" />

    <mkdir dir="${main.outputDir}" />

    <property name="main.appName" value="grouperClient" />
    <property name="main.jarFile" value="${main.outputDir}/${main.appName}.jar" />

    <path id="main.extClasspath">
      <fileset dir="${main.lib}">
        <include name="**/*.jar" />
      </fileset>
    </path>

    <condition property="main.os" value="windows">
      <os family="windows" />
    </condition>
    <condition property="main.os" value="unix">
      <os family="unix" />
    </condition>

    <pathconvert targetos="${main.os}" property="main.theExtClasspath" refid="main.extClasspath" />
  </target>

  <target name="clean">
    <mkdir dir="${main.binDir}" />
    <delete dir="${main.binDir}" />
    <mkdir dir="${main.binDir}" />

  </target> 
  
  <target name="compile">
    <javac  
      srcdir="${main.sourceExtDir}" destdir="${main.binDir}" debug="true" classpath="${main.theExtClasspath}" />
    <javac  
      srcdir="${main.sourceDir}" destdir="${main.binDir}" debug="true" />
  </target>

  <target name="jar">
    <copy todir="${main.binDir}">
      <fileset dir="${main.sourceDir}">
        <include name="**/*.java"/>      <!-- source -->
        <include name="**/*.txt"/>      <!-- txt -->
        <include name="**/*.html"/>      <!-- html -->
      </fileset>
      <fileset dir="${main.sourceExtDir}">
        <include name="**/*.java"/>      <!-- source -->
      </fileset>
      <fileset dir="${main.confDir}">
        <include name="*.example.properties"/>      <!-- sample config -->
        <include name="grouper.client.usage*.txt"/>      <!-- sample config -->
      </fileset>
      <fileset dir="${basedir}">
        <include name="README.txt"/>      <!-- sample config -->
      </fileset>
    </copy>
    <jar jarfile="${main.jarFile}" duplicate="fail" manifest="misc/MANIFEST.MF">
      <fileset dir="${main.binDir}" />
    </jar>
  </target>

  <target name="javadoc" description="generate public api docs to doc/api" depends="init">
    <!-- Let's be sure we clear out old cruft first... -->
    <mkdir dir="doc/api" />
    <delete dir="doc/api" />
    <mkdir dir="doc/api" />
    <!-- header="&lt;script&gt;alert('whatever');&lt;/script&gt;" -->
    <javadoc destdir="doc/api" access="public"
      additionalparam="-notimestamp" >
      <packageset dir="src/java" defaultexcludes="yes">
        <include name="edu/internet2/middleware/grouperClient/**" />

      </packageset>

      <link href="http://struts.apache.org/1.2.x/api/" />
      <link href="http://java.sun.com/j2ee/sdk_1.3/techdocs/api" />
      <link href="http://java.sun.com/j2se/1.4.2/docs/api" />

    </javadoc>

    <!-- replace .html?edu/internet2/middleware/grouper/webservices/GrouperService.html" with 
    .html" -->
    <!-- take out existing params, these are used by javascript to go to frames gracefully, trash them -->
    <replaceregexp flags="g">
      <regexp pattern="\.html\?[^&quot; ]*&quot;" />
      <substitution expression="\.html&quot;" />
      <fileset dir="doc/api" includes="**/*.html" />
    </replaceregexp>
    <!-- replace relative links, e.g. method links -->
    <replaceregexp flags="g">
      <regexp pattern="\.html#([^&quot;>]*)&quot;" />
      <substitution expression="\.html?root=I2MI&amp;view=co&amp;pathrev=${cvs.branch}#\1&quot;" />
      <fileset dir="doc/api" includes="**/*.html" />
    </replaceregexp>
    <!-- replace onLoad="top.loadFrames()" with onLoad="", this javascript messes things up with viewvc params -->
    <replace file="doc/api/index.html">
      <replacetoken><![CDATA[onLoad="top.loadFrames()"]]></replacetoken>
      <replacevalue><![CDATA[onLoad=""]]></replacevalue>
    </replace>
    <!-- replace for cvs web: .html" with .html?root=I2MI&view=co&pathrev=HEAD"   -->
    <replace dir="doc/api" value=".html?root=I2MI&amp;view=co&amp;pathrev=${cvs.branch}&quot;">
      <include name="**/*.html" />
      <replacetoken><![CDATA[.html"]]></replacetoken>
    </replace>
    <replace dir="doc/api" value=".css?root=I2MI&amp;view=co&amp;pathrev=${cvs.branch}&quot;">
      <include name="**/*.html" />
      <replacetoken><![CDATA[.css"]]></replacetoken>
    </replace>


  </target>

  
</project>