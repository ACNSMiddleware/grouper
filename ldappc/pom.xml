<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!--
    The next four items define the project artifact.
  -->
  <groupId>edu.internet2.middleware.ldappc</groupId>
  <artifactId>ldappc</artifactId>
  <version>1.2.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <!--
    Much of the information in this POM will be used in the site documentation.
  -->
  <name>LDAP Provisioning Connector</name>
  <description>Ldappc provisions LDAP membership, group, and privilege data from Grouper and Signet.</description>
  <url>https://wiki.internet2.edu/confluence/display/i2miCommon/Home</url>

  <!--
    Link to JIRA
  -->
  <issueManagement>
    <system>JIRA</system>
    <url>https://bugs.internet2.edu/jira/browse/MCO</url>
  </issueManagement>
  <inceptionYear>2006</inceptionYear>

  <!--
    Developer information for site documentation.  These should be people who should expect to
    receive email with questions about the project.
  -->
  <developers>
    <developer>
      <id>tbarton</id>
      <name>Tom Barton</name>
      <organization>The University of Chicago</organization>
      <organizationUrl>http://www.uchicago.edu/</organizationUrl>
      <email>tbarton@uchicago.edu</email>
      <roles>
        <role>manager</role>
      </roles>
      <timezone>-6</timezone>
    </developer>
    <developer>
      <id>khuxtable</id>
      <name>Kathryn Huxtable</name>
      <organization>Independent</organization>
      <organizationUrl>http://www.kathrynhuxtable.org/</organizationUrl>
      <email>kathryn@kathrynhuxtable.org</email>
      <roles>
        <role>developer</role>
      </roles>
      <timezone>-6</timezone>
    </developer>
  </developers>

  <!--
    Contributors are people who have contributed ideas and may have helped,
    but are not the principal developers.
  -->
  <contributors>
    <contributor>
      <name>Chris Hyzer</name>
      <organization>University of Pennsylvania</organization>
    </contributor>
    <contributor>
      <name>Dave Donnelly</name>
      <organization>Stanford University</organization>
    </contributor>
    <contributor>
      <name>Shilen Patel</name>
      <organization>Duke University</organization>
    </contributor>
  </contributors>

  <!--
    This project is licensed using the Apache 2.0 license.
    Copyright The University of Chicago,
    University Corporation for Advanced Internet Development, Inc.,
    and EDUCAUSE.
  -->
  <licenses>
    <license>
      <name>Apache 2</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <!--
    This is an Internet2 project.
  -->
  <organization>
    <name>Internet2</name>
    <url>http://www.internet2.edu/</url>
  </organization>

  <!--
    Links to the user and development mailing lists.
  -->
  <mailingLists>
    <mailingList>
      <name>Grouper Users</name>
      <subscribe>https://wiki.internet2.edu/confluence/display/GrouperWG/Contact+Information</subscribe>
      <unsubscribe>https://wiki.internet2.edu/confluence/display/GrouperWG/Contact+Information</unsubscribe>
      <post>grouper-users@internet2.edu</post>
      <archive>https://mail.internet2.edu/wws/arc/grouper-users</archive>
    </mailingList>
    <mailingList>
      <name>Grouper Development</name>
      <subscribe>https://wiki.internet2.edu/confluence/display/GrouperWG/Contact+Information</subscribe>
      <unsubscribe>https://wiki.internet2.edu/confluence/display/GrouperWG/Contact+Information</unsubscribe>
      <post>grouper-dev@internet2.edu</post>
      <archive>https://mail.internet2.edu/wws/arc/grouper-dev</archive>
    </mailingList>
  </mailingLists>

  <!--
    Links to the source code management system (CVS).  This will appear in the site documentation,
    and can also be used to generate project activity for the site documentation, though we're
    not doing that at this time.
  -->
  <scm>
    <connection>scm:cvs:pserver:anoncvs@anoncvs.internet2.edu:/home/cvs/i2mi:ldappc-mvn</connection>
    <developerConnection>scm:cvs:rsh:user@cvs.internet2.edu:/home/cvs/i2mi:ldappc-mvn</developerConnection>
    <tag>HEAD</tag>
    <url>http://viewvc.internet2.edu/viewvc.py/ldappc-mvn/?root=I2MI</url>
  </scm>

  <!--
    Configure the deploy location for the site documentation.
  -->
  <distributionManagement>
    <site>
      <id>website</id>
      <url>scpexe://middleware.internet2.edu/dir/groups/grouper/ldappc/${pom.version}/doc</url>
    </site>
  </distributionManagement>

  <!--
    We have a repository under the base directory containing some special artifacts
    and jars that cannot be kept at the Maven central repository.
  -->
  <repositories>
    <repository>
      <id>i2mi</id>
      <name>Internet2 Middleware Initiative Repository</name>
      <url>file://${basedir}/i2mi-repository</url>
    </repository>
  </repositories>

  <!--
    Configure the build environment.
  -->
  <build>
    <plugins>
      <!--
        This long configuration defines the various assembly packages that will be
        built during the package phase. The various "skipXXXX" properties are
        set in the default, deploy, and distribution profiles and control which
        assemblies are skipped.
        
        There is no way to skip the "make-lib" assembly, which builds the in-place
        run environment. It creates a "lib" directory *outside* the target
        directory, in the base directory and copies all dependencies plus the
        target jar into it.  The runner scripts in the bin directory use the conf
        directory plus all the jars in the lib directory as the class path
        and run the Ldappc main.
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.2-beta-2</version>
        <configuration>
          <tarLongFileMode>gnu</tarLongFileMode>
        </configuration>
        <executions>

          <!-- Make a binary distribution (no source) -->
          <execution>
            <id>make-binary</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <skipAssembly>${skipBinary}</skipAssembly>
              <descriptors>
                <descriptor>src/assemble/bin.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>

          <!-- Make a deployment distribution (like binary, but no site documentation) -->
          <execution>
            <id>make-deploy</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <skipAssembly>${skipDeploy}</skipAssembly>
              <descriptors>
                <descriptor>src/assemble/deploy.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>

          <!-- Make the "run in-place" environment -->
          <execution>
            <id>make-lib</id>
            <phase>package</phase>
            <goals>
              <goal>directory-single</goal>
            </goals>
            <configuration>
              <finalName>.</finalName>
              <outputDirectory>${basedir}</outputDirectory>
              <appendAssemblyId>false</appendAssemblyId>
              <ignoreDirFormatExtensions>true</ignoreDirFormatExtensions>
              <descriptors>
                <descriptor>src/assemble/lib.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>

          <!-- Make the site distribution (just the site documentation in the base directory) -->
          <execution>
            <id>make-site</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <skipAssembly>${skipSite}</skipAssembly>
              <descriptors>
                <descriptor>src/assemble/site.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>

          <!-- Make the source distribution (everything needed to build, plus site documentation) -->
          <execution>
            <id>make-source</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <skipAssembly>${skipSource}</skipAssembly>
              <descriptors>
                <descriptor>src/assemble/src.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Specify the JDK version -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.0.2</version>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
          <debug>true</debug>
        </configuration>
      </plugin>

      <!-- Add a manifest to the project jar, including version and Wiki URL -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
              <url>${pom.url}</url>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <!--
        Configure the site plugin to generate the site documentation.  Most of the
        configuration is actually in the reporting section.
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>2.0-beta-7</version>
        <configuration>
          <locales>en</locales>
        </configuration>
      </plugin>

      <!--
        Configure the JUnit tests.  Just run AllJUnitTests, which is a test suite
        with a wrapper around it that starts and stops LDAP and the databases.
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.4.3</version>
        <configuration>
          <argLine>-Xmx400M</argLine>
          <includes>
            <include>**/AllJUnitTests.java</include>
          </includes>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <!--
    Configure the reporting information.  This goes into the site documentation.
  -->
  <reporting>
    <plugins>
      <!-- Configure the javadoc. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <links>
            <link>http://java.sun.com/j2se/1.5.0/docs/api/</link>
          </links>
          <quiet>true</quiet>
          <author>false</author>
          <version>true</version>
          <doctitle>${project.name} ${project.version} Java API.</doctitle>
          <windowtitle>${project.name} ${project.version} Java API.</windowtitle>
        </configuration>
      </plugin>

      <!-- Configure the source cross reference. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>2.1</version>
        <configuration>
          <outputDirectory>${project.reporting.outputDirectory}/xref</outputDirectory>
          <doctitle>${project.name} ${project.version} Code Cross-Reference</doctitle>
          <windowtitle>${project.name} ${project.version} Java API.</windowtitle>
          <javadocDir>${project.reporting.outputDirectory}/apidocs</javadocDir>
        </configuration>
      </plugin>

      <!-- Configure style checking. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.1</version>
        <configuration>
          <encoding>UTF-8</encoding>
          <configLocation>src/checkstyle/checkstyle.xml</configLocation>
          <outputDirectory>${project.reporting.outputDirectory}/style</outputDirectory>
          <enableRSS>false</enableRSS>
        </configuration>
      </plugin>

      <!--
        Configure the JUnit test reporting. Note that tests run during build are
        configured in the build section. This configures the reporting of those
        tests.
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.4.3</version>
        <configuration>
          <outputDirectory>${project.reporting.outputDirectory}/unitTest</outputDirectory>
        </configuration>
      </plugin>

      <!-- Generate the following standard project reports. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.0.1</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>summary</report>
              <report>dependencies</report>
              <report>dependency-convergence</report>
              <report>project-team</report>
              <report>mailing-list</report>
              <report>issue-tracking</report>
              <report>license</report>
              <report>scm</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <!-- Generate a tag list report to easily find TODO and FIXME comments. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>taglist-maven-plugin</artifactId>
        <version>2.0</version>
        <configuration>
          <tags>
            <tag>TODO</tag>
            <tag>FIXME</tag>
          </tags>
        </configuration>
      </plugin>

      <!--
        Configure the PMD report, reporting on coding style.
        This also configures CPD (copy/paste detection) reporting.
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <targetJdk>1.5</targetJdk>
        </configuration>
      </plugin>

      <!-- Perform Cobertura coverage testing using the unit tests. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>2.2</version>
      </plugin>
    </plugins>
  </reporting>

  <!--
    Specify the artifacts on which this project depends.
    Dependencies are transitive.
    The default scope is compile and runtime. Test dependencies
    will only be used while running the unit tests.
    
    The dependencies are in alphabetical order by artifactId.
  -->
  <dependencies>
    <dependency>
      <groupId>org.apache.directory.server</groupId>
      <artifactId>apacheds-core</artifactId>
      <version>1.0.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>edu.internet2.middleware.ldappc</groupId>
      <artifactId>apacheds-ldappc-schema</artifactId>
      <version>1.0.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.directory.server</groupId>
      <artifactId>apacheds-server-unit</artifactId>
      <version>1.0.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-digester</groupId>
      <artifactId>commons-digester</artifactId>
      <version>1.8</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>edu.internet2.middleware.grouper</groupId>
      <artifactId>grouper</artifactId>
      <version>1.3.0</version>
    </dependency>
    <dependency>
      <groupId>jug</groupId>
      <artifactId>jug</artifactId>
      <version>1.1.2</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.12</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.5.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>1.8.0.7</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.dawidweiss.invoker</groupId>
      <artifactId>invoker</artifactId>
      <version>1.0</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>edu.internet2.middleware.signet</groupId>
      <artifactId>signet-api</artifactId>
      <version>1.3.0</version>
    </dependency>
    <dependency>
      <groupId>edu.internet2.middleware.subject</groupId>
      <artifactId>subject</artifactId>
      <version>0.3.1</version>
    </dependency>
  </dependencies>

  <!--
    Configure the profiles.  Profiles are different sets of configurations
    under which the project can be built.
    
    These fall into two sections:
    
    1) Database driver dependency inclusion, generally used during the default
       run-in-place packaging or in conjunction with the "deploy" profile, and
    
    2) The "deploy" and "distribution" profiles, which are used to either
       make a package for easy deployment to a production environment, or
       to make the distribution packages which are on the download page.
  -->
  <profiles>
    <!-- Database profiles in alphabetical order. -->
    <profile>
      <id>derby10.4</id>
      <dependencies>
        <dependency>
          <groupId>org.apache.derby</groupId>
          <artifactId>derbyclient</artifactId>
          <version>10.4.1.3</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>hsql1.7</id>
      <dependencies>
        <dependency>
          <groupId>hsqldb</groupId>
          <artifactId>hsqldb</artifactId>
          <version>1.7.3.3</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>hsql1.8</id>
      <dependencies>
        <dependency>
          <groupId>hsqldb</groupId>
          <artifactId>hsqldb</artifactId>
          <version>1.8.0.7</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>mysql5.0</id>
      <dependencies>
        <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
          <version>5.0.8</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>mysql5.1</id>
      <dependencies>
        <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
          <version>5.1.6</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>oracle9</id>
      <dependencies>
        <dependency>
          <groupId>com.oracle</groupId>
          <artifactId>ojdbc14</artifactId>
          <version>9.0.2.0.0</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>oracle10</id>
      <dependencies>
        <dependency>
          <groupId>com.oracle</groupId>
          <artifactId>ojdbc14</artifactId>
          <version>10.2.0.3.0</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>oracle11-java5</id>
      <dependencies>
        <dependency>
          <groupId>com.oracle</groupId>
          <artifactId>ojdbc5</artifactId>
          <version>11.1.0.6</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>oracle11-java6</id>
      <dependencies>
        <dependency>
          <groupId>com.oracle</groupId>
          <artifactId>ojdbc6</artifactId>
          <version>11.1.0.6</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>postgres8.3</id>
      <dependencies>
        <dependency>
          <groupId>postgresql</groupId>
          <artifactId>postgresql</artifactId>
          <version>8.3-603.jdbc3</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>

    <!-- Make a deploy assembly. -->
    <profile>
      <id>deploy</id>
      <properties>
        <skipDeploy>false</skipDeploy>
      </properties>
    </profile>

    <!-- Make the distribution assemblies. -->
    <profile>
      <id>distribution</id>
      <properties>
        <skipBinary>false</skipBinary>
        <skipSite>false</skipSite>
        <skipSource>false</skipSource>
      </properties>
    </profile>
  </profiles>

  <!--
    These properties are set to true to skip making the various
    deploy and distribution assemblies.  The appropriate profiles
    override these settings to create the assemblies.
  -->
  <properties>
    <skipBinary>true</skipBinary>
    <skipDeploy>true</skipDeploy>
    <skipSite>true</skipSite>
    <skipSource>true</skipSource>
  </properties>
</project>
