~~
~~  Copyright 2006-2007 The University Of Chicago
~~  Copyright 2006-2007 University Corporation for Advanced Internet Development, Inc.
~~  Copyright 2006-2007 EDUCAUSE
~~ 
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~ 
~~ http://www.apache.org/licenses/LICENSE-2.0
~~ 
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.

 -----
 Examples
 -----

  This document describes some sample configuration files for the Ldappc program.
  
  <<Note>>: This is a preliminary and very incomplete page at this point.
  
  Contents
  
%{toc}
  
{Basic Grouper Example}

  The following example will provision groups in the stems "testStem" and "qsuob" into LDAP
  under "ou=testGrouper,dc=example,dc=edu".
  The groups will be provisioned in a flat fashion, i.e. no hierarchy. The name of a group will
  become the cn of the group in LDAP, e.g. qsuob:su:clubs:gliding for the Gliding Club from the
  Quick Start database. The object class of the groups will be "groupOfNames".
  The DN values of the members will be provisioned into the group in the "member" attribute.
  The LOGINID of the members will be populated into the group in the "hasMember" attribute, and
  the name of any included groups will be included in the "hasMember" attribute as well.
  This will also add the auxiliary class "eduMember" to the group.
  Any values in the extended attribute "aci" in the group will be provisioned into the "aci" attribute
  in LDAP, allowing for access control in a crude fashion.
  
  The example will also provision the group names to which each member belongs into their DN entry
  in the "isMemberOf" attribute. This will add the auxiliary class "eduMember" to the member's DN entry.
  
  The member subjects' DNs will be retrieved from LDAP querying by LOGINID.
  
  The password for the LDAP access will be gotten by looking for the "security_credentials" property
  in the ldappc.properties file. This enables version control to be used for this configuration file
  without storing your password in a version control system.

---
<?xml version="1.0" encoding="utf-8"?>
<ldappc>
  <grouper>
    <group-queries>
      <subordinate-stem-queries>
        <stem-list>
          <stem>testStem</stem>
          <stem>qsuob</stem>
        </stem-list>
      </subordinate-stem-queries>
    </group-queries>
    <groups structure="flat"
      root-dn="ou=testgrouper,dc=example,dc=edu"
      ldap-object-class="groupOfNames"
      ldap-rdn-attribute="cn" grouper-attribute="name" >
      <group-members-dn-list list-object-class="groupOfNames" list-attribute="member" list-empty-value=""/>
      <group-members-name-list list-object-class="eduMember" list-attribute="hasMember" >
        <source-subject-name-mapping>
          <source-subject-name-map source="qsuob" subject-attribute="LOGINID" />
          <source-subject-name-map source="g:gsa" subject-attribute="name" />
        </source-subject-name-mapping>
      </group-members-name-list>
      <group-attribute-mapping ldap-object-class="">
        <group-attribute-map group-attribute="aci" ldap-attribute="aci" />
      </group-attribute-mapping>
    </groups>
    <memberships>
      <member-groups-list list-object-class="eduMember" 
                          list-attribute="isMemberOf"
                          naming-attribute="name" />
    </memberships>
  </grouper>

  <source-subject-identifiers>
    <source-subject-identifier source="qsuob" subject-attribute="LOGINID" >
      <ldap-search base="ou=uob,dc=example,dc=edu" 
                   scope="onelevel_scope" 
                   filter="(uid={0})" />
    </source-subject-identifier>
  </source-subject-identifiers>

  <ldap>
    <context>
      <parameter-list>
        <parameter name="initial_context_factory" value="com.sun.jndi.ldap.LdapCtxFactory" />
        <parameter name="provider_url" value="ldap://localhost:389" />
        <parameter name="security_authentication" value="simple" />
        <parameter name="security_principal" value="cn=manager,dc=example,dc=edu" />
        <parameter name="security_credentials" value="GetFromPropertiesFile" />
      </parameter-list>
    </context>
  </ldap>

</ldappc>
---

{Attribute-based Grouper Query Example}

  The following XML snippet would replace the "<group-queries>" element in the example above to query by presence
  of a value of an attribute instead of by entire stems.  The example below will provision any group into LDAP
  whose extended attribute "includeInLdap" is equal to either "true" or "test".
  
  The reason for this kind of query is that one might use group math to generate many intermediate groups
  on the path between groups populated from EIS data to groups that will actually be used by applications,
  and there may be no desire to provision all of these intermediate groups into LDAP. Using an attribute
  matching query allows people to check the groups they actually want populated into Grouper and ignore the rest.

---
    <group-queries>
      <attribute-matching-queries>
        <attribute-list>
          <attribute name="includeInLdap" value="true" />
          <attribute name="includeInLdap" value="test" />
        </attribute-list>
      </attribute-matching-queries>
    </group-queries>
---
