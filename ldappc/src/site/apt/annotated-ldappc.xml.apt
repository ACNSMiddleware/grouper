~~
~~  Copyright 2006-2007 The University Of Chicago
~~  Copyright 2006-2007 University Corporation for Advanced Internet Development, Inc.
~~  Copyright 2006-2007 EDUCAUSE
~~ 
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~ 
~~ http://www.apache.org/licenses/LICENSE-2.0
~~ 
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.

 -----
 Annotated ldappc.xml File
 -----

  This document describes how to configure the <<<ldappc.xml>>> file.
  
%{toc}
  
{Top Level Elements}

  The following is the basic structure of the <<<ldappc.xml>>> file.

---
<?xml version="1.0" encoding="utf-8"?>
<ldappc>
    <grouper>...</grouper>
    <signet>...</signet>
    <source-subject-identifiers>...</source-subject-identifiers>
    <ldap>...</ldap>
</ldappc>
---

  * <<grouper>>: provisions Grouper data. Optional.
  
  * <<signet>>: provisions Signet data. Optional.
  
  * <<source-subject-identifiers>>: maps Grouper/Signet subjects into LDAP. Required.
  
  * <<ldap>>: specifies LDAP connection information. Required.
  
  []
  
  One or both of the \<grouper\> and \<signet\> elements must be included.

{Provisioning from Grouper}

  The following is the structure of the \<grouper\> element.
  This is used to provision group and membership information from Grouper.
  
---
<?xml version="1.0" encoding="utf-8"?>
<ldappc>
    <grouper>
        <group-queries>...</group-queries>
        <groups ...>...</groups>
        <memberships>...</memberships>
    </grouper>
    ...
</ldappc>
---

  * <<group-queries>>: defines which groups are selected for the provisioning. Required.
  
  * <<groups>>: defines how to provision groups. Optional.
  
  * <<memberships>>: defines how to provision memberships. Optional.
  
  []

  One or both of the \<groups\> or \<memberships\> elements must be included.

* {Specifying Groups to be Provisioned}

  You must specify which Grouper groups you wish to provision.
  This can be done by provisioning every group in a set of Grouper stems,
  or by provisioning every group having certain attribute values, or both.
  The queries below are aggregated.  There is currently no way to exclude
  a group that otherwise matches the criteria from being provisioned.

---
<?xml version="1.0" encoding="utf-8"?>
<ldappc>
    <grouper>
        <group-queries>
            <!-- Specify if you are provisioning groups based on stems -->
            <subordinate-stem-queries>
                <stem-list>
                    <stem>my:stem:value</stem>
                    ...
                </stem-list>
            </subordinate-stem-queries>

            <!-- Specify if you are provisioning groups based on attribute values -->
            <attribute-matching-queries>
                <attribute-list>
                    <attribute name="myAttributeName"
                               value="myRequiredValue" />
                    ...
                </attribute-list>
            </attribute-matching-queries>
        </group-queries>
        ...
    </grouper>
    ...
</ldappc>
---

  The \<subordinate-stem-queries\> and \<attribute-matching-queries\> have the following elements:

  * <<stem>>: selects all groups that are subordinate to the naming stem (e.g. <<<my:stem:value>>>).
  
  * <<attribute>>: selects all groups containing the attribute/value pair specified
    (e.g. <<<myAttributeName>>> and <<<myRequiredValue>>>).
    
  []

  One or both of the \<subordinate-stem-queries\> or \<attribute-matching-queries\>
  elements must be specified. The results are aggregated.
  
* {Provisioning LDAP Groups}

  The \<groups\> element defines how the entries and DNs for provisioned groups are created.
  This element is required if groups are being provisioned.

---
<?xml version="1.0" encoding="utf-8"?>
<ldappc>
    <grouper>
        ...
        <groups structure="flat"
                root-dn="ou=grouper,ou=groups,dc=example,dc=edu"
                ldap-object-class="groupOfNames"
                ldap-rdn-attribute="cn"
                grouper-attribute="name"
                initial-cache-size="170003">

            <group-members-dn-list ... />
            <group-members-name-list ...>...</group-members-name-list>
            <group-attribute-mapping ldap-object-class="">...</group-attribute-mapping>
        </groups>
        ...
    </grouper>
    ...
</ldappc>
---

  * <<structure>>: defines the DN naming structure for groups. Required.\
    Its value must be either "flat" or "bushy".
    This will either provision all groups into the same root DN using the name of the group as the RDN,
    e.g. <<<my:stem:value:subordinate:group-name>>>, or it will populate the groups in a hierarchical
    fashion, e.g. <<<cn=group\-name,ou=subordinate,ou=value,ou=stem,ou=my,>>><root-dn>.
    
  * <<root-dn>>: the object to be used as the root for storing the provisioned groups
    (e.g. <<<ou=grouper,ou=groups,dc=example,dc=edu>>>). Required.
  
  * <<initial-cache-size>>: the initial size of the group cache. Optional.\
    Setting this larger than the likely number of groups to be provisioned should improve performance.

  * <<ldap-object-class>>: the object class used to create each provisioned group's LDAP entry. Required.\
    Please note that if this object class has required attributes not populated by the provisioning process,
    then an error will occur.
  
  * <<ldap-rdn-attribute>>: the attribute in the ldap-object-class used as the RDN. Required.\
    This value may not be "ou" in order to prevent, among other things, naming collisions between stems and groups
    when structure is "bushy".

  * <<grouper-attribute>>: defines whether the id or name attribute value of the group is to be used for the value
    of the ldap-rdn-attribute in the directory when structure is "flat".
    This is required when structure is "flat", but can be removed if structure is "bushy".
    The allowed values are "id" or "name".

  []
  
  The \<groups\> element contains the following optional elements.
  
  * <<group-members-dn-list>>: specifies the attribute in which the list of member DNs is maintained. Optional.\
    If this element is NOT present, the list is NOT maintained.

  * <<group-members-name-list>>: specifies the attribute in which the list of member names is maintained. Optional.\
    If this element is NOT present, the list is NOT maintained.

  * <<group-attribute-mapping>>: specifies which group attributes are mapped to the group's directory entry. Optional.\
    If this element is NOT present, then attributes are NOT maintained.

** {Provisioning Member DNs into Groups}

  The \<group-members-dn-list\> is an optional element defining whether or not provisioned group
  LDAP entries have an attribute listing all of the DNs of each Member's LDAP entry.
  If the element is defined, then the DNs of the Member's LDAP entries are stored
  in the LDAP attribute identified by the value of list-attribute.

---
<?xml version="1.0" encoding="utf-8"?>
<ldappc>
    <grouper>
        ...
        <groups ...>
            <group-members-dn-list list-object-class="groupOfNames"
                                   list-attribute="member"
                                   list-empty-value="" />
            ...
        </groups>
        ...
    </grouper>
    ...
</ldappc>
---

  * <<list-object-class>>: the object class the group entry must have to support the list-attribute. Optional.\
    Please note that if this object class has required attributes not populated
    by the provisioning process, then an error may occur.

  * <<list-attribute>>: the LDAP entry attribute in which to store DN list (e.g., <<<groupOfNames>>>). Required.

  * <<list-empty-value>>: the value to be placed in the list-attribute if no member DNs are stored there. Optional.\
    If list-attribute is optional (i.e., a MAY attribute), this value is most likely not needed.
    If list-attribute is required (i.e., a MUST attribute), then this value should be defined.

** {Provisioning Member Names into Groups}

  The \<group-members-name-list\> element is is an optional element defining whether
  or not provisioned group LDAP entries have an attribute listing all of the members
  by name which belong to it.
  If this element is defined, then the list of members for a group will be
  stored in the group LDAP entry according to the following attributes.

---
<?xml version="1.0" encoding="utf-8"?>
<ldappc>
    <grouper>
        ...
        <groups ...>
            ...
            <group-members-name-list list-object-class="eduMember"
                                     list-attribute="hasMember"
                                     list-empty-value="">

                <source-subject-name-mapping>
                    <source-subject-name-map source="mySource"
                                             subject-attribute="userid" />
                    ...
                </source-subject-name-mapping>
            </group-members-name-list>
            ...
        </groups>
        ...
    </grouper>
    ...
</ldappc>
---

  * <<list-object-class>>: the object class the group entry must have to support the list-attribute. Optional.\
    Please note that if this object class has required attributes not populated by the provisioning process,
    then an error may occur.

  * <<list-attribute>>: the LDAP entry attribute in which to store group list (e.g., <<<groupOfNames>>>). Required.\

  * <<list-empty-value>>: the value to be placed in the list-attribute if no member names are stored there. Optional.\
    If list-attribute is optional (i.e., a MAY attribute), this value is most likely not needed.
    If list-attribute is required (i.e., a MUST attribute), then this value should be defined.

  []
  
  The \<group-members-name-list\> element contains the following element.

  * <<source-subject-name-mapping>>: defines for each Source the Subject attribute to be used as the name of the Subject. Required.
    It has the following attributes:
  
    * <<source>>: the source ID in the <<<sources.xml>>> file identifying the source in which the subject is found.
    
    * <<subject-attribute>>: the attribute to be mapped to the name (e.g. <<<userid>>>).

** {Provisioning Other Group Attributes into Groups}

  The \<group-attribute-mapping\> element is an optional element defining how attributes
  from a group are mapped to attributes of the group's LDAP entry.

---
<?xml version="1.0" encoding="utf-8"?>
<ldappc>
    <grouper>
        ...
        <groups ...>
            ...
            <group-attribute-mapping ldap-object-class="">
                <group-attribute-map group-attribute="aci"
                                     ldap-attribute="aci"
                                     ldap-attribute-empty-value="" />
                ...
            </group-attribute-mapping>
        </groups>
        ...
    </grouper>
    ...
</ldappc>
---

  * <<ldap-object-class>>: the object class the group entry must have to support the attribute mapping. Optional.\
    Please note that if this object class has required attributes not populated by the 
    provisioning process, then an error may occur.
    
  []

  The \<group-attribute-mapping\> element contains one or more of the following element.

  * <<group-attribute-map>>: defines for a given group attribute which LDAP attribute will hold its value.
    It has the following attributes:
  
    * <<group-attribute>>: the attribute name from the Grouper group. Required.

    * <<ldap-attribute>>: the LDAP attribute name for holding the group attribute value. Required.

    * <<ldap-attribute-empty-value>> the value to be placed in the ldap-attribute if no values are stored there. Optional.\
      If ldap-attribute is optional (i.e., a MAY attribute), this value is most likely not needed.
      If ldap-attribute is required (i.e., a MUST attribute), then this value should be defined.

* {Provisioning a Membership Attribute}

  The \<memberships\> element is an optional element defining how memberships are provisioned.
  This element is required if Memberships are being provisioned.

---
<?xml version="1.0" encoding="utf-8"?>
<ldappc>
    <grouper>
        ...
        <memberships>
            <member-groups-list list-object-class="eduMember"
                                list-attribute="isMemberOf"
                                naming-attribute="name"
                                list-empty-value=""
                                temporary-directory="" />
        </memberships>
    </grouper>
    ...
</ldappc>
---

  The \<memberships\> element contains exactly one \<member-groups-list\> element, which has the following attributes,
  defining how the list of groups to which a member belongs is maintained on the members LDAP entry.

  * <<list-object-class>>: the object class the Member's entry must have to support the group list. Optional.\
    Please note that if this object class has required attributes not populated by the provisioning
    process, then an error may occur.

  * <<list-attribute>>: the LDAP entry attribute in which to store group list (e.g., <<<isMemberOf>>>).

  * <<list-empty-value>>: the value to be placed in the list-attribute if no group names are stored there. Optional.\
    If list-attribute is optional (i.e., a MAY attribute), this value is most likely not needed.
    If list-attribute is required (i.e., a MUST attribute), then this value should be defined.

  * <<naming-attribute>>: the group naming attribute to use when creating the list of groups for a member (e.g., <<<name>>>).

  * <<temporary-directory>>: a file system directory in which the membership update files will be written. Optional.\
    Defaults to the current directory.

{Provisioning from Signet}

  The following is the structure of the \<signet\> element.
  This is used to provision Permissions from Signet.

---
<?xml version="1.0" encoding="utf-8"?>
<ldappc>
    ...
    <signet>
        <permissions-listing ... />
        <permissions-queries>...</permissions-queries>
    </signet>
    ...
</ldappc>
---

  The \<signet\> element contains two elements:

  * <<permissions-listing>>: defines how permissions are stored when provisioned. Required.

  * <<permissions-queries>>: selects which permissions are provisioned. Optional.

* {Provisioning Permissions}

  The \<permissions-listing\> element defines how provisioned permissions are stored in a Subject's LDAP entry.

---
<?xml version="1.0" encoding="utf-8"?>
<ldappc>
    ...
    <signet>
        <permissions-listing stored-as="string"
                             string-object-class="eduPerson"
                             string-attribute="eduPersonEntitlement"
                             string-prefix="urn:mace:example.edu:permission:"
                             string-list-empty-value="" />
        ...
    </signet>
    ...
</ldappc>
---

  The method storing provisioned permissions is wholly defined by the following attributes.

  * <<stored-as>>: Defines how the permissions are stored. Required.\
    Its value must be one of "string" or "eduPermission".
    The value "string" provisions Permissions coded as strings into an attribute in the
    Subject's LDAP entry.
    The value "eduPermission" provisions Permissions as eduPermission sub-objects under
    the Subject's LDAP entry.

  * <<string-object-class>>: the object  class to add to the Member's subject LDAP entry in order to
    support the string-attribute. Optional.\
    Please note that if this object class has required attributes not populated by the 
    provisioning process, then an error may occur.

  * <<string-attribute>>: the LDAP entry attribute in which to store permissions if stored-as is set to "string"
    (e.g., permissionStrings).  This attribute is required if stored-as is "string", otherwise it is ignored.

  * <<string-prefix>>: the prefix to use when storing permissions as strings. Optional.\
    This prefix is inserted at the beginning of each permissions string.

  * <<string-list-empty-value>>: the value to be placed in the list-attribute if no permission strings are stored there. Optional.\
    If list-attribute is optional (i.e., a MAY attribute), this value is most likely not needed.
    If list-attribute is required (i.e., a MUST attribute), then this value should be defined.
    This attribute is only used when stored-as is "string".

* {Specifying Permissions to be Provisioned}

  The \<permissions-queries\> element is an optional element identifying the queries
  used to select Permissions for provisioning.
  All active Permissions meeting one or more of criteria below are selected for provisioning.
  If the \<permissions-queries\> element is not supplied, then all active Permissions are provisioned.

---
<?xml version="1.0" encoding="utf-8"?>
<ldappc>
    ...
    <signet>
        ...
        <permissions-queries>
            <subsystem-queries>
                <subsystem-list>
                    <subsystem id="mySubsystemId" />
                    ...
                </subsystem-list>
            </subsystem-queries>

            <function-queries>
                <function-list>
                    <function id="myFunctionId" />
                    ...
                </function-list>
            </function-queries>
        </permissions-queries>
    </signet>
    ...
</ldappc>
---

  The \<subsystem-queries\> and \<function-queries\> elements have the following elements:
  
  * <<subsystem>>: the <<id>> attribute selects all active Permissions associated with the identified subsystem.
  
  * <<function>>: the <<id>> attribute selects all active Permissions associated with the identified function.
  
  []
  
  One or both of the \<subsystem-queries\> or \<function-queries\> elements must be specified.
  The results are aggregated.

{Mapping Grouper and Signet Subjects into the LDAP Directory}

  You must specify for each Subject Source how a Subject's LDAP entry is located.
  This is done using the \<source-subject-identifiers\> element.

---
<?xml version="1.0" encoding="utf-8"?>
<ldappc>
    ...
    <source-subject-identifiers>
        <source-subject-identifier source="mySource"
                                   subject-attribute="id"
                                   initial-cache-size="350007">
            <ldap-search base="ou=people,dc=example,dc=edu"
                         scope="onelevel_scope"
                         filter="(&(examplePersonId={0})(objectclass=examplePerson)))" />
        </source-subject-identifier>
        ...
    </source-subject-identifiers>
    ...
</ldappc>
---

  The \<source-subject-identifiers\> element contains one or more \<source-subject-identifier\> elements.

  The \<source-subject-identifier\> element identifies for a given Subject Source
  the Subject naming attribute to be used for identifying Subjects in the directory,
  and an LDAP search filter that will uniquely identify Subjects for the Source using the given naming attribute value.
  
  * <<initial-cache-size>>: specifies the initial cache size to use for caching subject DNs by subject ID. Optional.\
    Specifying a larger number than the number of subjects should give better performance.

  * <<source>>: the Subject Source ID (e.g., "g:gsa").

  * <<subject-attribute>>: The name of the Subject naming attribute to be used (e.g., "account"). Required.\
    If a value other than "id" (the subject ID) is specified, the performance will suffer as an extra Subjec
    lookup will need to be performed.
    It is strongly recommended that the subject ID be in the subject's directory object and that it be indexed.

  []

  Each \<source-subject-identifier\> element contains exactly one \<ldap-search\> element, with the following attributes.
  
  * <<base>>: the base DN of the context or object to search (e.g., <<<ou=people,dc=example,dc=edu>>>). Required.

  * <<scope>>: the scope of the search. Required.\
    The valid values are, ignoring case, the names of the JNDI scope constants
    defined in the class javax.naming.directory.SearchContext.
    These are "object_scope", "onelevel_scope", and "subtree_scope".
    For most flat people branches, "onelevel_scope" is a good choice.

  * <<filter>>: the parameterized search filter (e.g., "(&(uid=\{0\})(objectclass=ucPerson)))". Required.\
    The string "\{0\}" will be replaced by the value of Subject's attribute identified by subject-attribute in
    the source-subject-identifier element.
  
{Configuring the LDAP Connection}

  TBD.
