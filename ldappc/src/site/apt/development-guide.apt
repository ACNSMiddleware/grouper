~~
~~  Copyright 2006-2007 The University Of Chicago
~~  Copyright 2006-2007 University Corporation for Advanced Internet Development, Inc.
~~  Copyright 2006-2007 EDUCAUSE
~~
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~
~~ http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.

 -----
 Development Guide
 -----

  This document describes how to modify and/or update the Ldappc program, as well as how to deploy it
  to your production site or to Internet2's site.

  To develop the Ldappc program you will need a source source distribution, available
  as a download, or you may check out the source from CVS.
  
  Note that you must be a registered Internet2 developer to deploy the project to Internet2's site.

  Contents

%{toc}

{Source Installation}

  The source distribution file is available as a compressed tar file or as a zip file.  See the
  {{{https://wiki.internet2.edu/confluence/display/i2miCommon/Ldappc+Software+Download}Ldappc Download Page}}
  to download a source distribution.
  The source is also available from the Internet2 CVS repository by anonymous check out.  See the
  {{{source-repository.html}source repository}} page for instructions on accessing the
  source from CVS.

  The source distribution file contains the site documentation in the <<<site>>> directory.
  If you check out the source from CVS, you will have to build the site documentation yourself.

  If you download the distribution file and unpack it in a directory of your choice, you will
  see a subdirectory titled <<<ldappc-theVersionNumber>>>. If you download the source from CVS,
  the directory will just be called <<<ldappc>>>. In either case, this directory will be called the
  installation directory.  All commands should be run from the installation directory.

* {Prerequisites}

  The following are required to build Ldappc from source.

** {Java JDK 1.5 or Later}

  The Ldappc project, as well as its dependent Grouper and Signet projects, use features
  available only in Java 1.5 and later.  You will need a JDK for Java 1.5 or later.  The
  Sun JDK is recommended for Windows and UN*X systems.  The Apple JDK is recommended for
  Mac OS X.
  
  Make sure that your <<<JAVA_HOME>>> environment variable is set to your Java 1.5 installation,
  and that its <<<bin>>> directory is in your path.

** {Maven}

  The Ldappc project uses Apache Maven as its build environment.  The project was built using
  version 2.0.9, but later versions should also work.  Maven may already be installed on your
  system, but if not, it can be obtained from {{http://maven.apache.org}}, and installed.
  The mvn command must be in your path.  The installation for Windows, Mac OS X, and Linux is
  very straightforward.

  Discussion of Maven is beyond the scope of this document. See the {{{maven-resources.html}Maven resources}}
  page for more information.

* {Installation Procedure}

  The first step in the installation is to unpack the installation archive
  file to an installation directory of your choice.
  This will create a subdirectory of <<<ldappc-theVersionNumber>>>,
  which will be referred to as the installation directory.
  If you checked out the source from CVS, the directory will be called <<<ldappc>>>,
  but it will still be referred to as the installation directory.
  All commands must be run from the installation directory.

** {The Maven Repository}

  Maven uses a local artifact repository in your home directory to store dependent jars used
  by Maven projects.  This directory will be created if it does not exist.  If a dependent
  artifact is not present in your local repository, Maven will contact the Maven central
  repository, and optionally, third-party repositories, to find the artifact and download it
  into your local repository.

  This local repository is a utility which will be used by any Maven-based project you may
  be building.  There will be many jars loaded into it, both for the build process and
  for Ldappc's dependencies.

  Most jars needed by Ldappc are in the Maven central repository, but several are not.
  We have provided a small "remote" repository in the distribution which contains the required
  jars for building and/or running Ldappc.  You should not need to take any action to use
  this repository, as it is referenced in Ldappc's POM (Project Object Model) file.

** {Commercial Database Jars}

  The JDBC drivers for Derby, HSQL, MySQL, and Postgres are included in the central Maven
  repository.  If you are using Oracle or some other commercial database you may need to
  download the driver jar and install it in your local repository.  The pom (project
  object model) files for various versions of Oracle are available in the central
  repository, but licensing prevents the jar itself from being included.

  To view instructions for installing Oracle jars into your local repository see the
  <<<README.txt>>> file in the i2mi-repository directory.

** {Building Ldappc}

  Run the following command

---
mvn site package -Pmydb
---

  where <mydb> is the profile listed in the <<<pom.xml>>> file corresponding to the
  database and version you wish to use for Signet and/or Grouper.

*------------------------+------------------------------------------------+
| <<Profile>>            | <<Description>>                                |
*------------------------+------------------------------------------------+
| <<<derby10.4>>>        | Apache Derby version 10.4.1.3                  |
*------------------------+------------------------------------------------+
| <<<hsql1.7>>>          | HSQL version 1.7.3.3                           |
*------------------------+------------------------------------------------+
| <<<hsql1.8>>>          | HSQL version 1.8.0.7                           |
*------------------------+------------------------------------------------+
| <<<mysql5.0>>>         | MySQL version 5.0.8                            |
*------------------------+------------------------------------------------+
| <<<mysql5.1>>>         | MySQL version 5.1.6                            |
*------------------------+---------------------------------------------------+
| <<<oracle9>>>          | Oracle for JDK 1.4+ (ojdbc14), version 9.0.2.0.0  |
*------------------------+---------------------------------------------------+
| <<<oracle10>>>         | Oracle for JDK 1.4+ (ojdbc14), version 10.2.0.3.0 |
*------------------------+---------------------------------------------------+
| <<<oracle11-java5>>>   | Oracle for JDK 1.5+ (ojdbc5), version 11.1.0.6 |
*------------------------+------------------------------------------------+
| <<<oracle11-java6>>>   | Oracle for JDK 1.6+ (ojdbc6), version 11.1.0.6 |
*------------------------+------------------------------------------------+
| <<<postgres8.3>>>      | PostgreSQL version 8.3-603.jdbc3               |
*------------------------+------------------------------------------------+

  If you wish to use different databases for Signet
  and Grouper you may list the profiles separated by commas, e.g. run

---
mvn site package -Poracle10,mysql5.1
---

  to include both database drivers.

  These commands will run Maven and have it build the site documentation, run the
  test suite, and package Ldappc for running from the installation directory.

  This creates the site documentation in the <<<target/site directory>>>, creates an Ldappc jar
  in <<<target/ldappc-theVersionNumber.jar>>>, and creates a directory containing all the dependent jars,
  including the Ldappc jar, in the <<<lib>>> directory.

  Before running Ldappc against your own data, you will need to edit the files in the <<<conf>>>
  directory.  See the {{{user-manual.html}User Manual}} for information on configuring and
  running the Ldappc program.

  If you want to clean your build environment, the command

---
mvn clean
---

  can be used.  To simply build the project exclusive of documentation, run the command

---
mvn package
---

  and the Ldappc jar, and the dependent library directory will be regenerated as needed.

  If you have only edited the configuration files in the <<<conf>>> directory, you do not need to run
  Maven at all. These files are included in the class path by the runner scripts and any changes
  will be reflected when you re-run the Ldappc program.
  
  To only run the tests, run the command
  
---
mvn test
---

** {Expected Results}

  All of the current test cases should run successfully if the installation is
  successful.  There should be no error messages sent to the error log, which is in
  <<<logs/ldappc_error.log>>> by default.

** {Skipping Tests or Ignoring Test Failures}

  You can skip running the tests by adding the option "<<<-DskipTests=true>>>" to the Maven
  command, e.g.

---
mvn package -DskipTests=true
---

  If you want to run the tests, but continue packaging if a test fails, you can instead add the option
  "<<<-Dmaven.test.failure.ignore=true>>>" to the Maven command.

* {Deploying Ldappc}

  To deploy Ldappc you need the <<<bin>>> directory, the <<<conf>>> directory, and the <<<lib>>> directory.
  There is a profile for creating a compressed tar file and a zip file containing these directories.

  To create a deploy distribution including the MySQL 5.1 driver, run

---
mvn site package -Pmysql5.1,deploy
---

* {Building a Distribution}

  There are two separate profiles for building Ldappc distributions: a "<<<deploy>>>" profile, which simply
  creates a distribution suitable for running, and a "<<<distribution>>>" profile, which generates the binary
  distribution, the source distribution, and a site distribution, which last just contains the site documentation.

** {Generating the distributions}

  To create the main three distributions, run

---
mvn site package -Pdistribution
---

  If you have already generated the site documentation and have not made source changes,
  you may omit the "<<<site>>>" goal, above.

  The distribution files will be in the target directory, along with the Ldappc jar.
  They will have names of the form <<<ldappc-theVersionNumber-theDistributionType.fileType>>>,
  e.g. <<<ldappc-1.2.0-src.tar.gz>>>, or <<<ldappc-1.2.0-bin.zip>>>.

* {Optional Advanced User Testing Configurations}

  The test configuration files are in the <<<src/test/resources>>> directory.
  The later section, {{{The_Build_Configuration}The Build Configuration}}
  describes these configuration files.

{Directory Structure}

  The following describes the directory structure of the program after the
  initial installation of the source distribution tar file.  Prior to running Maven,
  the <<<lib>>> and <<<target>>> directories do not exist.

  Table key: "..." means that lower level directories are not shown.

  The installation directory, <<<ldappc-theVersionNumber>>>, is not shown to avoid extra indentation.
  Likewise, package paths are compressed.

*------------------------------+----------------------------------------+
| <<Directory>>                | <<Discussion>>                         |
*------------------------------+----------------------------------------+
| <<<bin>>>                    | Runner scripts                         |
*------------------------------+----------------------------------------+
| <<<\ \ \ ldappc.bat>>>       | Windows runner script                  |
*------------------------------+----------------------------------------+
| <<<\ \ \ ldappc.sh>>>        | UN*X runner script                     |
*------------------------------+-----------------------------------------------+
| <<<conf>>>                   | Configuration files: ldappc.xml file template |
*------------------------------+-----------------------------------------------+
| <<<LICENSE.txt>>>            | License file                           |
*------------------------------+----------------------------------------+
| <<<logs>>>                   | Log files                              |
*------------------------------+----------------------------------------------------------------------------------------------------+
| <<<i2mi-repository>>>        | "Remote" repository containing files needed by Ldappc that are not in the Maven central repository |
*------------------------------+----------------------------------------------------------------------------------------------------+
| <<<lib>>>                    | Dependent library files                |
*------------------------------+----------------------------------------+
| <<<logs>>>                   | Log files from running Ldappc          |
*------------------------------+----------------------------------------+
| <<<pom.xml>>>                | Project Object Model (build) file      |
*------------------------------+----------------------------------------+
| <<<README.txt>>>             | Readme file                            |
*------------------------------+----------------------------------------+
| <<<src>>>                    | Container for project sources          |
*------------------------------+----------------------------------------+
| <<<\ \ \ assemble>>>         | Assembly descriptor files              |
*------------------------------+----------------------------------------+
| <<<\ \ \ checkstyle>>>       | Contains checkstyle.xml                |
*------------------------------+----------------------------------------+
| <<<\ \ \ main>>>             | Runtime sources                        |
*------------------------------+----------------------------------------+
| <<<\ \ \ \ \ \ java>>>       | Runtime Java source code               |
*------------------------------+---------------------------------------------------------------------+
| <<<\ \ \ \ \ \ \ \ \ edu/internet2/middleware/ldappc>>> | Primary directory for ldappc source code |
*---------------------------------------------------------+------------------------------------------+
| <<<\ \ \ \ \ \ \ \ \ \ \ \ ldap>>>        | LDAP-related code    |
*-------------------------------------------+----------------------+
| <<<\ \ \ \ \ \ \ \ \ \ \ \ logging>>>     | Log handling code    |
*-------------------------------------------+----------------------+
| <<<\ \ \ \ \ \ \ \ \ \ \ \ schema>>>      | Schema file          |
*-------------------------------------------+----------------------+
| <<<\ \ \ \ \ \ \ \ \ \ \ \ synchronize>>> | Synchronization code |
*-------------------------------------------+----------------------+
| <<<\ \ \ \ \ \ \ \ \ \ \ \ util>>>        | Utility files        |
*-------------------------------------------+---------------------------------+
| <<<\ \ \ \ \ \ resources>>>  | Runtime resource files (ldappc.xsd)          |
*------------------------------+----------------------------------------------+
| <<<\ \ \ site ...>>>         | Raw site documentation source                |
*------------------------------+----------------------------------------------+
| <<<\ \ \ test>>>             | Test sources                                 |
*------------------------------+----------------------------------------------+
| <<<\ \ \ \ \ \ java>>>       | Test Java source code                        |
*------------------------------+--------------------------------------------------------------------+
| <<<\ \ \ \ \ \ \ \ \ edu/internet2/middleware/ldappcTest ...>>>  | Directory for ldappc test code |
*------------------------------+--------------------------------------------------------------------+
| <<<\ \ \ \ \ \ resources>>>  | Test resource files (configuration: ldappc.xml, etc.)              |
*------------------------------+--------------------------------------------------------------------+
| <<<target>>>                 | Top level directory build contents           |
*------------------------------+----------------------------------------------+
| <<<\ \ \ classes>>>          | Compiled code and resources                  |
*------------------------------+----------------------------------------------+
| <<<\ \ \ test-classes>>>     | Compiled test code and resources             |
*------------------------------+------------------------------------------------------+
| <<<\ \ \ ldappc-theVersion-bin.tar.gz>>>  | Binary distribution, compressed tar     |
*-------------------------------------------+-----------------------------------------+
| <<<\ \ \ ldappc-theVersion-bin.zip>>>     | Binary distribution, zip                |
*------------------------------+--------------------------------------------------------+
| <<<\ \ \ ldappc-theVersion-deploy.tar.gz>>> | Deployment distribution, compressed tar |
*---------------------------------------------+-----------------------------------------+
| <<<\ \ \ ldappc-theVersion-deploy.zip>>>    | Deployment distribution, zip          |
*---------------------------------------------+---------------------------------------+
| <<<\ \ \ ldappc-theVersion-site.tar.gz>>> | Site documentation, compressed tar      |
*-------------------------------------------+-----------------------------------------+
| <<<\ \ \ ldappc-theVersion-site.zip>>>    | Site documentation, zip                 |
*-------------------------------------------+-----------------------------------------+
| <<<\ \ \ ldappc-theVersion-src.tar.gz>>>  | Source distribution, compressed tar     |
*-------------------------------------------+-----------------------------------------+
| <<<\ \ \ ldappc-theVersion-src.zip>>>     | Source distribution, zip                |
*-------------------------------------------+-----------------------------------------+
| <<<\ \ \ ldappc-theVersion.jar>>>         | Project jar, containing runtime classes |
*------------------------------+------------------------------------------------------+
| <<<\ \ \ site>>>             | Documentation files, including project reports |
*------------------------------+------------------------------------------------+
| <<<\ \ \ \ \ \ apidoc ...>>> | Javadoc files                                  |
*------------------------------+------------------------------------------------+
| <<<\ \ \ \ \ \ index.html>>> | Main site documentation file                   |
*------------------------------+------------------------------------------------+
| <<<\ \ \ \ \ \ ...>>>        | Additional documentation files                 |
*------------------------------+-------------------------------------------------------+
| <<<testDb>>>                 | Container for test database and configuration         |
*------------------------------+-------------------------------------------------------+
| <<<\ \ \ grouper>>>          | Container for Grouper test database and configuration |
*------------------------------+-------------------------------------------------------+
| <<<\ \ \ \ \ \ hsqldb>>>     | Container for Grouper test database                   |
*------------------------------+-------------------------------------------------------+
| <<<\ \ \ ldap>>>             | Container for LDAP schemas and data                   |
*------------------------------+-------------------------------------------------------+
| <<<\ \ \ signet>>>           | Container for Signet test database and configuration  |
*------------------------------+-------------------------------------------------------+
| <<<\ \ \ \ \ \ hsqldb>>>     | Container for Signet test database                    |
*------------------------------+-------------------------------------------------------+

  Note that there are configuration files in the top level <<<conf>>> directory and
  alse in the <<<src/test/resources>>> directory.  The files in the top level directory
  are used for running Ldappc against your site's data.  The files in the <<<src/test/resources>>>
  directory are used during testing to run against the embedded Grouper and Signet databases,
  and the embedded LDAP directory using data in the <<<testDb>>> directory.

  During the test process, the <<<testDb>>> data will be copied to separate locations in
  the <<<target>>> directory, where the embedded databases and directory will be configured.
  See {{{Configuring_LDAP}Configuring LDAP}} for information on how to use your own
  databases and/or directory for testing.

  At the top level of level of the above structure there are several files.  The one of most interest
  is the <<<pom.xml>>> file used by Maven.  The <<<README.txt>>> file simply refers the reader to this Deployment
  Guide.  The <<<LICENSE.txt>>> file contains the license for this code.  If you check this project out from
  CVS, there may also be Eclipse project files, e.g. <<<.classpath>>> and <<<.project>>> files.

{The Build Configuration}

  A Maven <<<pom.xml>>> (Project Object Model) file is provided along with the source code.
  It describes the requirements to compile the code, execute a set of JUnit test cases,
  and package the project for use or distribution.

  The JUnit test cases are included in a <suite>, called <<edu.internet2.middleware.ldappcTest.AllJUnitTests>>,
  that wraps embedded Grouper and Signet databases, and an embedded Apache Directory Server around
  the tests.

  When running for normal (non-testing) execution, it is the responsibility of the user
  to ensure that the site's Grouper and/or Signet databases and the site's LDAP directory
  are running before executing Ldappc.

  The <<<pom.xml>>> file is set up to allow the user to specify database jar dependencies.
  However, for installation and initial testing, most readers can safely skip reading
  the rest of this section.

{The Schema Files}

  Most of the schema files needed by Ldappc will be provided by the LDAP server that the
  user deploys.  In addition, the user may need to set up the LDAP server to include extra
  object classes and/or attributes such as <eduPerson>, <eduMember> and/or <eduPermission>.
  See the <<<testDb/ldap/ldappc.schema>>> for details.  If you are running against the
  built-in Apache Directory Server this will not be necessary.

{The <<<sources.xml>>> File}

  To use Ldappc, a single <<<sources.xml>>> file is required.
  Therefore, instead of using the separate <<<sources.xml>>> files for
  Grouper and Signet for the test cases, these must be combined into
  a single <<<sources.xml>>> file, such as the one in the <<<conf>>> directory.
  Production users must also create a single <<<sources.xml>>> file to define the
  location and SQL and/or LDAP commands for all data sources.

{Javadoc and Site Documentation}

  Unless you are reading a printed copy of this document, you must already
  have navigated to the Javadoc and do not need read to further in this section.

  The distribution files come with a directory, <<<site>>>, that contains the generated
  Javadoc directories in the <<<site/apidocs>>> directory.  The Maven "<<<site>>>" goal
  can be used to recreate the site documentation from the src directory.  If you just
  wish to generate the Javadoc files, the "<<<javadoc:javadoc>>>" goal can be used instead.

{Testing}

  The distribution includes a set of JUnit test cases.  These test cases
  are dependent on the use of databases built into the deployment package.
  The JUnit test cases are set up for use with the built-in HSQLDB
  database and Apache Directory Server.
  The test data for the built-in Grouper and Signet databases as well as the
  built-in Apache Directory Server are in located in the testDb directory.

  When running the built-in test cases, the test suite
  will automatically start and stop the databases for Grouper
  and Signet and will also rebuild the LDAP server and start and stop it.

  The following figure shows the structure of the built-in test data, where
  <<<testDb>>> is the directory containing the test data.

---
testDb
    grouper
        hsqldb
            grouper.properties
            grouper.script
        grouper-export.xml
    ldap
        kitneduperson.schema
        ldappc.schema
        ldappcSubject.ldif
    signet
        hsqldb
            signet.properties
            signet.script
---

* {Configuring Databases}

  It is not necessary to read this section for installation and initial testing.

  To run using one's own databases, some changes are required.  You will need
  to edit the configuration files for Grouper, Signet, the Subject API, and the
  <<<ldappc.xml>>> and <<<ldappc.properties>>> files.  In particular, there are
  many test-related settings in <<<ldappc.properties>>>.
  The parameters <<<testUseEmbeddedGrouper>>> and <<<testUseEmbeddedSignet>>>
  will need to be set to <<<false>>>.  You will need to start and stop your database
  yourself before and after running the tests.

  The following describes files that will need to be modified in order to use the
  build file on a different port than is built-in.  It also has value as list of
  items that will require setting if the user develops his own Ldappc environment.

  The minimum changes that will be required to the files corresponding the files below are listed below.
  The port 51515 will need to be changed in all the lines below, as will the database names.

  In <<<ldappc/testDb/grouper/conf/grouper.hibernate.properties>>>:

---
hibernate.connection.url = jdbc:hsqldb:hsql://localhost:51515/grouperdb/grouper.hibernate.properties
---

  In the <<<src/test/resources>>> directory in file <<<ldappc.properties>>>:

---
dbUrl=jdbc:hsqldb:hsql://localhost:51515/signetdb
---

  In the <<<src/test/resources/sources.xml>>> file:

---
jdbc:hsqldb:hsql://localhost:51515/grouperdb
jdbc:hsqldb:hsql://localhost:51515/signetdb
---

  Other possible changes to consider are listed below.

  In <<<src/test/resources/grouper.hibernate.properties>>>:

---
hibernate.connection.username = sa
hibernate.connection.password =
---

* {Configuring LDAP}

  If you use an external LDAP for testing, the <<<ldappc.schema>>> and <<<kitneduperson.schema>>>
  files in the <<<testDb/ldap>>> directory must be added to the LDAP configuration before starting it.
  For OpenLDAP, this is done by adding a line similar to the following one
  to the <<<slapd.conf>>> file:

---
include yourInstallationDirectory/testDb/ldap/ldappc.schema
include yourInstallationDirectory/testDb/ldap/kitneduperson.schema
---

  For efficient use of the LDAP directory, it is recommed that at least the following
  entries are indexed when setting up the ldap server.

---
index   objectClass           eq
index   uid                   pres,eq
index   cn                    pres,eq,sub
index   sn                    pres,eq,sub
index   kitnEduPersonRegId    eq
index   hasMember             eq
index   member                eq
index   isMemberOf            eq
index   eduPersonEntitlement  eq
---

  If one uses "uniqueMember" instead of "member" in the ldappc.xml file, then one would
  want to replace "member" above with "uniqueMember".

  You will also need to add the contents of <<<testDb/ldap/ldappcSubject.ldif>>> to your directory.
  If you have not added the top-level domain object, add that first. Note that the files in
  the <<<testDb>>> directory are used for actual testing, so if you modify them, the built-in
  unit tests may fail.

  You will also need to start and stop the directory server yourself before and after
  running the tests.  To prevent the embedded directory server from being started, the
  parameter <<<useEmbeddedLdap>>> in <<<src/test/resources/ldappc.properties>>> must be set
  to <<<false>>>.

** {Setting up the LDAP Directory Test Data Content}

  To set up the LDAP directory with the data needed for testing the
  distribution, change to the test data directory and execute a
  command to add the data to the LDAP directory as follows.

---
cd yourInstallationDirectory/testDb/ldap
ldapadd -x -D "yourSecurityPrincipal" -w "yourRootPW" -f ldappcSubject.ldif
---

  In the above command, "yourSecurityPrincipal" represents the value used in the
  security principal setting in the <<<ldapp.xml>>> file.

  In the above command, "yourRootPW" represents the password used in the
  security credential setting in the <<<ldapp.xml>>> file.  Make sure that the
  same value is used in the <<<ldapp.xml>>> file, in the above command, and in
  the configuration file for your LDAP server.

  The user may wish to make additional changes to the <<<ldappcSubject.ldif>>> and
  the <<<ldappc.xml>>> files; however, until the initial set up of the distribution
  has been verified, such changes should be kept to a minimum.
