#
# Global Properties for Signet build_QS.xml
# $Header: /home/hagleyj/i2mi/signet/buildSignet_QS.properties,v 1.4 2007-10-24 21:48:10 ddonn Exp $
#
# Dependencies
#
# - Several properties in this file depend on property "signet_version" being
#     previously defined (see config/signet.properties).
#
# - The Signet build depends on two external projects: i2mi-common and subject
#     (see i2mi_common_lib.dir and subjectApi_lib.dir below).
#

#
# These are the "sources" from which the Signet distribution is built.
# They include the Java source files, various configuration files, and
# 3rd-party libraries (JARs).
#
source_config.dir=config
source_java.dir=src
source_lib.dir=lib
source_sql.dir=sql
source_util.dir=util
source.demo.dir=demo
classes.dir=classes
source.hibernate.ext=*.hbm.xml
# Signet depends on two external projects: i2mi-common and subject. Set the
# following properties to point to _your_ local copy of these libraries.
i2mi_common_lib.dir=${source_lib.dir}/i2mi-common
# SubjectAPI JAR is in Signet CVS for now
#subjectApi_lib.dir=../subject_latest/dist
# The following defines the JavaDoc Overview file for Signet
source_javadoc_oview=${source_java.dir}/edu/internet2/middleware/signet/signet_overview.html

# WebApp "source" files
dirname.images=images
dirname.jsp=jsp
dirname.metainf=META-INF
dirname.scripts=scripts
dirname.styles=styles
dirname.tiles=tiles
source_webapp.dir=web
source_webapp.config.dir=${source_webapp.dir}/config
source_webapp.images.dir=${source_webapp.dir}/${dirname.images}
source_webapp.jsp.dir=${source_webapp.dir}/${dirname.jsp}
source_webapp.metainf.dir=${source_webapp.dir}/${dirname.metainf}
source_webapp.scripts.dir=${source_webapp.dir}/${dirname.scripts}
source_webapp.styles.dir=${source_webapp.dir}/${dirname.styles}
source_webapp.tiles.dir=${source_webapp.dir}/${dirname.tiles}

#
# These properties control option settings on the Javac compiler when it
# is invoked using the <javac> task.
# compile.debug        Should compilation include the debug option?
# compile.deprecation  Should compilation include the deprecation option?
# compile.optimize     Should compilation include the optimize option?
# compile.other.args   Compiler options not directly supported by Ant
#
compile.debug=false
compile.deprecation=true
compile.optimize=true
# The following property provides the ability to specify non-standard
# compiler options in signet/build.xml.
#compile.other.args=-Xlint:unchecked -Xstdout "signet_compile.txt"

#
# Destination directories for various build tasks (e.g. compile, copy, Tomcat, etc.)
#
# dist.dir.root - the parent dir of distribution, do not use relative path (e.g. ".")
# dist.dir.name - the directory name of the distribution directory (relative path)
# dist.dir - absolute path of the distribution directory
dist.dir.root=${user.home}
dist.dir.prefix=qs
dist.dir.name=${signet_basename}-${dist.dir.prefix}-${signet_version}
dist.dir=${dist.dir.root}/${dist.dir.name}
# Apache Tomcat Installer properties
# This is where the Apache Tomcat ZIP installer gets unzipped to
tomcat.unzip.dir=${dist.dir}
# This is where the Apache Tomcat ZIP installer is located (used to create demo)
tomcat.installer.file=${source.demo.dir}/apache-tomcat-5.5.16.zip
# The Tomcat ZIP top-level dir should be renamed (remove version number) to
# make the rest of the build and runtime oblivious to the Tomcat version
tomcat.installer.topdir=${dist.dir}/apache-tomcat-5.5.16
tomcat.renamed.topdir=${dist.dir}/tomcat
dist_webapp.root.dir=${tomcat.renamed.topdir}/webapps
##dist_webapp.dir=${dist_webapp.root.dir}/${signet_basename}
dist.util.dir=${dist.dir}/util
dist.demo.dir=${dist.dir}/demo
dist_doc.dir=${dist.util.dir}/doc
dist_sql.dir=${dist.util.dir}/sql
dist_config.dir=${dist.util.dir}/config
dist_lib.dir=${dist.util.dir}/lib

#
# Signet JAR, WAR files (build outputs)
#
signet.jar.api.filename=${signet_basename}-api-${signet_version}.jar
signet.jar.api=${dist_lib.dir}/${signet.jar.api.filename}
signet.jar.ui.filename=${signet_basename}-ui-${signet_version}.jar
signet.jar.ui=${dist_lib.dir}/${signet.jar.ui.filename}
signet.jar.ui.files=edu/internet2/middleware/signet/ui/**
signet.jar.util.filename=${signet_basename}-util-${signet_version}.jar
signet.jar.util=${dist_lib.dir}/${signet.jar.util.filename}
signet.jar.util.files=edu/internet2/middleware/signet/util/**
signet.war=${dist_webapp.root.dir}/${signet_basename}.war

#
# DOS/Windows command-line CLASSPATH configuration for Signet Utilities.
# Ant build target "config_util_run_script" substitutes the correct jar file
# names in file ${dist.util.dir}/dist-signet_cp.bat.
#
signet.jar.api.token=@CFG_UTIL_API_TOKEN@
signet.jar.ui.token=@CFG_UTIL_UI_TOKEN@
signet.jar.util.token=@CFG_UTIL_UTIL_TOKEN@

#
# Zipped/archived distribution files (entire contents of ${dist.dir})
# If either signet.zipfile, signet.gzipfile or both are defined (i.e. not commented)
# then the production|deploy build-target will generate these files.
#
signet.archive.basename=${signet_basename}-${dist.dir.prefix}-${signet_version}
signet.zipfile=${dist.dir.root}/${signet.archive.basename}.zip
signet.gzipfile=${dist.dir.root}/${signet.archive.basename}.tgz

#
# Zipped/archived JavaDocs
# If either signet.javadoc.zipfile, signet.javadoc.gzipfile or both are defined
# (i.e. not commented) then the  build-target will generate these files.
#
signet.javadoc.zipfile=${dist_doc.dir}/${signet.archive.basename}_JavaDoc.zip
signet.javadoc.gzipfile=${dist_doc.dir}/${signet.archive.basename}_JavaDoc.tgz

#
# SignetXml definitions - Used for building SignetXml
# Also see signet.jar.xmladapter.token and signet.jar.xmlbind.token, above
#
schema.dir=schemas
schema.filename=SignetSchema.xsd
src.stubs.dir=${basedir}/util/SignetXml/xmlstubs
xml.bindings.relpath=edu/internet2/middleware/signet/util/xml/binder
xml.bindings.fullpath=${source_java.dir}/${xml.bindings.relpath}
xml.bindings.package=edu.internet2.middleware.signet.util.xml.binder
signet.jar.xmlbind.filename=${signet_basename}-xb-${signet_version}.jar
signet.jar.xmlbind=${dist_lib.dir}/${signet.jar.xmlbind.filename}
xml.adapter.package=edu.internet2.middleware.signet.util.xml.adapter
signet.jar.xmladapt.filename=${signet_basename}-xa-${signet_version}.jar
signet.jar.xmladapt=${dist_lib.dir}/${signet.jar.xmladapt.filename}
xml.adapter.relpath=edu/internet2/middleware/signet/util/xml/adapter
xml.adapter.srcpath=${source_java.dir}/${xml.adapter.relpath}
signetxml.main.relpath=edu/internet2/middleware/signet/util/xml
signetxml.main.path=edu.internet2.middleware.signet.util.xml
signetxml.main.class=SignetXml
# signetxml.namespace.token=@NAMESPACETOKEN@
signetxml.namespace.value=http://www.internet2.edu/signet

#
# Hibernate/DB and SubjectAPI/DB configuration parameters.
# These values are used to substitute the @DB_*@ properties in hibernate.cfg.xml
# and sources.xml during a Signet build. An Ant target will check for the existence
# of each property, below, and will substitute the corresponding @DB_*@ with
# the property's value. Undefined (e.g. commented) properties will not be substituted
# nor will they 'break' the build. However, the Signet runtime may not work unless
# your DB login happens to be @DB_USERNAME@/@DB_PASSWORD@.
# Some examples...
#	To configure hibernate for a local instance of Hypersonic SQL:
#		db.cfg.dialect=org.hibernate.dialect.HSQLDialect
#		db.cfg.driver=org.hsqldb.jdbcDriver
#		db.cfg.driver.subjapi=org.hsqldb.jdbcDriver
#		db.cfg.url=jdbc:hsqldb:file:/Projects/Signet_Demo/data/SignetQsDb
#		db.cfg.url.subjapi=jdbc:hsqldb:file:/Projects/Signet_Demo/data/SignetQsDb
#		db.cfg.username=sa
#		db.cfg.username.subjapi=sa
#		db.cfg.password=
#		db.cfg.password.subjapi=
#	To configure hibernate for a local instance of PostgreSQL:
#		db.cfg.dialect=org.hibernate.dialect.PostgreSQLDialect
#		db.cfg.driver=org.postgresql.Driver
#		db.cfg.driver.subjapi=org.postgresql.Driver
#		db.cfg.url=jdbc:postgresql://localhost:5432/signet_db
#		db.cfg.url.subjapi=jdbc:postgresql://localhost:5432/signet_db
#		db.cfg.username=adent
#		db.cfg.username.subjapi=adent
#		db.cfg.password=mostlyharmless
#		db.cfg.password.subjapi=mostlyharmless
#
# Note that the substitutions are performed on the ${dist_config.dir} files, not
# the original ${source_config.dir} files.
#
# Also note that the values below assume that the same values should be used
# for both hibernate.cfg.xml and sources.xml. If the SubjectAPI tables are in
# a separate database (from the Signet persistent store), then modify the values
# for *.subjapi, below, as appropriate.
#
db.cfg.dialect.token=@DB_DIALECT@
db.cfg.dialect=org.hibernate.dialect.HSQLDialect

db.cfg.driver.token=@DB_DRIVER@
db.cfg.driver=org.hsqldb.jdbcDriver
db.cfg.driver.subjapi=org.hsqldb.jdbcDriver

db.cfg.url.token=@DB_URL@
#db.cfg.url.prefix=jdbc:hsqldb:file:
#db.cfg.url.filename=${dist.dir}/data/SignetQsDb
#db.cfg.url.subjapi.prefix=jdbc:hsqldb:file:
#db.cfg.url.subjapi.filename=${dist.dir}/data/SignetQsDb
db.cfg.url.prefix=jdbc:hsqldb:hsql:
db.cfg.url.filename=//localhost:9001/SignetQsDb
db.cfg.url.subjapi.prefix=jdbc:hsqldb:hsql:
db.cfg.url.subjapi.filename=//localhost:9001/SignetQsDb

db.cfg.username.token=@DB_USERNAME@
db.cfg.username=sa
db.cfg.username.subjapi=sa

db.cfg.password.token=@DB_PASSWORD@
db.cfg.password=
db.cfg.password.subjapi=

#
# HypersonicSQL configuration
#
hsqldb.jar.file=${dist_lib.dir}/hsqldb.jar
hsqldb.rc.arg=--rcfile
hsqldb.rc.file=${dist_config.dir}/sqltool.rc
hsqldb.rc.target=localhost-sa
hsqldb.ddl=${source_sql.dir}/hsql.sql

#
# Demo DB Sample Data initialization
#
TreeXmlLoader.dir=${dist.util.dir}/TreeXmlLoader
TreeXmlLoader.arg=demo_tree.xml

SubsystemXmlLoader.dir=${dist.util.dir}/SubsystemXmlLoader
SubsystemXmlLoader.arg.1=demo_biox_subsystem.xml
SubsystemXmlLoader.arg.2=demo_library_subsystem.xml

SubjectFileLoader.dir=${dist.util.dir}/SubjectFileLoader
SubjectFileLoader.arg=demo_subject.txt

SignetProxy.dir=${dist.util.dir}/SignetProxy
SignetProxy.arg=grant kmart

#
# Final output filename
#
signet.demo.filename.base=${signet_basename}
