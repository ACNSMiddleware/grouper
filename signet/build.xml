<?xml version="1.0"?>
<project
	name="Signet"
	default="create-dist"
	basedir=".">
	
	<!-- Version number -->
	<property name="signet_version" value="0.6"/>
	
	
	<!-- These are the "sources" from which we'll build our Signet
	     distribution. They include the Java files we've written ourselves,
	     various configuration files that are used by Signet and its subsidiary
	     components, and pre-compiled libraries provided by others.
	-->
	<property name="source_java.dir"      location="src"/>
	<property name="source_lib.dir"       location="lib"/>
	<property name="source_sql.dir"       location="sql"/>
	<property name="source_config.dir"    location="config"/>
	
	<!-- We'll need a temporary workspace to build intermediate files in -->
	<property name="work.dir"          location="work"/>
	<property name="work_classes.dir"  location="${work.dir}/classes"/>
	<property name="work_lib.dir"      location="${work.dir}/lib"/>
	
	<!-- Here's where our distribution will go, in it's pre-zipped form: -->
	<property name="dist.dir"           location="dist"/>
    <property name="toplevel.dir"       value="${dist.dir}/signet-${signet_version}"/>
	<property name="dist_java.dir"      location="${toplevel.dir}/src"/>
	<property name="dist_doc.dir"       location="${toplevel.dir}/doc"/>
	<property name="dist_sql.dir"       location="${toplevel.dir}/sql"/>
	<property name="dist_config.dir"    location="${toplevel.dir}/config"/>
	<property name="dist_lib.dir"       location="${toplevel.dir}/lib"/>
	
	<!-- These are the names of the various archive files we'll be generating.
	     There should be no overlap between their contents.
	-->
	<property name="signet_jarfile"       value="signet-${signet_version}.jar"/>
	<property name="signet_ui_jarfile"    value="signet-ui-${signet_version}.jar"/>
	<property name="signet_util_jarfile"  value="signet-util-${signet_version}.jar"/>
	
	<property name="zipfile"  value="signet-${signet_version}-bin.zip"/>
	<property name="tarfile"  value="signet-${signet_version}-bin.tar"/>
	<property name="gzipfile" value="signet-${signet_version}-bin.tar.gz"/>
	
	<!-- Set up properties containing important project directories -->
	<property name="data.dir"     location="data"/>
	
	<!-- Set up the class path for compilation -->
	<path id="source.class.path">
		<!-- Include jars in the project library directory -->
		<fileset dir="${source_lib.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>

	<!-- Create our temporary-workspace and distribution-layout subdirectories
	     and copy resources into them -->
	<target name="prepare" description="Sets up build structures">
		<mkdir dir="${work.dir}"/>
		<mkdir dir="${work_lib.dir}"/>
		<mkdir dir="${work_classes.dir}"/>
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${dist_doc.dir}"/>
		<mkdir dir="${dist_config.dir}"/>
		<mkdir dir="${dist_lib.dir}"/>
	</target>

	<!-- Compile the java source of the project -->
	<target
		name="compile"
		depends="prepare"
		description="Compiles all Java classes">
		
		<javac
			srcdir="${source_java.dir}"
			destdir="${work_classes.dir}"
			debug="on"
			optimize="off"
			deprecation="on">
			<classpath refid="source.class.path"/>
		</javac>
		
		<!-- Copy the Hibernate mapping-files into the work-classes directory.
		-->
		<copy todir="${work_classes.dir}">
			<fileset dir="${source_java.dir}">
				<include name="**/*.hbm.xml"/>
			</fileset>
		</copy>
		
		<!-- Build the Signet API jar. -->
		
		<jar destfile="${work_lib.dir}/${signet_jarfile}" >
			<fileset dir="${work_classes.dir}">
				<include name="**/*.class"/>
				<include name="**/*.hbm.xml"/>
				<exclude name="edu/internet2/middleware/signet/ui/*"/>
				<exclude name="edu/internet2/middleware/signet/util/*"/>
			</fileset>
		</jar>
		
		<!-- Delete all the files that we just jarred up. -->
		
		<delete
			dir="${work_classes.dir}/edu/internet2/middleware/signet/choice"/>
		<delete
			dir="${work_classes.dir}/edu/internet2/middleware/signet/tree"/>
		
		<delete>
			<fileset dir="${work_classes.dir}">
				<include name="**/*.class"/>
				<include name="**/*.hbm.xml"/>
				<exclude name="edu/internet2/middleware/signet/ui/*"/>
				<exclude name="edu/internet2/middleware/signet/util/*"/>
			</fileset>
		</delete>
		
		<!-- Build the Signet UI jar -->

		<jar destfile="${work_lib.dir}/${signet_ui_jarfile}" >
			<fileset dir="${work_classes.dir}">
				<include name="edu/internet2/middleware/signet/ui/*.class"/>
			</fileset>
		</jar>
		
		<!-- Delete all the files we just jarred up. -->
		
		<delete dir="${work_classes.dir}/edu/internet2/middleware/signet/ui"/>

		<jar destfile="${work_lib.dir}/${signet_util_jarfile}" >
			<fileset dir="${work_classes.dir}">
				<include name="edu/internet2/middleware/signet/util/*.class"/>
			</fileset>
		</jar>
		
		<!-- Delete all the files we just jarred up. -->
		
		<delete dir="${work_classes.dir}/edu/internet2/middleware/signet/util"/>

	</target>
	
	<!-- Removes various generated files -->
	<target name="clean" description="Removes various generated files">
		<delete dir="${work.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<!-- Generate Javadoc for the source files -->
	<target name="javadoc">
		<javadoc packagenames="edu.internet2.middleware.signet, edu.internet2.middleware.signet.choice, edu.internet2.middleware.signet.tree, edu.internet2.middleware.subject"
			destdir="${dist_doc.dir}"
			access="public"
			use="true"
			breakiterator="true"
			notree="false"
			nonavbar="false"
			noindex="false"
			splitindex="true"
			author="true"
			version="true"
			nodeprecatedlist="false"
			nodeprecated="false"
			sourcepath="src"
			classpathref="source.class.path" /> 
	</target>

	<target name="create-dist" depends="clean, compile, javadoc">
		<copy todir="${toplevel.dir}">
			<fileset dir=".">
				<include name="README" />
				<include name="LICENSE" />
			</fileset>
		</copy>
		
		<copy todir="${dist_java.dir}">
			<fileset dir="${source_java.dir}">
				<include name="**/*" />
			</fileset>
		</copy>
		
		<copy todir="${dist_config.dir}">
			<fileset dir="${source_config.dir}">
				<include name="**/*" />
			</fileset>
		</copy>
		
		<copy todir="${dist_sql.dir}">
			<fileset dir="${source_sql.dir}">
				<include name="**/*" />
			</fileset>
		</copy>

		<copy todir="${dist_lib.dir}">
			<fileset dir="${source_lib.dir}">
				<include name="**/*" />
			</fileset>
			<fileset dir="${work_lib.dir}">
				<include name="**/*" />
			</fileset>
		</copy>

		<ant dir="web"  target="build" inheritAll="true" />
		<ant dir="util" target="build" inheritAll="true" />
		
		<zip destfile="${zipfile}">
			<fileset dir="${dist.dir}">
				<include name="**/*" />
			</fileset>
		</zip>
		
		<tar destfile="${tarfile}" longfile="gnu">
			<tarfileset dir="${dist.dir}">
			<include name="**/*" />
			</tarfileset>
		</tar>
		<gzip src="${tarfile}" destfile="${gzipfile}"/>
		<delete file="${tarfile}"/>
	</target>
	
</project>

