<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /home/hagleyj/i2mi/signet/build.xml,v 1.67 2007-10-19 23:27:11 ddonn Exp $ -->

<project name="Signet" default="production" basedir="." >

	<!-- Signet version number and signet basename. Import this before all others! -->
	<property file="config/signet.properties" />

	<!--
		Custom Properties (i.e. "Doppleganger")
		Don't include the following line if there are no alternate sources, libs, etc.
		NOTE: if you intend to use this file to override any of the mandatory
		properties (defined in buildSignet.properties), you must import the
		overrides FIRST. Ant does not assign new values if a property is
		already defined: your override must be defined BEFORE the default value
		is defined.
	-->
	<!--
	<property file="/Projects/signet/buildCustom.properties" />
	-->

	<!--
		Global Properties
		This file contains required properties.
	-->
	<property file="buildSignet.properties" />

	<!--
		Tomcat-specific Ant build tasks. Remove/replace, as desired, for your
		environment. Note that this import is dependent on properties set in
		buildSignet.properties.
		Note: If your Ant build produces error messages similar to:
			...signetBuildTomcatDefs.xml:32: taskdef class org.apache.catalina.ant.DeployTask cannot be found
		then you need a copy of catalina-ant.jar in Ant's lib directory. For example
			cp /Tomcat/server/lib/catalina-ant.jar /ant/lib
		Alternatively, if you don't need to have Ant deploy the newly built
		Signet to a running instance of Tomcat, you can comment out this line.
	-->
	<!-- <import file="signetBuildTomcatDefs.xml" /> -->


	<!-- 
		SignetXml properties and taskdefs
		This import depends on values defined in buildSignet.properties.
	-->
	<import file="buildSignetXmlDefs.xml" />


	<!-- ======================== Public Targets =========================== -->


	<!-- =============== target: production =============== -->
	<target name="production"
			description="Signet production build (default Ant target)"
			depends="clean, signetXml, compile, assemble_prod, deploy_prod" >
		<tstamp/>
	</target>


	<!-- =============== target: development ============== -->
	<target name="development"
			description="Signet development build"
			depends="clean, signetXml, compile, assemble_dev, deploy_dev">
		<tstamp/>
	</target>


	<!-- =============== target: clean ==================== -->
	<target name="clean"
			description="Clean out (delete) previous build products including Java classes and the signet dist directory" 
			depends="delete_classes, clean_distdirs" >
	</target>


	<!-- =============== target: compile ================== -->
	<target name="compile"
			description="Compile .java files, copy Hibernate mapping files"
			depends="create_altlocal_java_dir_no, create_classpath" >

		<tstamp/>

		<mkdir dir="${classes.dir}"/>

		<javac destdir="${classes.dir}"
				classpathref="source.class.path"
				debug="${compile.debug}"
				optimize="${compile.optimize}"
				deprecation="${compile.deprecation}" >
			<src path="${source_java.dir}" />
			<src path="${custom.java.dir}" />
			<!-- following line specifies non-standard compile options -->
			<!-- <compilerarg line="${compile.other.args}" /> -->
		</javac>

		<copy todir="${classes.dir}" > 
			<fileset dir="${source_java.dir}" id="id" >
				<include name="**/${source.hibernate.ext}" />
			</fileset>
		</copy>
	</target>


	<!-- =============== target: assemble_prod ============= -->
	<target name="assemble_prod"
			description="Assemble production output products in preparation for deployment"
			depends="clean, compile, assemble_all, create_signet_jars, javadoc" >
	</target>


	<!-- =============== target: assemble_dev ============= -->
	<target name="assemble_dev"
			description="Assemble development output products in preparation for deployment"
			depends="compile, assemble_all, create_signet_jars" >
	</target>


	<!-- =============== target: deploy_prod ============== -->
	<target name="deploy_prod"
			description="Deploy utilities and web app for Production build"
			depends="assemble_prod, create_webapp" >
	</target>


	<!-- =============== target: deploy_dev =============== -->
	<target name="deploy_dev"
			description="Deploy utilities and web app for Development build"
			depends="assemble_dev, create_webapp, deploy_to_tomcat" >
	</target>


    <!-- =============== target: javadoc =================== -->
	<target name="javadoc"
			description="Create the Signet JavaDocs plus zip and gzip archives"
			depends="create_sourcepath, create_classpath" >
		<path id="javadoc.src.path">
			<pathelement location="${source_java.dir}" />
<!-- Uncomment this if you want to add your Doppleganger source JavaDocs
			<pathelement location="${custom.java.dir}" />
-->
		</path>
		<javadoc packagenames="edu.internet2.middleware.signet, 
				edu.internet2.middleware.signet.choice, 
				edu.internet2.middleware.signet.dbpersist, 
				edu.internet2.middleware.signet.reconcile, 
				edu.internet2.middleware.signet.resource, 
				edu.internet2.middleware.signet.subjsrc, 
				edu.internet2.middleware.signet.tree, 
				edu.internet2.middleware.signet.util,
				${xml.bindings.package},
				${xml.adapter.package}"
			sourcepathref="javadoc.src.path"
			classpathref="source.class.path"
			destdir="${dist_doc.dir}"
			access="package"
			use="true"
			breakiterator="true"
			notree="false"
			nonavbar="false"
			noindex="false"
			overview="${source_javadoc_oview}"
			splitindex="true"
			author="true"
			version="true"
			nodeprecatedlist="false"
			nodeprecated="false" />

		<delete file="${signet.javadoc.zipfile}" />
		<delete file="${signet.javadoc.gzipfile}" />

		<zip destfile="${signet.javadoc.zipfile}"
				encoding="UTF8"
				duplicate="fail" >
			<fileset dir="${dist_doc.dir}" >
				<include name="*/**" />
				<exclude name="${signet.javadoc.zipfile}" />
				<exclude name="${signet.javadoc.gzipfile}" />
			</fileset>
		</zip>

		<tar destfile="${signet.javadoc.gzipfile}"
				longfile="gnu"
				compression="gzip" >
			<tarfileset dir="${dist_doc.dir}" mode="755" >
				<include name="*/**" />
				<exclude name="${signet.javadoc.zipfile}" />
				<exclude name="${signet.javadoc.gzipfile}" />
			</tarfileset>
		</tar>
	</target>


    <!-- =============== target: create_src_distrib =================== -->
	<target name="create_src_distrib"
			description="Create a source distribution zip and/or gzip"
			depends="delete_src_distrib, create_src_zip_yes, create_src_gzip_yes" >
	</target>


	<!-- ======================== target: signetXml ====================== -->
	<target name="signetXml"
			description="Create SignetXml libraries: SignetXmlXa.jar and SignetXmlXb.jar."
			depends="signetxml_clean, schema_gen, bindings_gen" >
		<tstamp/>
	</target>

	<!-- =============== target: schema_gen ============================= -->
	<target name="schema_gen"
			description="Generate XML Schema from stub source files"
			depends="delete_schemas" >
		<tstamp/>
		<schemagen
				srcdir="${src.stubs.dir}"
				includes="**/*.java"
				destdir="${schema.dir}"
				classpath="${java.class.path}" >
			<schema namespace="${signetxml.namespace.value}" file="${schema.filename}" /> 
		</schemagen>
		<!-- episode="${schema.dir}/${episode.filename}" -->
	</target>

	<!-- ================= target: bindings_gen ========================= -->
	<target name="bindings_gen"
			description="Generate the XML binding classes from the Schema file"
			depends="delete_xmlbinds" >
		<tstamp/>
		<xjc schema="${schema.dir}/${schema.filename}"
				destdir="${source_java.dir}"
				package="${xml.bindings.package}" >
			<produces dir="${xml.bindings.fullpath}"
				includes="**/*.java" />
		</xjc>
	</target>

	<!-- =============== target: signetxml_clean ======================= -->
	<target name="signetxml_clean"
			description="Delete any previous build products" 
			depends="signetxml_delete_jars, delete_schemas, delete_xmlbinds" >
		<tstamp/>
	</target>

	<!-- =============== target: signetxml_create_jars ================== -->
    <target name="signetxml_create_jars"
			description="Create Adapter and Binder jars"
			depends="schema_gen, bindings_gen, compile, create_xml_binder_jar, create_xml_adapter_jar" >
    </target>


	<!-- - - - - - - - - - - Private, Utility Targets - - - - - - - - - - - -->


    <!-- - - - - - - - - target: copy_readmes - -->
	<target name="copy_readmes" >
		<copy todir="${dist.util.dir}" >
			<fileset dir="." >
				<include name="README*" />
			</fileset>
		</copy>
	</target>


	<!-- Note: the "*_yes" and "*_no" targets below determine whether the
	     optional alt_local_* properties are previously defined. If not defined,
	     they are given empty values so that Ant doesn't choke. -->


    <!-- - - - - - - - - target: create_altlocal_src_fileset_no - -->
    <target name="create_altlocal_java_dir_no"
			unless="custom.java.dir" >
		<property name="custom.java.dir" value="" />
    </target>


    <!-- - - - - - - - - target: create_sourcepath - - - -  -->
    <target name="create_sourcepath"
    		depends="create_source_src_fileset, create_altlocal_src_fileset_yes">
		<path id="source.path" >
			<fileset refid="source.src.fileset" />
			<fileset refid="custom.src.fileset" />
		</path>
    </target>


    <!-- - - - - - - - - target: create_source_src_fileset -  -->
    <target name="create_source_src_fileset">
		<fileset dir="${source_java.dir}"
				id="source.src.fileset" >
		    <include name="**/*.java"/>
		</fileset>
    </target>


    <!-- - - - - - - - - target: create_altlocal_src_fileset_yes - -->
    <target name="create_altlocal_src_fileset_yes"
			depends="create_altlocal_src_fileset_no"
			if="custom.java.dir" >
		<fileset id="custom.src.fileset"
			dir="${custom.java.dir}" >
			<include name="**/*.java" />
		</fileset>
    </target>


    <!-- - - - - - - - - target: create_altlocal_src_fileset_no - -->
    <target name="create_altlocal_src_fileset_no"
			unless="custom.java.dir" >
		<fileset id="custom.src.fileset"
			dir="" >
			<include name="" />
		</fileset>
    </target>


	<!-- - - - - - - - -  target: create_classpath - - - -->
	<target name="create_classpath"
			depends="create_lib_fileset, create_altlib_fileset_yes" >
		<path id="source.class.path" >
			<fileset refid="source.lib.fileset" />
			<fileset refid="i2mi_common_lib.fileset" />
<!-- SubjectAPI JAR is in Signet CVS for now
			<fileset refid="subjectApi_lib.fileset" />
-->
			<fileset refid="custom.lib.fileset" />
		</path>
	</target>


	<!-- - - - - - - - - target: assemble_all - - - - - - - - - -->
	<target name="assemble_all"
			depends="create_distdirs, copy_readmes, copy_config_files, copy_libs, copy_sql, copy_util_scripts, config_util_run_script, configure_hibernate" >
	</target>


	<!-- - - - - - - - - target: copy_libs - - - - - - - - - -->
	<target name="copy_libs"
			depends="create_lib_fileset, create_altlib_fileset_yes" >
		<copy todir="${dist_lib.dir}" >
			<fileset refid="source.lib.fileset" />
			<fileset dir="${source_lib.dir}" includes="*license*" />
			<fileset refid="i2mi_common_lib.fileset" />
			<fileset dir="${i2mi_common_lib.dir}" includes="*license*" />
			<fileset refid="custom.lib.fileset" />
		</copy>
	</target>


	<!-- - - - - - - - - target: create_lib_fileset - - -->
	<target name="create_lib_fileset"
		depends="create_lib_main_fileset, create_lib_i2mi_common_fileset">
	</target>

	<!-- - - - - - - - - target: create_lib_main_fileset - - - - - - - - - -->
	<target name="create_lib_main_fileset">
		<fileset id="source.lib.fileset"
			dir="${source_lib.dir}" >
		<include name="*.jar" />
		</fileset>
	</target>
	
	<!-- - - - - - - - - target: create_lib_i2mi_common_fileset - - - - - -->
	<target name="create_lib_i2mi_common_fileset">
		<fileset id="i2mi_common_lib.fileset"
			dir="${i2mi_common_lib.dir}" >
		<include name="*.jar" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: create_altlib_fileset_yes - -->
	<target name="create_altlib_fileset_yes"
			depends="create_altlib_fileset_no"
			if="custom.lib.dir" >
		<fileset id="custom.lib.fileset"
			dir="${custom.lib.dir}" >
			<include name="**/*.jar" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: create_altlib_fileset_no - -->
	<target name="create_altlib_fileset_no"
			unless="custom.lib.dir" >
		<fileset id="custom.lib.fileset"
			dir="">
			<include name=""/>
		</fileset>
	</target>

	
	<!-- - - - - - - - - target: create_distdirs - - - - -->
	<target name="create_distdirs" >
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${dist_config.dir}" />
		<mkdir dir="${dist_doc.dir}" />
		<mkdir dir="${dist_lib.dir}" />
		<mkdir dir="${dist_sql.dir}" />
		<mkdir dir="${dist_webapp.dir}" />
	</target>

	
	<!-- - - - - - - - - target: clean_distdirs - - - - -->
	<target name="clean_distdirs" >
		<delete dir="${dist.dir}" includeemptydirs="true" quiet="true" />
	</target>

	
	<!-- - - - - - - - - target: copy_sql - - - - - - - - - - -->
	<target name="copy_sql"
			depends="create_sql_fileset, create_altsql_fileset_yes" >
		<copy todir="${dist_sql.dir}" >
			<fileset refid="source.sql.fileset" />
			<fileset refid="custom.sql.fileset" />
		</copy>
	</target>


	<!-- - - - - - - - - target: create_sql_fileset - - - - -->
	<target name="create_sql_fileset" >
		<fileset id="source.sql.fileset"
			dir="${source_sql.dir}" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: create_altsql_fileset_yes - -->
	<target name="create_altsql_fileset_yes"
			depends="create_altsql_fileset_no"
			if="custom.sql.dir" >
		<fileset id="custom.sql.fileset"
			dir="${custom.sql.dir}" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: create_altsql_fileset_no - -->
	<target name="create_altsql_fileset_no"
			unless="custom.sql.dir" >
		<fileset id="custom.sql.fileset"
			dir="" >
			<include name="" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_config_files - - - -->
	<target name="copy_config_files"
			depends="create_config_fileset, create_altconfig_fileset_yes" >
		<copy todir="${dist_config.dir}" >
			<fileset refid="source.config.fileset" />
			<fileset refid="custom.config.fileset" />
		</copy>
	</target>


	<!-- - - - - - - - - target: create_config_fileset - - - -->
	<target name="create_config_fileset" >
		<fileset id="source.config.fileset" 
				dir="${source_config.dir}" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: create_altconfig_fileset_yes - -->
	<target name="create_altconfig_fileset_yes"
			depends="create_altconfig_fileset_no"
			if="custom.config.dir" >
		<fileset id="custom.config.fileset" 
				dir="${custom.config.dir}" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: create_altconfig_fileset_no - -->
	<target name="create_altconfig_fileset_no"
			unless="custom.config.dir" >
		<fileset id="custom.config.fileset" 
				dir="" >
			<include name="" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_util_scripts - -->
	<target name="copy_util_scripts" 
			depends="create_distdirs" >
		<copy todir="${dist.util.dir}" >
			<fileset dir="${source_util.dir}" >
				<include name="AssignmentReconcile/*" />
				<include name="SignetProxy/*" />
				<include name="SubjectFileLoader/*" />
				<include name="SubsystemXmlLoader/*" />
				<include name="TreeXmlLoader/*" />
				<include name="SignetXml/*" />
				<exclude name="SignetXml/xmlstubs" />
				<include name="dist-signet_cp.bat" />
			</fileset>
		</copy>
		<chmod dir="${dist.util.dir}"
				perm="755" >
			<include name="**/*.sh" />
		</chmod>
		<fixcrlf srcdir="${dist.util.dir}" includes="**/*.sh, **/*.bat" />
	</target>


	<!-- - - - - - - - - target: create_signet_jars - -->
	<target name="create_signet_jars" 
			depends="create_signet_api_jar, create_signet_ui_jar, create_signet_util_jar, create_xml_binder_jar, create_xml_adapter_jar" >
	</target>

	<!-- - - - - - - - - target: create_signet_api_jar - -->
	<target name="create_signet_api_jar" >
		<jar destfile="${signet.jar.api}" > 
			<manifest>
				<section name="edu/internet2/middleware/signet" >
				<attribute name="Built-By"                value="${user.name}"/>
				<attribute name="Implementation-Title"    value="${signet_basename}" />
				<attribute name="Implementation-Version"  value="${signet_version}" />
				<attribute name="Implementation-BuildDate" value="${TODAY}" />
				<attribute name="Implementation-Vendor"   value="${signet_vendor}" />
				<attribute name="Implementation-URL"      value="${signet_url}" />
				<attribute name="Dependencies"	value="Standard Java JRE jars, many 3rd-party jars" />
				</section>
			</manifest>
			<fileset dir="${classes.dir}" >
				<exclude name="${signet.jar.ui.files}" />
				<exclude name="${signet.jar.util.files}" />
			</fileset>
		</jar>
	</target>

	<!-- - - - - - - - - target: create_signet_ui_jar - -->
	<target name="create_signet_ui_jar" >
		<jar destfile="${signet.jar.ui}" >
			<manifest>
				<section name="edu/internet2/middleware/signet/ui" >
				<attribute name="Built-By"                value="${user.name}"/>
				<attribute name="Implementation-Title"    value="${signet_basename}" />
				<attribute name="Implementation-Version"  value="${signet_version}" />
				<attribute name="Implementation-BuildDate" value="${TODAY}" />
				<attribute name="Implementation-Vendor"   value="${signet_vendor}" />
				<attribute name="Implementation-URL"      value="${signet_url}" />
				<attribute name="Dependencies"	value="Standard Java JRE, ${signet.jar.api}, ${signet.jar.util}, many 3rd-party jars" />
				</section>
			</manifest>
			<fileset dir="${classes.dir}" >
				<include name="${signet.jar.ui.files}" />
			</fileset>
		</jar>
	</target>

	<!-- - - - - - - - - target: create_signet_util_jar - -->
	<target name="create_signet_util_jar" >
		<jar destfile="${signet.jar.util}" >
			<manifest>
				<section name="edu/internet2/middleware/signet/util" >
				<attribute name="Built-By"                value="${user.name}"/>
				<attribute name="Implementation-Title"    value="${signet_basename}" />
				<attribute name="Implementation-Version"  value="${signet_version}" />
				<attribute name="Implementation-BuildDate" value="${TODAY}" />
				<attribute name="Implementation-Vendor"   value="${signet_vendor}" />
				<attribute name="Implementation-URL"      value="${signet_url}" />
				<attribute name="Dependencies"	value="Standard Java JRE, ${signet.jar.api}, many 3rd-party jars" />
				</section>
			</manifest>
			<fileset dir="${classes.dir}" >
				<include name="${signet.jar.util.files}" />
			</fileset>
		</jar>
	</target>

	<!-- - - - - - - - - target: create_xml_binder_jar - - - - - - - - - -->
	<target name="create_xml_binder_jar"
			description="Create Signet XML Bindings jar, SignetXmlXb.jar" >
		<jar destfile="${signet.jar.xmlbind}" > 
			<manifest>
				<section name="edu/internet2/middleware/signet/xml/binder" >
					<attribute name="Built-By"                value="${user.name}"/>
					<attribute name="Implementation-Title"    value="${signet_basename}" />
					<attribute name="Implementation-Version"  value="${signet_version}" />
					<attribute name="Implementation-BuildDate" value="${TODAY}" />
					<attribute name="Implementation-Vendor"   value="${signet_vendor}" />
					<attribute name="Implementation-URL"      value="${signet_url}" />
					<attribute name="Dependencies" value="Standard Java JRE and JAXB, NOT dependent on any Signet jars." />
				</section>
			</manifest>
			<fileset dir="${classes.dir}" >
				<include name="${xml.bindings.relpath}/*" />
			</fileset>
			<fileset dir="${basedir}" >
				<include name="${schema.dir}/${schema.filename}"/>
			</fileset>
		</jar>
	</target>

	<!-- - - - - - - - - target: create_xml_adapter_jar - - - - - - - - - -->
	<target name="create_xml_adapter_jar"
			description="Create Signet XML Adapters jar, SignetXmlXa.jar" >
		<jar destfile="${signet.jar.xmladapt}" > 
			<manifest> 
				<attribute name="Main-Class" value="${signetxml.main.path}.${signetxml.main.class}" />
				<section name="edu/internet2/middleware/signet/xml/adapter" >
					<attribute name="Built-By"                value="${user.name}"/>
					<attribute name="Implementation-Title"    value="${signet_basename}" />
					<attribute name="Implementation-Version"  value="${signet_version}" />
					<attribute name="Implementation-BuildDate" value="${TODAY}" />
					<attribute name="Implementation-Vendor"   value="${signet_vendor}" />
					<attribute name="Implementation-URL"      value="${signet_url}" />
					<attribute name="Dependencies" value="Standard Java JRE, JAXB, ${signet.jar.api}." />
				</section>
			</manifest>
			<fileset dir="${classes.dir}" >
				<include name="${signetxml.main.relpath}/*.class" />
			</fileset>
			<fileset dir="${classes.dir}" >
				<include name="${xml.adapter.relpath}/*" />
			</fileset>
		</jar>
	</target>


	<!-- - - - - - - - - target: config_util_run_script - -->
	<target name="config_util_run_script" >
		<replace file="${dist.util.dir}/dist-signet_cp.bat"
				token="${signet.jar.api.token}"
				value="${signet.jar.api.filename}" />
		<replace file="${dist.util.dir}/dist-signet_cp.bat"
				token="${signet.jar.ui.token}"
				value="${signet.jar.ui.filename}" />
		<replace file="${dist.util.dir}/dist-signet_cp.bat"
				token="${signet.jar.util.token}"
				value="${signet.jar.util.filename}" />
		<replace file="${dist.util.dir}/dist-signet_cp.bat"
				token="${signet.jar.xmladapter.token}"
				value="${signet.jar.xmladapt.filename}" />
		<replace file="${dist.util.dir}/dist-signet_cp.bat"
				token="${signet.jar.xmlbind.token}"
				value="${signet.jar.xmlbind.filename}" />
	</target>


	<!-- - - - - - - - - target: delete_classes - -->
	<target name="delete_classes" >
		<delete dir="${classes.dir}" />
	</target>


    <!-- - - - - - - - - target: delete_src_distrib - -->
	<target name="delete_src_distrib" >
		<delete file="${signet.zipfile}" />
		<delete file="${signet.gzipfile}" />
	</target>


	<!-- - - - - - - - - target: create_src_zip_yes - -->
	<target name="create_src_zip_yes"
			if="signet.zipfile" >
		<zip destfile="${signet.zipfile}" >
			<fileset dir="${basedir}" >
				<include name="${source_config.dir}/**" />
				<include name="${source_java.dir}/**" />
				<include name="${source_lib.dir}/**" />
				<include name="${source_sql.dir}/**" />
				<include name="${source_util.dir}/**" />
				<include name="${source_webapp.dir}/**" />
				<include name="README" />
				<include name="LICENSE" />
				<include name="build.xml" />
				<include name="buildSignet.properties" />
				<include name="buildAltLocal.properties" />
				<include name="build_QS.xml" />
				<include name="buildSignet_QS.properties" />
				<include name="NEWS.txt" />
				<include name="signetBuildTomcatDefs.xml" />
				<exclude name="${signet.zipfile}" />
				<exclude name="${signet.gzipfile}" />
			</fileset>
		</zip>
		<chmod file="${signet.zipfile}" perm="755" />
	</target>


	<!-- - - - - - - - - target: create_src_gzip_yes - -->
	<target name="create_src_gzip_yes"
			if="signet.gzipfile" >
		<tar destfile="${signet.gzipfile}"
				longfile="gnu"
				compression="gzip" >
			<tarfileset dir="${basedir}"  mode="755" >
				<include name="${source_config.dir}/**" />
				<include name="${source_java.dir}/**" />
				<include name="${source_lib.dir}/**" />
				<include name="${source_sql.dir}/**" />
				<include name="${source_util.dir}/**" />
				<include name="${source_webapp.dir}/**" />
				<include name="README" />
				<include name="LICENSE" />
				<include name="build.xml" />
				<include name="buildSignet.properties" />
				<include name="buildAltLocal.properties" />
				<include name="build_QS.xml" />
				<include name="buildSignet_QS.properties" />
				<include name="NEWS.txt" />
				<include name="signetBuildTomcatDefs.xml" />
				<exclude name="${signet.zipfile}" />
				<exclude name="${signet.gzipfile}" />
			</tarfileset>
		</tar>
		<chmod file="${signet.gzipfile}" perm="755" />
	</target>


	<!-- - - - - - - - - target: create_webapp - -->
	<target name="create_webapp"
		if="dist_webapp.dir"
		depends="create_webapp_dirs, create_war_file" >
	</target>


	<!-- - - - - - - - - target: create_webapp_dirs - -->
	<target name="create_webapp_dirs" >
		<mkdir dir="${dist_webapp.dir}"/>
	</target>


	<!-- - - - - - - - - target: create_war_file - -->
	<target name="create_war_file"
			depends="create_config_fileset,
					create_altconfig_fileset_yes,
					copy_libs,
					copy_altweb_configs_yes,
					copy_altweb_images_yes,
					copy_altweb_metainf_yes,
					copy_altweb_jsps_yes,
					copy_altweb_scripts_yes,
					copy_altweb_styles_yes,
					copy_altweb_tiles_yes" >

		<war destfile="${signet.war}" 
				webxml="${source_webapp.config.dir}/web.xml" >

			<fileset dir="${source_webapp.dir}" includes="index.jsp" />

			<metainf dir="${source_webapp.metainf.dir}" />
			<metainf refid="custom.webmetainf.fileset" />

			<webinf dir="${source_webapp.images.dir}"		prefix="${dirname.images}" />
			<webinf refid="custom.webimages.fileset"		prefix="${dirname.images}" />

			<webinf dir="${source_webapp.jsp.dir}"			prefix="${dirname.jsp}" />
			<webinf refid="custom.webjsp.fileset"			prefix="${dirname.jsp}" />

			<webinf dir="${source_webapp.scripts.dir}"		prefix="${dirname.scripts}" />
			<webinf refid="custom.webscripts.fileset"		prefix="${dirname.scripts}" />

			<webinf dir="${source_webapp.styles.dir}"		prefix="${dirname.styles}" />
			<webinf refid="custom.webstyles.fileset"		prefix="${dirname.styles}" />

			<webinf dir="${source_webapp.tiles.dir}"		prefix="${dirname.tiles}" />
			<webinf refid="custom.webtiles.fileset"			prefix="${dirname.tiles}" />

			<webinf dir="${source_webapp.config.dir}" >		<exclude name="web.xml"/> </webinf>
			<webinf refid="custom.webconfig.fileset" />

			<!-- Note: config files are copied from dist_config.dir because they may get
			     modified by the configure_hibernate target -->
			<classes dir="${dist_config.dir}" />
<!--			<classes refid="source.config.fileset" /> -->
			<classes refid="custom.config.fileset" /> 

			<lib dir="${dist_lib.dir}" />
		</war>
	</target>


	<!-- - - - - - - - - target: copy_altweb_configs_yes - -->
	<target name="copy_altweb_configs_yes"
			depends="copy_altweb_configs_no"
			if="custom.webconfig.dir" >
		<fileset id="custom.webconfig.fileset"
				dir="${custom.webconfig.dir}" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_configs_no - -->
	<target name="copy_altweb_configs_no"
			unless="custom.webconfig.dir" >
		<fileset id="custom.webconfig.fileset"
				dir="" >
			<include name="" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_images_yes - -->
	<target name="copy_altweb_images_yes"
			depends="copy_altweb_images_no"
			if="custom.webimages.dir" >
		<fileset id="custom.webimages.fileset"
				dir="${custom.webimages.dir}" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_images_no - -->
	<target name="copy_altweb_images_no"
			unless="custom.webimages.dir" >
		<fileset id="custom.webimages.fileset"
				dir="" >
			<include name="" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_jsps_yes - -->
	<target name="copy_altweb_jsps_yes"
			depends="copy_altweb_jsps_no"
			if="custom.webjsp.dir" >
		<fileset id="custom.webjsp.fileset"
				dir="${custom.webjsp.dir}" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_jsps_no - -->
	<target name="copy_altweb_jsps_no"
			unless="custom.webjsp.dir" >
		<fileset id="custom.webjsp.fileset"
				dir="" >
			<include name="" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_metainf_yes - -->
	<target name="copy_altweb_metainf_yes"
			depends="copy_altweb_metainf_no"
			if="custom.webmetainf.dir" >
		<fileset id="custom.webmetainf.fileset"
				dir="${custom.webmetainf.dir}" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_metainf_no - -->
	<target name="copy_altweb_metainf_no"
			unless="custom.webmetainf.dir" >
		<fileset id="custom.webmetainf.fileset"
				dir="" >
			<include name="" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_scripts_yes - -->
	<target name="copy_altweb_scripts_yes"
			depends="copy_altweb_scripts_no"
			if="custom.webscripts.dir" >
		<fileset id="custom.webscripts.fileset"
				dir="${custom.webscripts.dir}" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_scripts_no - -->
	<target name="copy_altweb_scripts_no"
			unless="custom.webscripts.dir" >
		<fileset id="custom.webscripts.fileset"
				dir="" >
			<include name="" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_styles_yes - -->
	<target name="copy_altweb_styles_yes"
			depends="copy_altweb_styles_no"
			if="custom.webstyles.dir" >
		<fileset id="custom.webstyles.fileset"
				dir="${custom.webstyles.dir}" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_styles_no - -->
	<target name="copy_altweb_styles_no"
			unless="custom.webstyles.dir" >
		<fileset id="custom.webstyles.fileset"
				dir="" >
			<include name="" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_tiles_yes - -->
	<target name="copy_altweb_tiles_yes"
			depends="copy_altweb_tiles_no"
			if="custom.webtiles.dir" >
		<fileset id="custom.webtiles.fileset"
				dir="${custom.webtiles.dir}" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_tiles_no - -->
	<target name="copy_altweb_tiles_no"
			unless="custom.webtiles.dir" >
		<fileset id="custom.webtiles.fileset"
				dir="" >
			<include name="" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: configure_hibernate - -->
	<target name="configure_hibernate"
			depends="config_db_dialect, config_db_driver, config_db_url, config_db_user, config_db_pwd" >
	</target>


	<!-- - - - - - - - - target: config_db_dialect - -->
	<target name="config_db_dialect"
			if="db.cfg.dialect" >
		<replace file="${dist_config.dir}/hibernate.cfg.xml"
				token="${db.cfg.dialect.token}"
				value="${db.cfg.dialect}" />
		<!-- Note: dialect is not used in sources.xml -->
	</target>


	<!-- - - - - - - - - target: config_db_driver - -->
	<target name="config_db_driver"
			if="db.cfg.driver" >
		<replace file="${dist_config.dir}/hibernate.cfg.xml"
				token="${db.cfg.driver.token}"
				value="${db.cfg.driver}" />
		<replace file="${dist_config.dir}/sources.xml"
				token="${db.cfg.driver.token}"
				value="${db.cfg.driver.subjapi}" />
	</target>


	<!-- - - - - - - - - target: config_db_url - -->
	<target name="config_db_url"
			if="db.cfg.url" >
		<replace file="${dist_config.dir}/hibernate.cfg.xml"
				token="${db.cfg.url.token}"
				value="${db.cfg.url}" />
		<replace file="${dist_config.dir}/sources.xml"
				token="${db.cfg.url.token}"
				value="${db.cfg.url.subjapi}" />
	</target>


	<!-- - - - - - - - - target: config_db_user - -->
	<target name="config_db_user"
			if="db.cfg.username" >
		<replace file="${dist_config.dir}/hibernate.cfg.xml"
				token="${db.cfg.username.token}"
				value="${db.cfg.username}" />
		<replace file="${dist_config.dir}/sources.xml"
				token="${db.cfg.username.token}"
				value="${db.cfg.username.subjapi}" />
	</target>


	<!-- - - - - - - - - target: config_db_pwd - -->
	<target name="config_db_pwd"
			if="db.cfg.password" >
		<replace file="${dist_config.dir}/hibernate.cfg.xml"
				token="${db.cfg.password.token}"
				value="${db.cfg.password}" />
		<replace file="${dist_config.dir}/sources.xml"
				token="${db.cfg.password.token}"
				value="${db.cfg.password.subjapi}" />
	</target>


	<!-- - - - - - - - - target: deploy_to_tomcat - -->
	<target name="deploy_to_tomcat" >

		<!-- Either use copy or stop/undeploy/deploy/start. -->
<!--
		<copy todir="${catalina_home}/webapps" file="${signet.war}" overwrite="true"/>
-->
		<!-- stop/undeploy/deploy/start requires signetBuildTomcatDefs.xml -->
		<stop username="${tomcat.manager.username}"
				password="${tomcat.manager.password}"
				url="${tomcat.manager.url}"
				path="${tomcat.manager.signetpath}"
				failonerror="false" />
		<undeploy username="${tomcat.manager.username}"
				password="${tomcat.manager.password}"
				url="${tomcat.manager.url}"
				path="${tomcat.manager.signetpath}"
				failonerror="false" />
		<deploy username="${tomcat.manager.username}"
				password="${tomcat.manager.password}"
				url="${tomcat.manager.url}"
				path="${tomcat.manager.signetpath}"
				war="${signet.war}" />
		<start username="${tomcat.manager.username}"
				password="${tomcat.manager.password}"
				url="${tomcat.manager.url}"
				path="${tomcat.manager.signetpath}" />
	</target>


	<!-- - - - - - - - - target: signetxml_delete_jars - - - - - - - - - -->
    <target name="signetxml_delete_jars">
		<delete file="${signet.jar.xmlbind}" />
    	<delete file="${signet.jar.xmladapt}" />
    </target>

	<!-- - - - - - - - - target: delete_classes - - - - - - - - - - - - -->
<!--
	<target name="signetxml_delete_classes" >
		<delete dir="${classes.dir}/${signetxml.main.relpath}" />
		<mkdir dir="${classes.dir}/${signetxml.main.relpath}" />
	</target>
-->

	<!-- - - - - - - - - target: delete_schemas - - - - - - - - - - - - -->
	<target name="delete_schemas" >
		<delete dir="${schema.dir}" />
		<mkdir dir="${schema.dir}"/>
	</target>

	<!-- - - - - - - - - target: delete_xmlbinds - - - - - - - - - - - - -->
	<target name="delete_xmlbinds">
		<delete dir="${xml.bindings.fullpath}" />
		<mkdir dir="${xml.bindings.fullpath}" />
	</target>


</project>

