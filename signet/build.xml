<?xml version="1.0"?>
<project
	name="Signet"
	default="db" basedir=".">
	<!-- Set up properties containing important project directories -->
	<property name="source.root" value="src"/>
	<property name="class.root" value="classes"/>
	<property name="lib.dir" value="lib"/>
	<property name="data.dir" value="data"/>
	<property name="config.dir" value="config"/>
	
	<!-- Set up the class path for compilation and execution -->
	<path id="project.class.path">
		<!-- Include our own classes, of course -->
		<pathelement location="${class.root}"/>
		<!-- Include jars in the project library directory -->
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>

	<!-- Generate the schemas for all mapping files in our class tree -->
	<target name="schema" depends="compile" description="Generate DB schema from the O/R mapping files">
		<!-- Teach Ant how to use Hibernate's schema generation tool -->
		<taskdef name="schemaexport" classname="net.sf.hibernate.tool.hbm2ddl.SchemaExportTask" classpathref="project.class.path"/>
		<schemaexport config="${config.dir}/hibernate.cfg.xml" quiet="no" text="no" drop="no">
			<!-- <fileset dir="${class.root}">
        <include name="**/*.hbm.xml"/>
      </fileset> -->
		</schemaexport>
	</target>
	
	<target
		depends="compile"
		name="addData"
	  	description="Inserts Signet metadata">
		<java classname="edu.internet2.middleware.signet.demo.AddData"
			fork="true">
			<classpath refid="project.class.path"/>
		</java>
	</target>
	
	<target
		depends="compile"
		name="makeAssignment"
	  	description="Makes Signet assignments">
		<java classname="edu.internet2.middleware.signet.demo.MakeAssignment"
			fork="true">
			<classpath refid="project.class.path"/>
		</java>
	</target>
	
	<target name="db" description="Runs HSQLDB database management UI
against the database file--use when application is not running">
		<java classname="org.hsqldb.util.DatabaseManager" fork="yes">
			<classpath refid="project.class.path"/>
			<arg value="-driver"/>
			<arg value="org.hsqldb.jdbcDriver"/>
			<arg value="-url"/>
			<arg value="jdbc:hsqldb:${data.dir}/signet"/>
			<arg value="-user"/>
			<arg value="sa"/>
		</java>
	</target>
	
	<target
		depends="compile"
		name="showData"
	  	description="Runs demo program">
		<java classname="edu.internet2.middleware.signet.demo.ShowData"
			fork="true">
			<classpath refid="project.class.path"/>
		</java>
	</target>
	
	<!-- Teach Ant how to use Hibernate's code generation tool -->
	<taskdef name="hbm2java" classname="net.sf.hibernate.tool.hbm2java.Hbm2JavaTask" classpathref="project.class.path"/>
	<!-- Generate the java code for all mapping files in our source tree -->
	<target name="codegen" description="Generate Java source from the O/R mapping files">
		<hbm2java output="${source.root}">
			<fileset dir="${source.root}">
				<include name="**/*.hbm.xml"/>
			</fileset>
		</hbm2java>
	</target>

	<!-- Create our runtime subdirectories and copy resources into them -->
	<target name="prepare" description="Sets up build structures">
		<mkdir dir="${class.root}"/>
		<!-- Copy our property files and O/R mappings for use at runtime -->
		<copy todir="${class.root}">
			<fileset dir="${config.dir}">
				<include name="**/*.cfg.xml"/>
				<include name="**/*.properties"/>
			</fileset>
			<fileset dir="${source.root}">
				<include name="**/*.properties"/>
				<include name="**/*.hbm.xml"/>
			</fileset>
		</copy>
	</target>

	<!-- Compile the java source of the project -->
	<target name="compile" depends="prepare" description="Compiles all Java classes">
		<javac srcdir="${source.root}" destdir="${class.root}" debug="on" optimize="off" deprecation="on">
			<classpath refid="project.class.path"/>
		</javac>
	</target>

	<!-- Generate Javadoc for the source files -->
	<target name="javadoc">
		<javadoc destdir="doc"
			access="public"
			use="true"
			notree="false"
			nonavbar="false"
			noindex="false"
			splitindex="true"
			author="true"
			version="true"
			nodeprecatedlist="false"
			nodeprecated="false"
			sourcepath="src"
			classpath="classes" /> 
	</target>
	

	<!-- =================== WEBAPP BUILD TASKS  =========================== -->
	<property name="webapp.name"     value="signet" />
	<property name="webapp.build"    value="build" />
	<property name="webapp.dist"    value="dist" />

	<!-- =================== BUILD: Create Directories ===================== --> 
	<target name="build-prepare">
		<mkdir dir="${webapp.build}" /> 
		<mkdir dir="${webapp.build}/${webapp.name}" /> 
		<mkdir dir="${webapp.build}/${webapp.name}/WEB-INF" /> 
		<mkdir dir="${webapp.build}/${webapp.name}/WEB-INF/classes" /> 
		<mkdir dir="${webapp.build}/${webapp.name}/WEB-INF/lib" /> 
	</target>

	<!-- ================ BUILD: Copy JSPs and Static Files ================ --> 
	<target name="build-web" depends="build-prepare">
		<copy todir="${webapp.build}/${webapp.name}">
			<fileset dir="web">
			<include name="**/*" /> 
			</fileset>
		</copy>
	</target>

	<!-- ================ BUILD: Copy config files ========================= --> 
	<target name="build-config" depends="build-prepare">
		<!-- Webapp deployment descriptor file -->
		<copy file="config/web.xml"
			todir="${webapp.build}/${webapp.name}/WEB-INF" />
		<!-- Struts config and tag library descriptors -->
		<copy todir="${webapp.build}/${webapp.name}/WEB-INF">
			<fileset dir="config">
			<include name="**/struts-*.xml" />
			<include name="**/struts-*.tld" />
			</fileset>
		</copy>
		
		<!-- Hibernate config and descriptors already handled by the compile task
		<copy file="config/hibernate.cfg.xml"
			todir="${webapp.build}/${webapp.name}/WEB-INF/classes" />
		<copy file="config/log4j.properties"
			todir="${webapp.build}/${webapp.name}/WEB-INF/classes" />
		-->
	</target>

	<!-- ================= BUILD: Rebuild Webapp ========================== -->
	<target name="build-webapp" depends="compile, build-clean, build-web, build-config"
		description="Clean and build Signet web app">
		<copy todir="${webapp.build}/${webapp.name}/WEB-INF/classes">
			<fileset dir="classes">
			<include name="**/*" /> 
			</fileset>
		</copy>
		<copy todir="${webapp.build}/${webapp.name}/WEB-INF/lib">
			<fileset dir="lib">
			<include name="**/*" /> 
			<exclude name="**/servlet-api.jar" />
			</fileset>
		</copy>
	</target>
	
	<!-- ================== BUILD: Clean Directory ========================= --> 
	<target name="build-clean">
		<delete dir="${webapp.build}/${webapp.name}" />
	</target>


	<!-- ================= BUILD: Rebuild Distribution======================= -->
	<target name="build-dist" depends="build-webapp"
		description="Creates Signet web app distribution">
		<delete dir="${webapp.dist}" />
		<mkdir dir="${webapp.dist}/webapp" />
		<copy todir="${webapp.dist}/webapp">
			<fileset dir="build">
			<include name="**/*" />
			</fileset>
		</copy>
		<copy todir="${webapp.dist}">
			<fileset dir="doc">
			<include name="**/readme.txt" />
			<include name="**/license.txt" />
			</fileset>
		</copy>
		<copy todir="${webapp.dist}/sql">
			<fileset dir="sql">
			<include name="**/*" />
			</fileset>
		</copy>

	</target>

	<target name="config-webapp" depends="build-webapp"
		description="Sets database parameter and mailto href">
		<copy file="config/hibernate.cfg.xml"
			todir="${webapp.build}/${webapp.name}/WEB-INF/classes">
			<filterset>
				<filtersfile file="config.properties" />
			</filterset>
		</copy>
		<copy file="web/footer.jsp"
			todir="${webapp.build}/${webapp.name}">
			<filterset>
				<filtersfile file="config.properties" />
			</filterset>
		</copy>
	</target>

</project>
