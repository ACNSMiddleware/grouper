<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /home/hagleyj/i2mi/signet/build_QS.xml,v 1.9 2007-07-18 17:24:39 ddonn Exp $ -->

<project name="Signet" default="quickstart" basedir="." >

	<!-- Signet version number and signet basename. Import this before all others! -->
	<property file="config/signet.properties" />

	<!--
		Custom Properties (i.e. "Doppleganger")
		Don't include the following line if there are no alternate sources, libs, etc.
		NOTE: if you intend to use this file to override any of the mandatory
		properties (defined in buildSignet_QS.properties), you must import the
		overrides FIRST. Ant does not assign new values if a property is
		already defined: your override must be defined BEFORE the default value
		is defined.
	-->
	<property file="demo/build_QSCustom.properties" />

	<!--
		Global Properties
		This file contains required properties.
	-->
	<property file="buildSignet_QS.properties" />


	<!-- ======================== Public Targets =========================== -->


    <!-- =============== target: quickstart =================== -->
	<target name="quickstart"
			description="Create a QuickStart Demo distribution zip and/or gzip"
			depends="clean, compile, assemble_prod, deploy_prod" >
		<property file="buildSignetQS.properties" />
	</target>


	<!-- - - - - - - - - - - Private, Utility Targets - - - - - - - - - - - -->


	<!-- - - - - - - - - target: clean - - - - - - - - - -  -->
	<target name="clean"
			depends="delete_classes, clean_distdirs" >
	</target>


	<!-- - - - - - - - - target: compile - - - - - - - - -  -->
	<target name="compile"
			depends="create_altlocal_java_dir_no, create_classpath" >

		<tstamp/>

		<mkdir dir="${classes.dir}"/>

		<javac destdir="${classes.dir}"
				classpathref="source.class.path"
				debug="${compile.debug}"
				optimize="${compile.optimize}"
				deprecation="${compile.deprecation}" >
			<src path="${source_java.dir}" />
			<src path="${custom.java.dir}" />
			<!-- following line specifies non-standard compile options -->
			<!-- <compilerarg line="${compile.other.args}" /> -->
		</javac>

		<copy todir="${classes.dir}" > 
			<fileset dir="${source_java.dir}" id="id" >
				<include name="**/${source.hibernate.ext}" />
			</fileset>
		</copy>
	</target>


	<!-- - - - - - - - - target: assemble_prod - - - - - - - -->
	<target name="assemble_prod"
			depends="clean,	compile, assemble_all, create_signet_jars, javadoc" >
	</target>


	<!-- - - - - - - - - target: deploy_prod - - - - - - -  -->
	<target name="deploy_prod"
			depends="assemble_prod, create_hsqldb, create_webapp, create_prod_archives" >
	</target>


    <!-- - - - - - - - - target: javadoc - - - - - - - - - - -->
	<target name="javadoc"
			depends="create_sourcepath, create_classpath" >
		<path id="javadoc.src.path">
			<pathelement location="${source_java.dir}" />
<!-- Uncomment this if you want to add your Doppleganger source JavaDocs
			<pathelement location="${custom.java.dir}" />
-->
		</path>
		<javadoc packagenames="edu.internet2.middleware.signet, 
				edu.internet2.middleware.signet.choice, 
				edu.internet2.middleware.signet.dbpersist, 
				edu.internet2.middleware.signet.reconcile, 
				edu.internet2.middleware.signet.resource, 
				edu.internet2.middleware.signet.subjsrc, 
				edu.internet2.middleware.signet.tree, 
				edu.internet2.middleware.signet.util"
			access="package"
			author="true"
			breakiterator="true"
			classpathref="source.class.path"
			destdir="${dist_doc.dir}"
			nodeprecated="false"
			nodeprecatedlist="false"
			noindex="false"
			nonavbar="false"
			notree="false"
			overview="${source_javadoc_oview}"
			sourcepathref="javadoc.src.path"
			splitindex="true"
			use="true"
			version="true" />

		<delete file="${signet.javadoc.zipfile}" />
		<delete file="${signet.javadoc.gzipfile}" />

		<zip destfile="${signet.javadoc.zipfile}"
				encoding="UTF8"
				duplicate="fail" >
			<fileset dir="${dist_doc.dir}" >
				<include name="*/**" />
				<exclude name="${signet.javadoc.zipfile}" />
				<exclude name="${signet.javadoc.gzipfile}" />
			</fileset>
		</zip>

		<tar destfile="${signet.javadoc.gzipfile}"
				longfile="gnu"
				compression="gzip" >
			<tarfileset dir="${dist_doc.dir}" mode="755" >
				<include name="*/**" />
				<exclude name="${signet.javadoc.zipfile}" />
				<exclude name="${signet.javadoc.gzipfile}" />
			</tarfileset>
		</tar>
	</target>


    <!-- - - - - - - - - target: copy_readmes - -->
	<target name="copy_readmes" >
		<copy todir="${dist.util.dir}" >
			<fileset dir="." >
				<include name="README*" />
			</fileset>
		</copy>
	</target>


	<!-- Note: the "*_yes" and "*_no" targets below determine whether the
	     optional alt_local_* properties are previously defined. If not defined,
	     they are given empty values so that Ant doesn't choke. -->


    <!-- - - - - - - - - target: create_altlocal_src_fileset_no - -->
    <target name="create_altlocal_java_dir_no"
			unless="custom.java.dir" >
		<property name="custom.java.dir" value="" />
    </target>


    <!-- - - - - - - - - target: create_sourcepath - - - -  -->
    <target name="create_sourcepath"
    		depends="create_source_src_fileset, create_altlocal_src_fileset_yes">
		<path id="source.path" >
			<fileset refid="source.src.fileset" />
			<fileset refid="custom.src.fileset" />
		</path>
    </target>


    <!-- - - - - - - - - target: create_source_src_fileset -  -->
    <target name="create_source_src_fileset">
		<fileset dir="${source_java.dir}"
				id="source.src.fileset" >
		    <include name="**/*.java"/>
		</fileset>
    </target>


    <!-- - - - - - - - - target: create_altlocal_src_fileset_yes - -->
    <target name="create_altlocal_src_fileset_yes"
			depends="create_altlocal_src_fileset_no"
			if="custom.java.dir" >
		<fileset id="custom.src.fileset"
			dir="${custom.java.dir}" >
			<include name="**/*.java" />
		</fileset>
    </target>


    <!-- - - - - - - - - target: create_altlocal_src_fileset_no - -->
    <target name="create_altlocal_src_fileset_no"
			unless="custom.java.dir" >
		<fileset id="custom.src.fileset"
			dir="" >
			<include name="" />
		</fileset>
    </target>


	<!-- - - - - - - - -  target: create_classpath - - - -->
	<target name="create_classpath"
			depends="create_lib_fileset, create_altlib_fileset_yes" >
		<path id="source.class.path" >
			<fileset refid="source.lib.fileset" />
			<fileset refid="i2mi_common_lib.fileset" />
<!-- SubjectAPI JAR is in Signet CVS for now
			<fileset refid="subjectApi_lib.fileset" />
-->
			<fileset refid="custom.lib.fileset" />
		</path>
	</target>


	<!-- - - - - - - - - target: assemble_all - - - - - - - - - -->
	<target name="assemble_all"
			depends="create_distdirs, copy_readmes, copy_config_files, copy_libs,
					copy_sql, copy_util_scripts, copy_demo_scripts,
					config_util_run_script, configure_hibernate" >
	</target>


	<!-- - - - - - - - - target: copy_libs - - - - - - - - - -->
	<target name="copy_libs"
			depends="create_lib_fileset, create_altlib_fileset_yes" >
		<copy todir="${dist_lib.dir}" >
			<fileset refid="source.lib.fileset" />
			<fileset dir="${source_lib.dir}" includes="**/*license*" />
			<fileset refid="i2mi_common_lib.fileset" />
			<fileset dir="${i2mi_common_lib.dir}" includes="**/*license*" />
<!-- SubjectAPI JAR is in Signet CVS for now 
			<fileset refid="subjectApi_lib.fileset" />
-->
			<fileset refid="custom.lib.fileset" />
		</copy>
	</target>


	<!-- - - - - - - - - target: create_lib_fileset - - -->
	<target name="create_lib_fileset" >
		<fileset id="source.lib.fileset"
			dir="${source_lib.dir}" >
			<include name="**/*.jar" />
		</fileset>
		<fileset id="i2mi_common_lib.fileset"
			dir="${i2mi_common_lib.dir}" >
			<include name="**/*.jar" />
		</fileset>
<!-- SubjectAPI JAR is in Signet CVS for now
		<fileset id="subjectApi_lib.fileset"
			dir="${subjectApi_lib.dir}" >
			<include name="**/*.jar" />
		</fileset>
-->
	</target>


	<!-- - - - - - - - - target: create_altlib_fileset_yes - -->
	<target name="create_altlib_fileset_yes"
			depends="create_altlib_fileset_no"
			if="custom.lib.dir" >
		<fileset id="custom.lib.fileset"
			dir="${custom.lib.dir}" >
			<include name="**/*.jar" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: create_altlib_fileset_no - -->
	<target name="create_altlib_fileset_no"
			unless="custom.lib.dir" >
		<fileset id="custom.lib.fileset"
			dir="">
			<include name=""/>
		</fileset>
	</target>

	
	<!-- - - - - - - - - target: create_distdirs - - - - -->
	<target name="create_distdirs" >
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${dist_config.dir}" />
		<mkdir dir="${dist_doc.dir}" />
		<mkdir dir="${dist_lib.dir}" />
		<mkdir dir="${dist_sql.dir}" />
		<mkdir dir="${dist.demo.dir}" />
	</target>

	
	<!-- - - - - - - - - target: clean_distdirs - - - - -->
	<target name="clean_distdirs" >
		<delete dir="${dist.dir}" includeemptydirs="true" quiet="true" />
	</target>

	
	<!-- - - - - - - - - target: copy_sql - - - - - - - - - - -->
	<target name="copy_sql"
			depends="create_sql_fileset, create_altsql_fileset_yes" >
		<copy todir="${dist_sql.dir}" >
			<fileset refid="source.sql.fileset" />
			<fileset refid="custom.sql.fileset" />
		</copy>
	</target>


	<!-- - - - - - - - - target: create_sql_fileset - - - - -->
	<target name="create_sql_fileset" >
		<fileset id="source.sql.fileset"
			dir="${source_sql.dir}" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: create_altsql_fileset_yes - -->
	<target name="create_altsql_fileset_yes"
			depends="create_altsql_fileset_no"
			if="custom.sql.dir" >
		<fileset id="custom.sql.fileset"
			dir="${custom.sql.dir}" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: create_altsql_fileset_no - -->
	<target name="create_altsql_fileset_no"
			unless="custom.sql.dir" >
		<fileset id="custom.sql.fileset"
			dir="" >
			<include name="" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_config_files - - - -->
	<target name="copy_config_files"
			depends="create_config_fileset, create_altconfig_fileset_yes" >
		<copy todir="${dist_config.dir}" >
			<fileset refid="source.config.fileset" />
			<fileset refid="custom.config.fileset" />
		</copy>
	</target>


	<!-- - - - - - - - - target: create_config_fileset - - - -->
	<target name="create_config_fileset" >
		<fileset id="source.config.fileset" 
				dir="${source_config.dir}" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: create_altconfig_fileset_yes - -->
	<target name="create_altconfig_fileset_yes"
			depends="create_altconfig_fileset_no"
			if="custom.config.dir" >
		<fileset id="custom.config.fileset" 
				dir="${custom.config.dir}" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: create_altconfig_fileset_no - -->
	<target name="create_altconfig_fileset_no"
			unless="custom.config.dir" >
		<fileset id="custom.config.fileset" 
				dir="" >
			<include name="" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_util_scripts - -->
	<target name="copy_util_scripts" 
			depends="create_distdirs" >
		<copy todir="${dist.util.dir}" >
			<fileset dir="${source_util.dir}" >
				<include name="AssignmentReconcile/*" />
				<include name="SignetProxy/*" />
				<include name="SubjectFileLoader/*" />
				<include name="SubsystemXmlLoader/*" />
				<include name="TreeXmlLoader/*" />
				<include name="dist-signet_cp.bat" />
			</fileset>
		</copy>
		<chmod perm="755">
			<fileset dir="${dist.util.dir}" >
				<include name="**/*.sh" />
				<include name="**/*.bat" />
			</fileset>
		</chmod>
		<fixcrlf srcdir="${dist.util.dir}" includes="**/*.sh, **/*.bat" />
	</target>


	<!-- - - - - - - - - target: copy_demo_scripts - - -->
    <target name="copy_demo_scripts" >
		<copy todir="${dist.demo.dir}" >
			<fileset dir="${source.demo.dir}" >
				<include name="**/*" />
				<exclude name="*.zip" />
			</fileset>
		</copy>
		<chmod perm="755">
			<fileset dir="${dist.demo.dir}" >
				<include name="**/*.sh" />
				<include name="**/*.bat" />
			</fileset>
		</chmod>
    </target>


	<!-- - - - - - - - - target: create_signet_jars - -->
	<target name="create_signet_jars" 
			depends="create_signet_api_jar, create_signet_ui_jar, create_signet_util_jar" >
	</target>


	<!-- - - - - - - - - target: create_signet_api_jar - -->
	<target name="create_signet_api_jar" >
		<jar destfile="${signet.jar.api}" > 
			<manifest>
				<section name="edu/internet2/middleware/signet" >
				<attribute name="Built-By"                value="${user.name}"/>
				<attribute name="Implementation-Title"    value="${signet_basename}" />
				<attribute name="Implementation-Version"  value="${signet_version}" />
				<attribute name="Implementation-BuildDate" value="${TODAY}" />
				<attribute name="Implementation-Vendor"   value="${signet_vendor}" />
				<attribute name="Implementation-URL"      value="${signet_url}" />
				</section>
			</manifest>
			<fileset dir="${classes.dir}" >
				<exclude name="${signet.jar.ui.files}" />
				<exclude name="${signet.jar.util.files}" />
			</fileset>
		</jar>
	</target>


	<!-- - - - - - - - - target: create_signet_ui_jar - -->
	<target name="create_signet_ui_jar" >
		<jar destfile="${signet.jar.ui}" >
			<manifest>
				<section name="edu/internet2/middleware/signet/ui" >
				<attribute name="Built-By"                value="${user.name}"/>
				<attribute name="Implementation-Title"    value="${signet_basename}" />
				<attribute name="Implementation-Version"  value="${signet_version}" />
				<attribute name="Implementation-BuildDate" value="${TODAY}" />
				<attribute name="Implementation-Vendor"   value="${signet_vendor}" />
				<attribute name="Implementation-URL"      value="${signet_url}" />
				</section>
			</manifest>
			<fileset dir="${classes.dir}" >
				<include name="${signet.jar.ui.files}" />
			</fileset>
		</jar>
	</target>


	<!-- - - - - - - - - target: create_signet_util_jar - -->
	<target name="create_signet_util_jar" >
		<jar destfile="${signet.jar.util}" >
			<fileset dir="${classes.dir}" >
				<include name="${signet.jar.util.files}" />
			</fileset>
		</jar>
	</target>


	<!-- - - - - - - - - target: config_util_run_script - -->
	<target name="config_util_run_script" >
		<replace file="${dist.util.dir}/dist-signet_cp.bat"
				token="${signet.jar.api.token}"
				value="${signet.jar.api.filename}" />
		<replace file="${dist.util.dir}/dist-signet_cp.bat"
				token="${signet.jar.ui.token}"
				value="${signet.jar.ui.filename}" />
		<replace file="${dist.util.dir}/dist-signet_cp.bat"
				token="${signet.jar.util.token}"
				value="${signet.jar.util.filename}" />
	</target>


	<!-- - - - - - - - - target: delete_classes - -->
	<target name="delete_classes" >
		<delete dir="${classes.dir}" />
	</target>


	<!-- - - - - - - - - target: copy_altweb_configs_yes - -->
	<target name="copy_altweb_configs_yes"
			depends="copy_altweb_configs_no"
			if="custom.webconfig.dir" >
		<fileset id="custom.webconfig.fileset"
				dir="custom.webconfig.dir" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_configs_no - -->
	<target name="copy_altweb_configs_no"
			unless="custom.webconfig.dir" >
		<fileset id="custom.webconfig.fileset"
				dir="" >
			<include name="" />
		</fileset>
	</target>



	<!-- - - - - - - - - target: copy_altweb_images_yes - -->
	<target name="copy_altweb_images_yes"
			depends="copy_altweb_images_no"
			if="custom.webimages.dir" >
		<fileset id="custom.webimages.fileset"
				dir="${custom.webimages.dir}" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_images_no - -->
	<target name="copy_altweb_images_no"
			unless="custom.webimages.dir" >
		<fileset id="${custom.webimages.fileset}"
				dir="" >
			<include name="" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_jsps_yes - -->
	<target name="copy_altweb_jsps_yes"
			depends="copy_altweb_jsps_no"
			if="custom.webjsp.dir" >
		<fileset id="custom.webjsp.fileset"
				dir="${custom.webjsp.dir}" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_jsps_no - -->
	<target name="copy_altweb_jsps_no"
			unless="custom.webjsp.dir" >
		<fileset id="custom.webjsp.fileset"
				dir="" >
			<include name="" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_metainf_yes - -->
	<target name="copy_altweb_metainf_yes"
			depends="copy_altweb_metainf_no"
			if="custom.webmetainf.dir" >
		<fileset id="custom.webmetainf.fileset"
				dir="${custom.webmetainf.dir}" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_metainf_no - -->
	<target name="copy_altweb_metainf_no"
			unless="custom.webmetainf.dir" >
		<fileset id="custom.webmetainf.fileset"
				dir="" >
			<include name="" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_scripts_yes - -->
	<target name="copy_altweb_scripts_yes"
			depends="copy_altweb_scripts_no"
			if="custom.webscripts.dir" >
		<fileset id="custom.webscripts.fileset"
				dir="${custom.webscripts.dir}" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_scripts_no - -->
	<target name="copy_altweb_scripts_no"
			unless="custom.webscripts.dir" >
		<fileset id="custom.webscripts.fileset"
				dir="" >
			<include name="" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_styles_yes - -->
	<target name="copy_altweb_styles_yes"
			depends="copy_altweb_styles_no"
			if="custom.webstyles.dir" >
		<fileset id="custom.webstyles.fileset"
				dir="${custom.webstyles.dir}" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_styles_no - -->
	<target name="copy_altweb_styles_no"
			unless="custom.webstyles.dir" >
		<fileset id="custom.webstyles.fileset"
				dir="" >
			<include name="" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_tiles_yes - -->
	<target name="copy_altweb_tiles_yes"
			depends="copy_altweb_tiles_no"
			if="custom.webtiles.dir" >
		<fileset id="custom.webtiles.fileset"
				dir="${custom.webtiles.dir}" >
			<include name="**/*" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: copy_altweb_tiles_no - -->
	<target name="copy_altweb_tiles_no"
			unless="custom.webtiles.dir" >
		<fileset id="custom.webtiles.fileset"
				dir="" >
			<include name="" />
		</fileset>
	</target>


	<!-- - - - - - - - - target: configure_hibernate - -->
	<target name="configure_hibernate"
			depends="config_db_dialect, config_db_driver, config_db_url, config_db_user, config_db_pwd" >
	</target>


	<!-- - - - - - - - - target: config_db_dialect - -->
	<target name="config_db_dialect"
			if="db.cfg.dialect" >
		<replace file="${dist_config.dir}/hibernate.cfg.xml"
				token="${db.cfg.dialect.token}"
				value="${db.cfg.dialect}" />
		<!-- Note: dialect is not used in sources.xml -->
	</target>


	<!-- - - - - - - - - target: config_db_driver - -->
	<target name="config_db_driver"
			if="db.cfg.driver" >
		<replace file="${dist_config.dir}/hibernate.cfg.xml"
				token="${db.cfg.driver.token}"
				value="${db.cfg.driver}" />
		<replace file="${dist_config.dir}/sources.xml"
				token="${db.cfg.driver.token}"
				value="${db.cfg.driver.subjapi}" />
	</target>


	<!-- - - - - - - - - target: config_db_url - -->
	<target name="config_db_url"
			if="db.cfg.url.filename" >
		<property name="db.cfg.url" value="${db.cfg.url.prefix}${db.cfg.url.filename}" />
		<property name="db.cfg.url.subjapi" value="${db.cfg.url.subjapi.prefix}${db.cfg.url.subjapi.filename}" />

		<replace file="${dist_config.dir}/hibernate.cfg.xml"
				token="${db.cfg.url.token}"
				value="${db.cfg.url}" />
		<replace file="${dist_config.dir}/sources.xml"
				token="${db.cfg.url.token}"
				value="${db.cfg.url.subjapi}" />
	</target>


	<!-- - - - - - - - - target: config_db_user - -->
	<target name="config_db_user"
			if="db.cfg.username" >
		<replace file="${dist_config.dir}/hibernate.cfg.xml"
				token="${db.cfg.username.token}"
				value="${db.cfg.username}" />
		<replace file="${dist_config.dir}/sources.xml"
				token="${db.cfg.username.token}"
				value="${db.cfg.username.subjapi}" />
	</target>


	<!-- - - - - - - - - target: config_db_pwd - -->
	<target name="config_db_pwd"
			if="db.cfg.password" >
		<replace file="${dist_config.dir}/hibernate.cfg.xml"
				token="${db.cfg.password.token}"
				value="${db.cfg.password}" />
		<replace file="${dist_config.dir}/sources.xml"
				token="${db.cfg.password.token}"
				value="${db.cfg.password.subjapi}" />
	</target>


	<!-- - - - - - - - - target: create_hsqldb - -->
	<target name="create_hsqldb" >
		<sequential>
			<antcall target="config_hsqldb_rc" inheritrefs="true" />
			<parallel>
				<antcall target="start_hsqldb" inheritrefs="true" />
				<sequential>
					<sleep seconds="5"/>
					<antcall target="create_hsqldb_tables" inheritrefs="true" />
					<antcall target="run_treexmlloader" inheritrefs="true" />
					<antcall target="run_subsystemxmlloader" inheritrefs="true" />
					<antcall target="run_subjectfileloader" inheritrefs="true" />
					<antcall target="run_signetproxy" inheritrefs="true" />
					<antcall target="stop_hsqldb" inheritrefs="true" />
				</sequential>
			</parallel>
		</sequential>
	</target>


	<!-- - - - - - - - - target: config_hsqldb_rc - -->
	<target name="config_hsqldb_rc" >
		<replace file="${hsqldb.rc.file}"
				token="${db.cfg.url.token}"
				value="${db.cfg.url}" />
	</target>


	<!-- - - - - - - - - target: start_hsqldb - - - - - - - - - - - - -->
	<target name="start_hsqldb">
		<java classname="org.hsqldb.Server"
				dir="${dist.demo.dir}" 
				fork="true" >
			<arg value="-database.0" />
			<arg value="${dist.dir}/data/SignetQsDb" />
			<arg value="-dbname.0" />
			<arg value="SignetQsDb" />
			<classpath>
				<pathelement location="${hsqldb.jar.file}"/>
				<pathelement location="${dist.util.dir}/config"/>
			</classpath>
		</java>
    </target>

	<!-- - - - - - - - - target: stop_hsqldb - - - - - - - - - - - - - -->
	<target name="stop_hsqldb">
		<java jar="${hsqldb.jar.file}"
				dir="${dist.demo.dir}" 
				fork="true" >
			<arg value="--sql" />
			<arg value="SHUTDOWN" />
			<arg value="${hsqldb.rc.arg}" />
			<arg value="${hsqldb.rc.file}" />
			<arg value="${hsqldb.rc.target}" />
		</java>
    </target>

	<!-- - - - - - - - - target: create_hsqldb_tables - -->
	<target name="create_hsqldb_tables" >
		<java jar="${hsqldb.jar.file}"
				dir="${dist.util.dir}"
				fork="true" >
			<arg value="${hsqldb.rc.arg}" />
			<arg value="${hsqldb.rc.file}" />
			<arg value="${hsqldb.rc.target}" />
			<arg value="${hsqldb.ddl}" />
		</java>
	</target>


	<!-- - - - - - - - - target: run_treexmlloader - -->
	<target name="run_treexmlloader" >
		<exec os="Windows XP, Windows NT"
				dir="${TreeXmlLoader.dir}"
				executable="cmd.exe" >
			<arg line="/C run.bat -q ${TreeXmlLoader.arg}"/>
		</exec>
		<exec os="Linux, Mac OS X"
				dir="${TreeXmlLoader.dir}"
				executable="/bin/sh">
			<arg value="-c" />
			<arg value="./run.sh -q ${TreeXmlLoader.arg}" />
		</exec>
	</target>


	<!-- - - - - - - - - target: run_subsystemxmlloader - -->
	<target name="run_subsystemxmlloader" >
		<exec os="Windows XP, Windows NT"
				dir="${SubsystemXmlLoader.dir}"
				executable="cmd.exe">
			<arg line="/C run.bat -q ${SubsystemXmlLoader.arg.1} ${SubsystemXmlLoader.arg.2}"/>
		</exec>
		<exec os="Linux, Mac OS X"
				dir="${SubsystemXmlLoader.dir}"
				executable="/bin/sh">
			<arg value="-c" />
			<arg value="./run.sh -q ${SubsystemXmlLoader.arg.1} ${SubsystemXmlLoader.arg.2}"/>
		</exec>
	</target>


	<!-- - - - - - - - - target: run_subjectfileloader - -->
	<target name="run_subjectfileloader" >
		<exec os="Windows XP, Windows NT"
				dir="${SubjectFileLoader.dir}"
				executable="cmd.exe">
			<arg line="/C run.bat -q ${SubjectFileLoader.arg}"/>
		</exec>
		<exec os="Linux, Mac OS X"
				dir="${SubjectFileLoader.dir}"
				executable="/bin/sh">
			<arg value="-c" />
			<arg value="./run.sh -q ${SubjectFileLoader.arg}"/>
		</exec>
	</target>


	<!-- - - - - - - - - target: run_signetproxy - -->
	<target name="run_signetproxy" >
		<exec os="Windows XP, Windows NT"
				dir="${SignetProxy.dir}"
				executable="cmd.exe">
			<arg line="/C run.bat ${SignetProxy.arg}"/>
		</exec>
		<exec os="Linux, Mac OS X"
				dir="${SignetProxy.dir}"
				executable="/bin/sh">
			<arg value="-c" />
			<arg value="./run.sh ${SignetProxy.arg}"/>
		</exec>
	</target>


	<!-- - - - - - - - - target: create_webapp - -->
	<target name="create_webapp"
		depends="unpack_tomcat, create_war_file, deploy_to_tomcat" >
	</target>


	<!-- - - - - - - - - target: unpack_tomcat - -->
	<target name="unpack_tomcat" >
		<unzip dest="${tomcat.unzip.dir}" src="${tomcat.installer.file}" />
		<chmod perm="755" >
			<fileset dir="${tomcat.unzip.dir}" >
			    <include name="**/*.sh"/>
			    <include name="**/*.bat"/>
			</fileset>
		</chmod>
		<move file="${tomcat.installer.topdir}" tofile="${tomcat.renamed.topdir}" />
	</target>


	<!-- - - - - - - - - target: create_war_file - -->
	<target name="create_war_file"
			depends="create_config_fileset, create_altconfig_fileset_yes, copy_libs,
					copy_altweb_configs_yes, copy_altweb_images_yes, copy_altweb_metainf_yes,
					copy_altweb_jsps_yes, copy_altweb_scripts_yes, copy_altweb_styles_yes,
					copy_altweb_tiles_yes" >

		<war destfile="${signet.war}" 
				webxml="${source_webapp.config.dir}/web.xml" >

			<fileset dir="${source_webapp.dir}" includes="index.jsp" />

			<metainf dir="${source_webapp.metainf.dir}" />
			<metainf refid="custom.webmetainf.fileset" />

			<webinf dir="${source_webapp.images.dir}"		prefix="${dirname.images}" />
			<webinf refid="custom.webimages.fileset"		prefix="${dirname.images}" />

			<webinf dir="${source_webapp.jsp.dir}"			prefix="${dirname.jsp}" />
			<webinf refid="custom.webjsp.fileset"			prefix="${dirname.jsp}" />

			<webinf dir="${source_webapp.scripts.dir}"		prefix="${dirname.scripts}" />
			<webinf refid="custom.webscripts.fileset"		prefix="${dirname.scripts}" />

			<webinf dir="${source_webapp.styles.dir}"		prefix="${dirname.styles}" />
			<webinf refid="custom.webstyles.fileset"		prefix="${dirname.styles}" />

			<webinf dir="${source_webapp.tiles.dir}"		prefix="${dirname.tiles}" />
			<webinf refid="custom.webtiles.fileset"			prefix="${dirname.tiles}" />

			<webinf dir="${source_webapp.config.dir}" >		<exclude name="web.xml"/> </webinf>
			<webinf refid="custom.webconfig.fileset" />

			<!-- Note: config files are copied from dist_config.dir because they may get
			     modified by the configure_hibernate target -->
			<classes dir="${dist_config.dir}" />
<!--			<classes refid="source.config.fileset" /> -->
			<classes refid="custom.config.fileset" /> 

			<lib dir="${dist_lib.dir}" />
		</war>
	</target>


	<!-- - - - - - - - - target: deploy_to_tomcat - -->
	<target name="deploy_to_tomcat" >
		<copy todir="${tomcat.renamed.topdir}/webapps"
				file="${signet.war}"
				overwrite="true" />
	</target>


	<!-- - - - - - - - - target: create_prod_archives - - - - - - -->
	<target name="create_prod_archives"
		depends="create_win_archive, create_linux_archive" >
	</target>


	<!-- - - - - - - - - target: create_win_archive - - - - - - - -->
	<target name="create_win_archive"
			if="running_windows"
			depends="get_os_property" >

		<delete file="${signet.zipfile}" />
		
		<zip destfile="${signet.zipfile}"
				encoding="UTF8"
				duplicate="fail"
				basedir="${dist.dir.root}"
				includes="${dist.dir.name}/**"
				excludes="${signet.zipfile}, ${signet.gzipfile}" >
		</zip>
	</target>


	<!-- - - - - - - - - target: create_linux_archive - - - - - - -->
	<target name="create_linux_archive"
			if="running_unix"
			depends="get_os_property" >

		<delete file="${signet.gzipfile}" />
		<!-- Ant's tar is really stupid in that it cannot preserve file	-->
		<!-- permissions (a limitation of its Java implementation).		-->
		<!-- Therefore, we set everything to "rwxr-xr-x" (mode="755").	-->
		<!-- If left to its own devices, Ant's tar sets everything to	-->
		<!-- "644" which doesn't allow the *.sh scripts to run.			-->
<!--
		<tar destfile="${signet.gzipfile}"
				longfile="gnu"
				compression="gzip" >
			<tarfileset 
					mode="755"
					dir="${dist.dir.root}"
					includes="${dist.dir.name}/**" >
			</tarfileset>
		</tar>
-->
		<exec os="Linux" 
				dir="${dist.dir.root}"
				executable="/bin/tar" >
			<arg value="-c" /> <!-- create -->
			<arg value="-p" /> <!-- preserve permissions -->
			<arg value="-z" /> <!-- gzip archive contents -->
			<arg value="-f" /> <!-- output file follows -->
			<arg value="${signet.gzipfile}" />
			<arg value="${dist.dir.name}" />
		</exec>
		<exec os="Mac OS X" 
				dir="${dist.dir.root}"
				executable="/usr/bin/tar" >
			<arg value="-c" /> <!-- create -->
			<arg value="-p" /> <!-- preserve permissions -->
			<arg value="-z" /> <!-- gzip archive contents -->
			<arg value="-f" /> <!-- output file follows -->
			<arg value="${signet.gzipfile}" />
			<arg value="${dist.dir.name}" />
		</exec>
	</target>


	<!-- - - - - - - - - target: get_os_property - - - - - - -->
	<target name="get_os_property" >
		<condition property="running_windows" >
			<os family="windows" />
		</condition>
		<condition property="running_unix" >
			<or>
				<os family="unix" />
				<os family="mac" />
			</or>
		</condition>
	</target>

</project>

