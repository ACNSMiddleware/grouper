Signet version 0.6 - October, 2005

What's New
----------

(1)  Date conditions added to Assignments -- future effective date and 
     expiration date.

(2)  Designated Driver support for Privilege granting

     - You can enable one or more individuals to act as you in a Signet session,
       giving them the right to grant those privileges to others that you
       yourself can give.  The right to proxy soneone else's privileges for the
       purpose of extending them to others is conferred on a subsystem by
       subsystem basis.  The person given such proxy powers does not themselves
       have the privileges to use; they can only grant them to others on your
       behalf.
     - Designated driver assignments are per-subsystem and can have future
       effective and expiration date conditions.

(2) Support for System Administrator and Subsystem Owner roles

     - Estabslihed "Signet" as an internally supplied subject with a subject
       type of "application".  This entity has broad initial granting powers,
       but being non-human and on-sentient cannot use the UI to wield them.
     - A SignetProxy utility script is used to designate those in the Signet
       System Admministrator role.
     - System Administrator can proxy Signet to establish Subsystem Owners.
     - Subsystem Owners can grant proxy Signet to grant any initial assignments
       to key individuals to boostrap a chain of delegation.
     - these roles replace the transitional "SignetSuperSubject" entity defined
       in prior releases.
     
(3) The view of your own privileges and of others is now unified, with the same
    columns and contols, consistent avalability of edit/revoke, etc.

(4) Added View controls to switch between "privileges held" and "privileges
    given" for all subject-specific views, including yourself.

    One problem remains from prior releases -- showing lists with disabled
    (non-selectable) items in Mac/Safari simply doesn't work.  This limits the
    UI's ability to enable only appropriate scope items during an assignment.

Quick Start
------------------------

(1) Execute the DDL (sql/hsql.sql or sql/sybase.sql) on your database server to
    create the Signet database.

(2) Create a "signet" web application context in your servlet container.

(3) Point the web application context to the webapp/signet directory in this
    distribution.

(4) If you are using some database other than the default HSQL database supplied
    with this Signet distribution, copy your JDBC driver to two directories:
    webapp/signet/WEB-INF/lib and util/lib.

(5) Configure your database connection in two places:
    webapp/signet/WEB-INF/classes/hibernate.cfg.xml and
    util/classes/hibernate.cfg.xml. Uncomment or add a database section
    and set the connection parameters (hibernate.connection.url,
    hibernate.connection.username, hibernate.connection.password).

(6) Set your preferred hibernate logging level in two places:
    webapp/signet/WEB-INF/classes/log4j.properties and
    util/classes/log4j.properties.

(7) Change the feedback href (@FEEDBACK_URL@) in webapp/signet/tiles/footer.jsp
    to point to your preferred email address.

(8) Configure your subject sources in two places:
    webapp/signet/WEB-INF/classes/sources.xml and util/classes/sources.xml.
    If you are using the local subject adapter, add or uncomment a database
    section, and set the database connection parameters (@DB_URL@,
    @DB_USERNAME@, @DB_PASSWORD@).

(9) Note: if you are using Tomcat for authenticating users, you will need to add
    them to your conf/tomcat-users.xml file.  These users will need to be the
    same as the subject IDs of users identified as Subjects within Signet.

To populate the Signet demo application with sample data:
        
  (1) Load the sample organization-tree data:
    (a) Update the sample shell script util/treeloader/run.sh to point
        JAVA_HOME to the location of your JDK.
    (b) Use the TreeXMLLoader to create the demo sample organization-tree
        by executing the util/treeloader/run.sh script with the sample
        demo/Tree.xml file, e.g., > run.sh ../../demo/data/Tree.xml

  (2) Load the sample Subsystem data:
    (a) Update the sample shell script util/subsystemloader/run.sh to point
        JAVA_HOME to the location of your JDK.
    (b) Use the SubsystemXmlLoader to create the demo sample Subsystem by
        executing the util/subsystemloader/run.sh script with the sample
        demo/data/Subsystem.xml file, e.g.,
        > run.sh ../../demo/data/Subsystem.xml

  (3) Load the sample Subject data:
    (a) Update the sample shell script util/subjectloader/run.sh to point
        JAVA_HOME to the location of your JDK.
    (b) Modify the demo/data/Subject.txt file with any additional local Subject
        identities for your site.
    (c) Use the SubjectFileLoader to to load that sample person data by executing
        the util/personloader/run.sh script with the sample demo/Subject.txt
        file, e.g., > run.sh ../../demo/data/subject.txt

  (4) Add login-names to your web server's authentication mechanism, with any
      passwords you like. Login names must correspond to the principal
      identifier (e.g., "demo" in the sample data) of one or more Subjects
      loaded above.


License
-------

This software is distributed under the terms of the license as described in the
license.txt file.

This product includes software developed by the Apache Software Foundation
(http://www.apache.org/) and Hibernate.org (http://www.hibernate.org).
