Signet version 0.6 - October, 2005

What's New
----------

(1)  Date conditions added to Assignments -- future effective date and 
     expiration date.

(2)  Designated Driver support for Privilege granting

     - You can enable one or more individuals to act as you in a Signet session,
       giving them the right to grant those privileges to others that you
       yourself can give.
     - Designated driver assignments are per-subsystem and can have future
       effective and expiration date conditions.

(2) Support for System Administrator and Subsystem Owner roles

     - Established "Signet" as an internally supplied subject with a subject
       type of "application".  This entity has broad initial granting powers,
       but being non-human and non-sentient cannot use the UI to wield them.
     - A SignetProxy utility script is used to designate those in the Signet
       System Admministrator role.
     - System Administrator can proxy Signet to establish Subsystem Owners.
     - Subsystem Owners can grant proxy Signet to grant any initial assignments
       to key individuals to boostrap a chain of delegation.
     - These roles replace the transitional "SignetSuperSubject" entity defined
       in prior releases.
     
(3) The view of your own privileges and of others is now unified, with the same
    columns and contols, consistent avalability of edit/revoke, etc.

(4) Added View controls to switch between "privileges held" and "privileges
    given" for all subject-specific views, including yourself.

    One problem remains from prior releases -- showing lists with disabled
    (non-selectable) items in Mac/Safari simply doesn't work.  This limits the
    UI's ability to enable only appropriate scope items during an assignment.

Quick Start
------------------------

(1) Execute the DDL (sql/hsql.sql or sql/sybase.sql) on your database server to
    create the Signet database.

(2) Create a "signet" web application context in your servlet container.

(3) Point the web application context to the webapp/signet directory in this
    distribution.

(4) Copy your JDBC driver to two directories: webapp/signet/WEB-INF/lib (for
    use by the Web application) and lib (for use by the utility programs).

(5) Configure your database connection by editing the config/hibernate.cfg.xml
    file. Uncomment or add a database section and set the connection parameters
    (hibernate.dialect, hibernate.connection.driver_class,
    hibernate.connection.url, hibernate.connection.username, and
    hibernate.connection.password). Copy this edited file to
    webapp/signet/WEB-INF/classes/hibernate.cfg.xml.

(6) Set your preferred hibernate logging level by editing the
    config/log4j.properties file. Copy this edited file to
    webapp/signet/WEB-INF/classes/log4j.properties.

(7) Change the feedback href (@FEEDBACK_URL@) in webapp/signet/tiles/footer.jsp
    to point to your preferred email address.

(8) Configure your subject sources in config/sources.xml. If you are using the
    local subject adapter, add or uncomment a database section, and set the
    database connection parameters (@DB_DRIVER@, @DB_URL@, @DB_USERNAME@, and
    @DB_PASSWORD@). Copy this edited file to
    webapp/signet/WEB-INF/classes/sources.xml.

To populate the Signet demo application with sample data:

  (1) Set your JAVA_HOME environment variable to the location of your JDK.
        
  (2) Load the sample organization-tree data:
    Use the TreeXMLLoader to create the demo sample organization-tree
    by executing the util/TreeXmlLoader/run.sh script with the sample
    demo_tree.xml file, e.g.,
      > run.sh demo_tree.xml

  (3) Load the sample Subsystem data:
    Use the SubsystemXmlLoader to create the demo sample Subsystem by
    executing the util/SubsystemXmlLoader/run.sh script with the sample
    demo_subsystem.xml file, e.g.,
      > run.sh demo_subsystem.xml

  (4) Load the sample Subject data:
    (a) Modify the util/SubjectFileLoader/demo_subject.txt file with any
        additional local Subject identities for your site.
    (b) Use the SubjectFileLoader to load that sample person data by
        executing the util/SubjectFileLoader/run.sh script with the sample
        demo_subject.txt file, e.g.,
          > run.sh demo_subject.txt

  (5) Add login-names to your web server's authentication mechanism, with any
      passwords you like. Login names must correspond to the principal
      identifier (e.g., "demo" in the sample data) of one or more Subjects
      loaded above.

  (6) Establish System Administrator and Subsystem Owner roles
    (b) Use the util/SignetProxy/run.sh script to designate online System
        Administrator(s). The script takes two arguments:
        
          1 - Action to take -- grant | revoke | list
          2 - For grant or revoke, a login ID from the subject table
          
    (c) Someone designated thusly as a System Administrator can log into the UI,
        "act for" Signet (the control to switch identities is on the right of
        the main interface page), an use the Designated Driver feature to 
        enable others to proxy Signet for an individual subsystem.  These people
        are the "Subsystem Owners" and can do all initial granting of any
        privileges for that subsystem. 

License
-------

This software is distributed under the terms of the license as described in the
license.txt file.

This product includes software developed by the Apache Software Foundation
(http://www.apache.org/) and Hibernate.org (http://www.hibernate.org).
